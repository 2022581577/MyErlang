!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALERT	deps/lager-master/include/lager.hrl	/^-define(ALERT, 2).$/;"	d
ALERT	include/lager.hrl	/^-define(ALERT, 2).$/;"	d
BEAM_TIME	myfile/reloader.erl	/^-define(BEAM_TIME,beam_time).$/;"	d
CALLBACK_MODULE	src/mod/gen_server2.erl	/^-define(CALLBACK_MODULE,callback_module).$/;"	d
CLIENT_LOCAL_FILE	include/emysql.hrl	/^-define(CLIENT_LOCAL_FILE, 128).$/;"	d
CLIENT_MULTI_RESULTS	include/emysql.hrl	/^-define(CLIENT_MULTI_RESULTS, 131072).$/;"	d
CLIENT_MULTI_STATEMENTS	include/emysql.hrl	/^-define(CLIENT_MULTI_STATEMENTS, 65536).$/;"	d
CLOSE_LIST	src/test/a_star.erl	/^-define(CLOSE_LIST, close_list).$/;"	d
COM_BINLOG_DUMP	src/mysql/emysql/emysql_conn.erl	/^-define(COM_BINLOG_DUMP, 16#12).$/;"	d
COM_CHANGE_USER	src/mysql/emysql/emysql_conn.erl	/^-define(COM_CHANGE_USER, 16#11).$/;"	d
COM_CONNECT	src/mysql/emysql/emysql_conn.erl	/^-define(COM_CONNECT, 16#0b).$/;"	d
COM_CONNECT_OUT	src/mysql/emysql/emysql_conn.erl	/^-define(COM_CONNECT_OUT, 16#14).$/;"	d
COM_CREATE_DB	src/mysql/emysql/emysql_conn.erl	/^-define(COM_CREATE_DB, 16#05).$/;"	d
COM_DEBUG	src/mysql/emysql/emysql_conn.erl	/^-define(COM_DEBUG, 16#0d).$/;"	d
COM_DELAYED_INSERT	src/mysql/emysql/emysql_conn.erl	/^-define(COM_DELAYED_INSERT, 16#10).$/;"	d
COM_DROP_DB	src/mysql/emysql/emysql_conn.erl	/^-define(COM_DROP_DB, 16#06).$/;"	d
COM_FIELD_LIST	src/mysql/emysql/emysql_conn.erl	/^-define(COM_FIELD_LIST, 16#04).$/;"	d
COM_INIT_DB	src/mysql/emysql/emysql_conn.erl	/^-define(COM_INIT_DB, 16#02).$/;"	d
COM_PING	src/mysql/emysql/emysql_conn.erl	/^-define(COM_PING, 16#0e).$/;"	d
COM_PROCESS_INFO	src/mysql/emysql/emysql_conn.erl	/^-define(COM_PROCESS_INFO, 16#0a).$/;"	d
COM_PROCESS_KILL	src/mysql/emysql/emysql_conn.erl	/^-define(COM_PROCESS_KILL, 16#0c).$/;"	d
COM_QUERY	src/mysql/emysql/emysql_conn.erl	/^-define(COM_QUERY, 16#03).$/;"	d
COM_QUIT	src/mysql/emysql/emysql_conn.erl	/^-define(COM_QUIT, 16#01).$/;"	d
COM_REFRESH	src/mysql/emysql/emysql_conn.erl	/^-define(COM_REFRESH, 16#07).$/;"	d
COM_REGISTER_SLAVE	src/mysql/emysql/emysql_conn.erl	/^-define(COM_REGISTER_SLAVE, 16#15).$/;"	d
COM_SET_OPTION	src/mysql/emysql/emysql_conn.erl	/^-define(COM_SET_OPTION, 16#1b).$/;"	d
COM_SHUTDOWN	src/mysql/emysql/emysql_conn.erl	/^-define(COM_SHUTDOWN, 16#08).$/;"	d
COM_SLEEP	src/mysql/emysql/emysql_conn.erl	/^-define(COM_SLEEP, 16#00).$/;"	d
COM_STATISTICS	src/mysql/emysql/emysql_conn.erl	/^-define(COM_STATISTICS, 16#09).$/;"	d
COM_STMT_CLOSE	src/mysql/emysql/emysql_conn.erl	/^-define(COM_STMT_CLOSE, 16#19).$/;"	d
COM_STMT_EXECUTE	src/mysql/emysql/emysql_conn.erl	/^-define(COM_STMT_EXECUTE, 16#17).$/;"	d
COM_STMT_FETCH	src/mysql/emysql/emysql_conn.erl	/^-define(COM_STMT_FETCH, 16#1c).$/;"	d
COM_STMT_PREPARE	src/mysql/emysql/emysql_conn.erl	/^-define(COM_STMT_PREPARE, 16#16).$/;"	d
COM_STMT_RESET	src/mysql/emysql/emysql_conn.erl	/^-define(COM_STMT_RESET, 16#1a).$/;"	d
COM_STMT_SEND_LONG_DATA	src/mysql/emysql/emysql_conn.erl	/^-define(COM_STMT_SEND_LONG_DATA, 16#18).$/;"	d
COM_TABLE_DUMP	src/mysql/emysql/emysql_conn.erl	/^-define(COM_TABLE_DUMP, 16#13).$/;"	d
COM_TIME	src/mysql/emysql/emysql_conn.erl	/^-define(COM_TIME, 16#0f).$/;"	d
CONFIG	include/common.hrl	/^-define(CONFIG(Key), game_config:get_config(Key)).$/;"	d
CONNECT_TIMEOUT	deps/mysql/mysql.erl	/^-define(CONNECT_TIMEOUT, 5000).$/;"	d
CONNECT_TIMEOUT	deps/mysql/mysql_recv.erl	/^-define(CONNECT_TIMEOUT, 5000).$/;"	d
CONNECT_TIMEOUT	src/mysql/mysql.erl	/^-define(CONNECT_TIMEOUT, 5000).$/;"	d
CONNECT_TIMEOUT	src/mysql/mysql_recv.erl	/^-define(CONNECT_TIMEOUT, 5000).$/;"	d
CONNECT_WITH_DB	deps/mysql/mysql_auth.erl	/^-define(CONNECT_WITH_DB, 8).$/;"	d
CONNECT_WITH_DB	include/emysql.hrl	/^-define(CONNECT_WITH_DB, 8).$/;"	d
CONNECT_WITH_DB	src/mysql/mysql_auth.erl	/^-define(CONNECT_WITH_DB, 8).$/;"	d
CONN_TEST_PERIOD	include/emysql.hrl	/^-define(CONN_TEST_PERIOD, 28000).$/;"	d
CRASH_LOG	deps/lager-master/src/error_logger_lager_h.erl	/^-define(CRASH_LOG(Event),$/;"	d
CRASH_LOG	src/lager/error_logger_lager_h.erl	/^-define(CRASH_LOG(Event),$/;"	d
CRITICAL	deps/lager-master/include/lager.hrl	/^-define(CRITICAL, 4).$/;"	d
CRITICAL	include/lager.hrl	/^-define(CRITICAL, 4).$/;"	d
CRITICAL_MSG	include/logger.hrl	/^-define(CRITICAL_MSG(Format), logger:critical_msg(?MODULE,?LINE,Format, [])).$/;"	d
CRITICAL_MSG	include/logger.hrl	/^-define(CRITICAL_MSG(Format, Args), logger:critical_msg(?MODULE,?LINE,Format, Args)).$/;"	d
D	include/logger.hrl	/^-define(D(Format), logger:debug_msg(?MODULE,?LINE,Format, [])).$/;"	d
D	include/logger.hrl	/^-define(D(Format, Args), logger:debug_msg(?MODULE,?LINE,Format, Args)).$/;"	d
DEBUG	deps/lager-master/include/lager.hrl	/^-define(DEBUG, 128).$/;"	d
DEBUG	include/lager.hrl	/^-define(DEBUG, 128).$/;"	d
DEFAULT_CHECK_INTERVAL	deps/lager-master/src/lager_file_backend.erl	/^-define(DEFAULT_CHECK_INTERVAL, 1000).$/;"	d
DEFAULT_CHECK_INTERVAL	src/lager/lager_file_backend.erl	/^-define(DEFAULT_CHECK_INTERVAL, 1000).$/;"	d
DEFAULT_LOG_LEVEL	deps/lager-master/src/lager_file_backend.erl	/^-define(DEFAULT_LOG_LEVEL, info).$/;"	d
DEFAULT_LOG_LEVEL	src/lager/lager_file_backend.erl	/^-define(DEFAULT_LOG_LEVEL, info).$/;"	d
DEFAULT_ROTATION_COUNT	deps/lager-master/src/lager_file_backend.erl	/^-define(DEFAULT_ROTATION_COUNT, 5).$/;"	d
DEFAULT_ROTATION_COUNT	src/lager/lager_file_backend.erl	/^-define(DEFAULT_ROTATION_COUNT, 5).$/;"	d
DEFAULT_ROTATION_DATE	deps/lager-master/src/lager_file_backend.erl	/^-define(DEFAULT_ROTATION_DATE, "$D0"). %% midnight$/;"	d
DEFAULT_ROTATION_DATE	src/lager/lager_file_backend.erl	/^-define(DEFAULT_ROTATION_DATE, "$D0"). %% midnight$/;"	d
DEFAULT_ROTATION_SIZE	deps/lager-master/src/lager_file_backend.erl	/^-define(DEFAULT_ROTATION_SIZE, 10485760). %% 10mb$/;"	d
DEFAULT_ROTATION_SIZE	src/lager/lager_file_backend.erl	/^-define(DEFAULT_ROTATION_SIZE, 10485760). %% 10mb$/;"	d
DEFAULT_STANDALONE_TIMEOUT	deps/mysql/mysql_conn.erl	/^-define(DEFAULT_STANDALONE_TIMEOUT, 5000).$/;"	d
DEFAULT_STANDALONE_TIMEOUT	src/mysql/mysql_conn.erl	/^-define(DEFAULT_STANDALONE_TIMEOUT, 5000).$/;"	d
DEFAULT_SYNC_INTERVAL	deps/lager-master/src/lager_file_backend.erl	/^-define(DEFAULT_SYNC_INTERVAL, 1000).$/;"	d
DEFAULT_SYNC_INTERVAL	src/lager/lager_file_backend.erl	/^-define(DEFAULT_SYNC_INTERVAL, 1000).$/;"	d
DEFAULT_SYNC_LEVEL	deps/lager-master/src/lager_file_backend.erl	/^-define(DEFAULT_SYNC_LEVEL, error).$/;"	d
DEFAULT_SYNC_LEVEL	src/lager/lager_file_backend.erl	/^-define(DEFAULT_SYNC_LEVEL, error).$/;"	d
DEFAULT_SYNC_SIZE	deps/lager-master/src/lager_file_backend.erl	/^-define(DEFAULT_SYNC_SIZE, 1024*64). %% 64kb$/;"	d
DEFAULT_SYNC_SIZE	src/lager/lager_file_backend.erl	/^-define(DEFAULT_SYNC_SIZE, 1024*64). %% 64kb$/;"	d
DEFAULT_TRACER	deps/lager-master/include/lager.hrl	/^-define(DEFAULT_TRACER, lager_default_tracer).$/;"	d
DEFAULT_TRACER	include/lager.hrl	/^-define(DEFAULT_TRACER, lager_default_tracer).$/;"	d
DEFAULT_TRUNCATION	deps/lager-master/include/lager.hrl	/^-define(DEFAULT_TRUNCATION, 4096).$/;"	d
DEFAULT_TRUNCATION	include/lager.hrl	/^-define(DEFAULT_TRUNCATION, 4096).$/;"	d
DIALYZER_APPS	deps/lager-master/Makefile	/^DIALYZER_APPS = kernel stdlib erts sasl eunit syntax_tools compiler crypto \\$/;"	m
DIALYZER_FLAGS	deps/lager-master/tools.mk	/^DIALYZER_FLAGS ?= -Wunmatched_returns$/;"	m
EBIN_DIR	Makefile	/^EBIN_DIR := ".\/ebin"$/;"	m
EBIN_DIR	myfile/Makefile	/^EBIN_DIR := ".\/ebin"$/;"	m
EMERGENCY	deps/lager-master/include/lager.hrl	/^-define(EMERGENCY, 1).$/;"	d
EMERGENCY	include/lager.hrl	/^-define(EMERGENCY, 1).$/;"	d
ERL	Makefile	/^ERL := erl$/;"	m
ERL	myfile/Makefile	/^ERL := erl$/;"	m
ERROR	deps/lager-master/include/lager.hrl	/^-define(ERROR, 8).$/;"	d
ERROR	include/lager.hrl	/^-define(ERROR, 8).$/;"	d
ERROR	include/logger.hrl	/^-define(ERROR(Format), logger:error_msg(?MODULE,?LINE,Format, [])).    $/;"	d
ERROR	include/logger.hrl	/^-define(ERROR(Format, Args), logger:error_msg(?MODULE,?LINE,Format, Args)).    $/;"	d
FIELD_TYPE_BIT	include/emysql.hrl	/^-define(FIELD_TYPE_BIT, 16#10).$/;"	d
FIELD_TYPE_BLOB	include/emysql.hrl	/^-define(FIELD_TYPE_BLOB, 16#fc).$/;"	d
FIELD_TYPE_DATE	include/emysql.hrl	/^-define(FIELD_TYPE_DATE, 16#0a).$/;"	d
FIELD_TYPE_DATETIME	include/emysql.hrl	/^-define(FIELD_TYPE_DATETIME, 16#0c).$/;"	d
FIELD_TYPE_DECIMAL	include/emysql.hrl	/^-define(FIELD_TYPE_DECIMAL, 16#00).$/;"	d
FIELD_TYPE_DOUBLE	include/emysql.hrl	/^-define(FIELD_TYPE_DOUBLE, 16#05).$/;"	d
FIELD_TYPE_ENUM	include/emysql.hrl	/^-define(FIELD_TYPE_ENUM, 16#f7).$/;"	d
FIELD_TYPE_FLOAT	include/emysql.hrl	/^-define(FIELD_TYPE_FLOAT, 16#04).$/;"	d
FIELD_TYPE_GEOMETRY	include/emysql.hrl	/^-define(FIELD_TYPE_GEOMETRY, 16#ff).$/;"	d
FIELD_TYPE_INT24	include/emysql.hrl	/^-define(FIELD_TYPE_INT24, 16#09).$/;"	d
FIELD_TYPE_LONG	include/emysql.hrl	/^-define(FIELD_TYPE_LONG, 16#03).$/;"	d
FIELD_TYPE_LONGLONG	include/emysql.hrl	/^-define(FIELD_TYPE_LONGLONG, 16#08).$/;"	d
FIELD_TYPE_LONG_BLOB	include/emysql.hrl	/^-define(FIELD_TYPE_LONG_BLOB, 16#fb).$/;"	d
FIELD_TYPE_MEDIUM_BLOB	include/emysql.hrl	/^-define(FIELD_TYPE_MEDIUM_BLOB, 16#fa).$/;"	d
FIELD_TYPE_NEWDATE	include/emysql.hrl	/^-define(FIELD_TYPE_NEWDATE, 16#0e).$/;"	d
FIELD_TYPE_NEWDECIMAL	include/emysql.hrl	/^-define(FIELD_TYPE_NEWDECIMAL, 16#f6).$/;"	d
FIELD_TYPE_NULL	include/emysql.hrl	/^-define(FIELD_TYPE_NULL, 16#06).$/;"	d
FIELD_TYPE_SET	include/emysql.hrl	/^-define(FIELD_TYPE_SET, 16#f8).$/;"	d
FIELD_TYPE_SHORT	include/emysql.hrl	/^-define(FIELD_TYPE_SHORT, 16#02).$/;"	d
FIELD_TYPE_STRING	include/emysql.hrl	/^-define(FIELD_TYPE_STRING, 16#fe).$/;"	d
FIELD_TYPE_TIME	include/emysql.hrl	/^-define(FIELD_TYPE_TIME, 16#0b).$/;"	d
FIELD_TYPE_TIMESTAMP	include/emysql.hrl	/^-define(FIELD_TYPE_TIMESTAMP, 16#07).$/;"	d
FIELD_TYPE_TINY	include/emysql.hrl	/^-define(FIELD_TYPE_TINY, 16#01).$/;"	d
FIELD_TYPE_TINY_BLOB	include/emysql.hrl	/^-define(FIELD_TYPE_TINY_BLOB, 16#f9).$/;"	d
FIELD_TYPE_VARCHAR	include/emysql.hrl	/^-define(FIELD_TYPE_VARCHAR, 16#0f).$/;"	d
FIELD_TYPE_VAR_STRING	include/emysql.hrl	/^-define(FIELD_TYPE_VAR_STRING, 16#fd).$/;"	d
FIELD_TYPE_YEAR	include/emysql.hrl	/^-define(FIELD_TYPE_YEAR, 16#0d).$/;"	d
FLASH_POLICY_FILE	src/mod/mod_reader.erl	/^-define(FLASH_POLICY_FILE, <<"<cross-domain-policy><allow-access-from domain='*' to-ports='*' \/><\/cross-domain-policy>\\0">>).$/;"	d
FLASH_POLICY_REQ	src/mod/mod_reader.erl	/^-define(FLASH_POLICY_REQ, <<"<pol">>).$/;"	d
FLASH_POLICY_REQ_LEN	src/mod/mod_reader.erl	/^-define(FLASH_POLICY_REQ_LEN, 22).$/;"	d
GAME_CONF	src/misc/game_config.erl	/^-define(GAME_CONF, game_conf).$/;"	d
GAME_CONFIG_FILE	src/misc/game_config.erl	/^-define(GAME_CONFIG_FILE, ".\/config\/game.config").$/;"	d
GLOBAL_DATA_DISK	include/common.hrl	/^-define(GLOBAL_DATA_DISK, global_data_disk).$/;"	d
GLOBAL_DATA_RAM	include/common.hrl	/^-define(GLOBAL_DATA_RAM, global_data_ram).$/;"	d
HASH_FINAL	include/crypto_compat.hrl	/^-define(HASH_FINAL(Data), crypto:hash_final(Data)).$/;"	d
HASH_INIT	include/crypto_compat.hrl	/^-define(HASH_INIT(), crypto:hash_init(sha)).$/;"	d
HASH_SHA	include/crypto_compat.hrl	/^-define(HASH_SHA(Data), crypto:hash(sha, Data)).$/;"	d
HASH_UPDATE	include/crypto_compat.hrl	/^-define(HASH_UPDATE(Data, Salt), crypto:hash_update(Data, Salt)).$/;"	d
HEADER_LENGTH	include/common.hrl	/^-define(HEADER_LENGTH, 4).          % 消息头长度$/;"	d
HEART_TIMEOUT	include/common.hrl	/^-define(HEART_TIMEOUT, (90 * 1000)).  % 接收数据超时时间$/;"	d
INFO	deps/lager-master/include/lager.hrl	/^-define(INFO, 64).$/;"	d
INFO	include/lager.hrl	/^-define(INFO, 64).$/;"	d
INFO	include/logger.hrl	/^-define(INFO(Format), logger:info_msg(?MODULE,?LINE,Format, [])).$/;"	d
INFO	include/logger.hrl	/^-define(INFO(Format, Args), logger:info_msg(?MODULE,?LINE,Format, Args)).$/;"	d
INT_LOG	deps/lager-master/include/lager.hrl	/^-define(INT_LOG(Level, Format, Args),$/;"	d
INT_LOG	include/lager.hrl	/^-define(INT_LOG(Level, Format, Args),$/;"	d
L	deps/mysql/mysql.erl	/^-define(L(Msg), io:format("~p:~b ~p ~n", [?MODULE, ?LINE, Msg])).$/;"	d
L	deps/mysql/mysql_conn.erl	/^-define(L(Msg), io:format("~p:~b ~p ~n", [?MODULE, ?LINE, Msg])).$/;"	d
L	src/mysql/mysql.erl	/^-define(L(Msg), io:format("~p:~b ~p ~n", [?MODULE, ?LINE, Msg])).$/;"	d
L	src/mysql/mysql_conn.erl	/^-define(L(Msg), io:format("~p:~b ~p ~n", [?MODULE, ?LINE, Msg])).$/;"	d
LAGER_MD_KEY	deps/lager-master/src/lager.erl	/^-define(LAGER_MD_KEY, '__lager_metadata').$/;"	d
LAGER_MD_KEY	src/lager/lager.erl	/^-define(LAGER_MD_KEY, '__lager_metadata').$/;"	d
LEVEL2NUM	deps/lager-master/include/lager.hrl	/^-define(LEVEL2NUM(Level),$/;"	d
LEVEL2NUM	include/lager.hrl	/^-define(LEVEL2NUM(Level),$/;"	d
LEVELS	deps/lager-master/include/lager.hrl	/^-define(LEVELS,$/;"	d
LEVELS	include/lager.hrl	/^-define(LEVELS,$/;"	d
LIMIT_PACKET_NUM	src/mod/mod_reader.erl	/^-define(LIMIT_PACKET_NUM,1000).     %% 登陆流程数据包上限$/;"	d
LOCAL_FILES	deps/mysql/mysql.erl	/^-define(LOCAL_FILES, 128).$/;"	d
LOCAL_FILES	src/mysql/mysql.erl	/^-define(LOCAL_FILES, 128).$/;"	d
LOCAL_PLT	deps/lager-master/tools.mk	/^LOCAL_PLT = .local_dialyzer_plt$/;"	m
LOCK_TIMEOUT	include/emysql.hrl	/^-define(LOCK_TIMEOUT, 5000).$/;"	d
LOGFMT	deps/lager-master/src/error_logger_lager_h.erl	/^-define(LOGFMT(Level, Pid, Fmt, Args),$/;"	d
LOGFMT	src/lager/error_logger_lager_h.erl	/^-define(LOGFMT(Level, Pid, Fmt, Args),$/;"	d
LOGGER_HRL	include/logger.hrl	/^-define(LOGGER_HRL,"logger.hrl").$/;"	d
LOGMODULE	src/logger/loglevel.erl	/^-define(LOGMODULE, "error_logger").$/;"	d
LOGMSG	deps/lager-master/src/error_logger_lager_h.erl	/^-define(LOGMSG(Level, Pid, Msg),$/;"	d
LOGMSG	src/lager/error_logger_lager_h.erl	/^-define(LOGMSG(Level, Pid, Msg),$/;"	d
LOG_CACHE_NUM	src/logger/logger_h.erl	/^-define(LOG_CACHE_NUM,100).$/;"	d
LOG_CACHE_REF	src/logger/logger_h.erl	/^-define(LOG_CACHE_REF,log_cache_ref).$/;"	d
LOG_FILE_INDEX	src/logger/logger_h.erl	/^-define(LOG_FILE_INDEX,log_file_index).$/;"	d
LOG_FILE_OPTION	src/logger/logger_h.erl	/^-define(LOG_FILE_OPTION,[append, raw]).$/;"	d
LOG_LEVELS	src/logger/loglevel.erl	/^-define(LOG_LEVELS,[ {0, no_log, "No log"}$/;"	d
LOG_LIST_CACHE	src/logger/logger_h.erl	/^-define(LOG_LIST_CACHE,log_list_cache).$/;"	d
LOG_NONE	deps/lager-master/include/lager.hrl	/^-define(LOG_NONE, 0).$/;"	d
LOG_NONE	include/lager.hrl	/^-define(LOG_NONE, 0).$/;"	d
LONG_FLAG	deps/mysql/mysql_auth.erl	/^-define(LONG_FLAG, 4).$/;"	d
LONG_FLAG	include/emysql.hrl	/^-define(LONG_FLAG, 4).$/;"	d
LONG_FLAG	src/mysql/mysql_auth.erl	/^-define(LONG_FLAG, 4).$/;"	d
LONG_PASSWORD	deps/mysql/mysql_auth.erl	/^-define(LONG_PASSWORD, 1).$/;"	d
LONG_PASSWORD	include/emysql.hrl	/^-define(LONG_PASSWORD, 1).$/;"	d
LONG_PASSWORD	src/mysql/mysql_auth.erl	/^-define(LONG_PASSWORD, 1).$/;"	d
Log	deps/mysql/mysql.erl	/^-define(Log(LogFun,Level,Msg),$/;"	d
Log	deps/mysql/mysql_conn.erl	/^-define(Log(LogFun,Level,Msg),$/;"	d
Log	src/mysql/mysql.erl	/^-define(Log(LogFun,Level,Msg),$/;"	d
Log	src/mysql/mysql_conn.erl	/^-define(Log(LogFun,Level,Msg),$/;"	d
Log2	deps/mysql/mysql.erl	/^-define(Log2(LogFun,Level,Msg,Params),$/;"	d
Log2	deps/mysql/mysql_conn.erl	/^-define(Log2(LogFun,Level,Msg,Params),$/;"	d
Log2	src/mysql/mysql.erl	/^-define(Log2(LogFun,Level,Msg,Params),$/;"	d
Log2	src/mysql/mysql_conn.erl	/^-define(Log2(LogFun,Level,Msg,Params),$/;"	d
MAKE_OPTS	Makefile	/^MAKE_OPTS := {d,zhongbinbin}$/;"	m
MAKE_OPTS	myfile/Makefile	/^MAKE_OPTS := {d,kongqq}$/;"	m
MAXPACKETBYTES	include/emysql.hrl	/^-define(MAXPACKETBYTES, 50000000).$/;"	d
MAX_PACKET_SIZE	deps/mysql/mysql_auth.erl	/^-define(MAX_PACKET_SIZE, 1000000).$/;"	d
MAX_PACKET_SIZE	src/mysql/mysql_auth.erl	/^-define(MAX_PACKET_SIZE, 1000000).$/;"	d
MYSQL_4_0	deps/mysql/mysql_conn.erl	/^-define(MYSQL_4_0, 40). %% Support for MySQL 4.0.x$/;"	d
MYSQL_4_0	src/mysql/mysql_conn.erl	/^-define(MYSQL_4_0, 40). %% Support for MySQL 4.0.x$/;"	d
MYSQL_4_1	deps/mysql/mysql_conn.erl	/^-define(MYSQL_4_1, 41). %% Support for MySQL 4.1.x et 5.0.x$/;"	d
MYSQL_4_1	src/mysql/mysql_conn.erl	/^-define(MYSQL_4_1, 41). %% Support for MySQL 4.1.x et 5.0.x$/;"	d
MYSQL_CONNECT_COUNT	deps/mysql/db.erl	/^-define(MYSQL_CONNECT_COUNT,4).$/;"	d
MYSQL_CONNECT_COUNT	src/mysql/db.erl	/^-define(MYSQL_CONNECT_COUNT,4).$/;"	d
MYSQL_CONNECT_COUNT	src/mysql/emysql/edb.erl	/^-define(MYSQL_CONNECT_COUNT,4).$/;"	d
MYSQL_CONNECT_STATE	include/common.hrl	/^-define(MYSQL_CONNECT_STATE,mysql_connect_state).$/;"	d
MYSQL_LAST_CONNECTION_TIME	deps/mysql/db_util.erl	/^-define(MYSQL_LAST_CONNECTION_TIME,mysql_last_connection_time). %% mysql上次重连时间$/;"	d
MYSQL_LAST_CONNECTION_TIME	src/mysql/db_util.erl	/^-define(MYSQL_LAST_CONNECTION_TIME,mysql_last_connection_time). %% mysql上次重连时间$/;"	d
MYSQL_LAST_CONNECTION_TIME	src/mysql/emysql/edb_util.erl	/^-define(MYSQL_LAST_CONNECTION_TIME,mysql_last_connection_time). %% mysql上次重连时间$/;"	d
MYSQL_OLD_PASSWORD	src/mysql/emysql/emysql_internal.hrl	/^-define(MYSQL_OLD_PASSWORD, <<"mysql_old_password">>).$/;"	d
MYSQL_POOL	include/common.hrl	/^-define(MYSQL_POOL,mysql_pool).$/;"	d
MYSQL_QUERY_OP	deps/mysql/mysql_conn.erl	/^-define(MYSQL_QUERY_OP, 3).$/;"	d
MYSQL_QUERY_OP	src/mysql/mysql_conn.erl	/^-define(MYSQL_QUERY_OP, 3).$/;"	d
MYSQL_TIME_OUT	deps/mysql/db_util.erl	/^-define(MYSQL_TIME_OUT, 5000).$/;"	d
MYSQL_TIME_OUT	src/mysql/db_util.erl	/^-define(MYSQL_TIME_OUT, 5000).$/;"	d
MYSQL_TIME_OUT	src/mysql/emysql/edb_util.erl	/^-define(MYSQL_TIME_OUT, 5000).$/;"	d
MakeOpts	myfile/mmake.erl	/^-define(MakeOpts,[noexec,load,netload,noload]).$/;"	d
MakeOpts	src/misc/mmake.erl	/^-define(MakeOpts,[noexec,load,netload,noload]).$/;"	d
NOTICE	deps/lager-master/include/lager.hrl	/^-define(NOTICE, 32).$/;"	d
NOTICE	include/lager.hrl	/^-define(NOTICE, 32).$/;"	d
NOTIFY	deps/lager-master/include/lager.hrl	/^-define(NOTIFY(Level, Pid, Format, Args),$/;"	d
NOTIFY	include/lager.hrl	/^-define(NOTIFY(Level, Pid, Format, Args),$/;"	d
NUM2LEVEL	deps/lager-master/include/lager.hrl	/^-define(NUM2LEVEL(Num),$/;"	d
NUM2LEVEL	include/lager.hrl	/^-define(NUM2LEVEL(Num),$/;"	d
OPEN_LIST	src/test/a_star.erl	/^-define(OPEN_LIST, open_list).$/;"	d
PATH_LIST	src/test/a_star.erl	/^-define(PATH_LIST, path_list).$/;"	d
PLT	Makefile	/^PLT := ".dialyzer_plt"$/;"	m
PLT	deps/lager-master/tools.mk	/^PLT ?= $(HOME)\/.combo_dialyzer_plt$/;"	m
PLT	myfile/Makefile	/^PLT := ".dialyzer_plt"$/;"	m
PORT	deps/mysql/mysql.erl	/^-define(PORT, 3306).$/;"	d
PORT	src/mysql/mysql.erl	/^-define(PORT, 3306).$/;"	d
PRINT	include/logger.hrl	/^-define(PRINT(Format), io:format(Format)).$/;"	d
PRINT	include/logger.hrl	/^-define(PRINT(Format, Args), io:format(Format, Args)).$/;"	d
PROCESSES	Makefile	/^PROCESSES := 20$/;"	m
PROCESSES	myfile/Makefile	/^PROCESSES := 20$/;"	m
PROJECT	deps/lager-master/tools.mk	/^PROJECT ?= $(shell basename `find src -name "*.app.src"` .app.src)$/;"	m
PROTOCOL_41	deps/mysql/mysql_auth.erl	/^-define(PROTOCOL_41, 512).$/;"	d
PROTOCOL_41	include/emysql.hrl	/^-define(PROTOCOL_41, 512).$/;"	d
PROTOCOL_41	src/mysql/mysql_auth.erl	/^-define(PROTOCOL_41, 512).$/;"	d
QC_OUT	deps/lager-master/test/trunc_io_eqc.erl	/^-define(QC_OUT(P),$/;"	d
REBAR	deps/lager-master/tools.mk	/^REBAR ?= .\/rebar$/;"	m
RELOAD_TIME	myfile/reloader.erl	/^-define(RELOAD_TIME,reload_time).$/;"	d
RESP_EOF	src/mysql/emysql/emysql_internal.hrl	/^-define(RESP_EOF, 254).$/;"	d
RESP_ERROR	src/mysql/emysql/emysql_internal.hrl	/^-define(RESP_ERROR, 255).$/;"	d
RESP_OK	src/mysql/emysql/emysql_internal.hrl	/^-define(RESP_OK, 0).$/;"	d
REVISION	deps/lager-master/tools.mk	/^REVISION ?= $(shell git rev-parse --short HEAD)$/;"	m
SECURE_CONNECTION	deps/mysql/mysql_auth.erl	/^-define(SECURE_CONNECTION, 32768).$/;"	d
SECURE_CONNECTION	deps/mysql/mysql_conn.erl	/^-define(SECURE_CONNECTION, 32768).$/;"	d
SECURE_CONNECTION	deps/mysql/mysql_recv.erl	/^-define(SECURE_CONNECTION, 32768).$/;"	d
SECURE_CONNECTION	include/emysql.hrl	/^-define(SECURE_CONNECTION, 32768).$/;"	d
SECURE_CONNECTION	src/mysql/mysql_auth.erl	/^-define(SECURE_CONNECTION, 32768).$/;"	d
SECURE_CONNECTION	src/mysql/mysql_conn.erl	/^-define(SECURE_CONNECTION, 32768).$/;"	d
SECURE_CONNECTION	src/mysql/mysql_recv.erl	/^-define(SECURE_CONNECTION, 32768).$/;"	d
SERVER	deps/mysql/mysql.erl	/^-define(SERVER, mysql_dispatcher).$/;"	d
SERVER	src/mysql/mysql.erl	/^-define(SERVER, mysql_dispatcher).$/;"	d
SERVER_MORE_RESULTS_EXIST	include/emysql.hrl	/^-define(SERVER_MORE_RESULTS_EXIST, 8). % Multi query - next query exists *\/$/;"	d
SERVER_NO_STATUS	include/emysql.hrl	/^-define(SERVER_NO_STATUS, 0).$/;"	d
SERVER_QUERY_NO_GOOD_INDEX_USED	include/emysql.hrl	/^-define(SERVER_QUERY_NO_GOOD_INDEX_USED, 16).$/;"	d
SERVER_QUERY_NO_INDEX_USED	include/emysql.hrl	/^-define(SERVER_QUERY_NO_INDEX_USED, 32).$/;"	d
SERVER_STATUS_AUTOCOMMIT	include/emysql.hrl	/^-define(SERVER_STATUS_AUTOCOMMIT, 2). % Server in auto_commit mode *\/$/;"	d
SERVER_STATUS_CURSOR_EXISTS	include/emysql.hrl	/^-define(SERVER_STATUS_CURSOR_EXISTS, 64).$/;"	d
SERVER_STATUS_DB_DROPPED	include/emysql.hrl	/^-define(SERVER_STATUS_DB_DROPPED, 256). % A database was dropped$/;"	d
SERVER_STATUS_IN_TRANS	include/emysql.hrl	/^-define(SERVER_STATUS_IN_TRANS, 1).	% Transaction has started *\/$/;"	d
SERVER_STATUS_LAST_ROW_SENT	include/emysql.hrl	/^-define(SERVER_STATUS_LAST_ROW_SENT, 128).$/;"	d
SERVER_STATUS_METADATA_CHANGED	include/emysql.hrl	/^-define(SERVER_STATUS_METADATA_CHANGED, 1024).$/;"	d
SERVER_STATUS_NO_BACKSLASH_ESCAPES	include/emysql.hrl	/^-define(SERVER_STATUS_NO_BACKSLASH_ESCAPES, 512).$/;"	d
SHOULD_LOG	deps/lager-master/include/lager.hrl	/^-define(SHOULD_LOG(Level),$/;"	d
SHOULD_LOG	include/lager.hrl	/^-define(SHOULD_LOG(Level),$/;"	d
SQL_VERSION	include/common.hrl	/^-define(SQL_VERSION, 1).$/;"	d
STATE_VAR	deps/mysql/mysql.erl	/^-define(STATE_VAR, mysql_connection_state).$/;"	d
STATE_VAR	deps/mysql/mysql_conn.erl	/^-define(STATE_VAR, mysql_connection_state).$/;"	d
STATE_VAR	src/mysql/mysql.erl	/^-define(STATE_VAR, mysql_connection_state).$/;"	d
STATE_VAR	src/mysql/mysql_conn.erl	/^-define(STATE_VAR, mysql_connection_state).$/;"	d
SUPERVISOR	myfile/server_sup.erl	/^-define(SUPERVISOR(Id, Name, Tag), {Id, {supervisor, start_link, [{local, Name}, ?MODULE, Tag]}, transient, infinity, supervisor, [?MODULE]}).$/;"	d
SUPERVISOR	src/kernel/server_sup.erl	/^-define(SUPERVISOR(Id, Name, Tag), {Id, {supervisor, start_link, [{local, Name}, ?MODULE, Tag]}, transient, infinity, supervisor, [?MODULE]}).$/;"	d
SUP_LIST	myfile/server_sup.erl	/^-define(SUP_LIST,[$/;"	d
SUP_LIST	src/kernel/server_sup.erl	/^-define(SUP_LIST,[$/;"	d
SYNC_INTERVAL	src/misc/global_data_disk.erl	/^-define(SYNC_INTERVAL, 5 * 60 * 1000).$/;"	d
TABLE	src/misc/global_data_disk.erl	/^-define(TABLE, global_data_disk).$/;"	d
TABLE	src/misc/global_data_ram.erl	/^-define(TABLE, global_data_ram).$/;"	d
TBL	deps/lager-master/src/lager_config.erl	/^-define(TBL, lager_config).$/;"	d
TBL	src/lager/lager_config.erl	/^-define(TBL, lager_config).$/;"	d
TCP_OPT	include/common.hrl	/^-define(TCP_OPT,[$/;"	d
TCP_RECV_BUFFER	include/emysql.hrl	/^-define(TCP_RECV_BUFFER, 8192).$/;"	d
TERSE_FORMAT	deps/lager-master/src/lager_common_test_backend.erl	/^-define(TERSE_FORMAT,[time, " ", color, "[", severity,"] ", message]).$/;"	d
TERSE_FORMAT	deps/lager-master/src/lager_console_backend.erl	/^-define(TERSE_FORMAT,[time, " ", color, "[", severity,"] ", message]).$/;"	d
TERSE_FORMAT	src/lager/lager_common_test_backend.erl	/^-define(TERSE_FORMAT,[time, " ", color, "[", severity,"] ", message]).$/;"	d
TERSE_FORMAT	src/lager/lager_console_backend.erl	/^-define(TERSE_FORMAT,[time, " ", color, "[", severity,"] ", message]).$/;"	d
TIMEOUT	include/emysql.hrl	/^-define(TIMEOUT, 8000).$/;"	d
TRANSACTIONS	deps/mysql/mysql_auth.erl	/^-define(TRANSACTIONS, 8192).$/;"	d
TRANSACTIONS	include/emysql.hrl	/^-define(TRANSACTIONS, 8192).$/;"	d
TRANSACTIONS	src/mysql/mysql_auth.erl	/^-define(TRANSACTIONS, 8192).$/;"	d
VERSION_SQL_TIMEOUT	include/common.hrl	/^-define(VERSION_SQL_TIMEOUT,(300 * 1000)).$/;"	d
WARNING	deps/lager-master/include/lager.hrl	/^-define(WARNING, 16).$/;"	d
WARNING	include/lager.hrl	/^-define(WARNING, 16).$/;"	d
WARNING	include/logger.hrl	/^-define(WARNING(Format), logger:warning_msg(?MODULE,?LINE,Format, [])).$/;"	d
WARNING	include/logger.hrl	/^-define(WARNING(Format, Args), logger:warning_msg(?MODULE,?LINE,Format, Args)).$/;"	d
WARNING2	include/logger.hrl	/^-define(WARNING2(Format), logger:warning_msg(?MODULE,?LINE,Format ++ ",~w", [] ++ [erlang:get_stacktrace()])).$/;"	d
WARNING2	include/logger.hrl	/^-define(WARNING2(Format, Args), logger:warning_msg(?MODULE,?LINE,Format ++ ",~w", Args ++ [erlang:get_stacktrace()])).$/;"	d
a	deps/lager-master/test/pr_nested_record_test.erl	/^-record(a, {field1, field2}).$/;"	r
a_star	src/test/a_star.erl	/^-module(a_star).$/;"	m
a_star	src/test/a_star.erl	/^a_star(A, B, BlockList) ->$/;"	f	module:a_star
a_star_loop	src/test/a_star.erl	/^a_star_loop(A, B, BlockList) ->$/;"	f	module:a_star
a_star_loop1	src/test/a_star.erl	/^a_star_loop1([H | T], B, BlockList) ->$/;"	f	module:a_star
a_star_loop1	src/test/a_star.erl	/^a_star_loop1([], _, _) ->$/;"	f	module:a_star
accept	myfile/tcp_acceptor.erl	/^accept(State = #state{sock=LSock}) ->$/;"	f	module:tcp_acceptor
accept	src/kernel/tcp_acceptor.erl	/^accept(State = #state{sock=LSock}) ->$/;"	f	module:tcp_acceptor
add	src/mysql/emysql/emysql_statements.erl	/^add(StmtName, Statement) ->$/;"	f	module:emysql_statements
add_close_list	src/test/a_star.erl	/^add_close_list(L) ->$/;"	f	module:a_star
add_configured_traces	deps/lager-master/src/lager_app.erl	/^add_configured_traces() ->$/;"	f	module:lager_app
add_configured_traces	src/lager/lager_app.erl	/^add_configured_traces() ->$/;"	f	module:lager_app
add_conn	deps/mysql/mysql.erl	/^add_conn(Conn, State) ->$/;"	f	module:mysql
add_conn	src/mysql/mysql.erl	/^add_conn(Conn, State) ->$/;"	f	module:mysql
add_connections	src/mysql/emysql/emysql_conn_mgr.erl	/^add_connections(PoolId, Conns) when is_list(Conns) ->$/;"	f	module:emysql_conn_mgr
add_exports	myfile/dynarec.erl	/^add_exports(Forms) ->$/;"	f	module:dynarec
add_monitor_ref	src/mysql/emysql/emysql_conn.erl	/^add_monitor_ref(Conn, MonitorRef) ->$/;"	f	module:emysql_conn
add_node	src/logger/logger_h.erl	/^add_node(X, Pid) when is_atom(X) ->$/;"	f	module:logger_h
add_node	src/logger/logger_h.erl	/^add_node(X, Pid) when node(Pid) \/= node() ->$/;"	f	module:logger_h
add_node	src/logger/logger_h.erl	/^add_node(X, _) ->$/;"	f	module:logger_h
add_open_list	src/test/a_star.erl	/^add_open_list(L) ->$/;"	f	module:a_star
add_pool	src/mysql/emysql/emysql.erl	/^add_pool(#pool{pool_id=PoolId,size=Size,user=User,password=Password,host=Host,port=Port,$/;"	f	module:emysql
add_pool	src/mysql/emysql/emysql.erl	/^add_pool(PoolId, Options) when is_list(Options) ->$/;"	f	module:emysql
add_pool	src/mysql/emysql/emysql.erl	/^add_pool(PoolId, Size, User, Password, Host, Port, Database, $/;"	f	module:emysql
add_pool	src/mysql/emysql/emysql.erl	/^add_pool(PoolId, Size, User, Password, Host, Port, Database, Encoding) ->$/;"	f	module:emysql
add_pool	src/mysql/emysql/emysql.erl	/^add_pool(PoolId, Size, User, Password, Host, Port, Database, Encoding, StartCmds) ->$/;"	f	module:emysql
add_pool	src/mysql/emysql/emysql_conn_mgr.erl	/^add_pool(Pool) ->$/;"	f	module:emysql_conn_mgr
add_secs	deps/lager-master/src/lager_file_backend.erl	/^add_secs({Mega, Secs, Micro}, Add) ->$/;"	f	module:lager_file_backend
add_secs	src/lager/lager_file_backend.erl	/^add_secs({Mega, Secs, Micro}, Add) ->$/;"	f	module:lager_file_backend
add_trace_to_loglevel_config	deps/lager-master/src/lager.erl	/^add_trace_to_loglevel_config(Trace) ->$/;"	f	module:lager
add_trace_to_loglevel_config	src/lager/lager.erl	/^add_trace_to_loglevel_config(Trace) ->$/;"	f	module:lager
adjust	deps/lager-master/src/lager_format.erl	/^adjust(Data, Pad, left) -> [Data|Pad];$/;"	f	module:lager_format
adjust	deps/lager-master/src/lager_format.erl	/^adjust(Data, Pad, right) -> [Pad|Data].$/;"	f	module:lager_format
adjust	deps/lager-master/src/lager_format.erl	/^adjust(Data, [], _) -> Data;$/;"	f	module:lager_format
adjust	src/lager/lager_format.erl	/^adjust(Data, Pad, left) -> [Data|Pad];$/;"	f	module:lager_format
adjust	src/lager/lager_format.erl	/^adjust(Data, Pad, right) -> [Pad|Data].$/;"	f	module:lager_format
adjust	src/lager/lager_format.erl	/^adjust(Data, [], _) -> Data;$/;"	f	module:lager_format
affected_rows	src/mysql/emysql/emysql.erl	/^affected_rows(#ok_packet{affected_rows=Rows}) ->$/;"	f	module:emysql
affected_rows	src/mysql/emysql/emysql_util.erl	/^affected_rows(P) -> emysql:affected_rows(P).$/;"	f	module:emysql_util
alist	deps/lager-master/src/lager_trunc_io.erl	/^alist(H, _Max, _Options) ->$/;"	f	module:lager_trunc_io
alist	deps/lager-master/src/lager_trunc_io.erl	/^alist([H|T], Max, #print_options{force_strings=true} = Options) when is_integer(H) ->$/;"	f	module:lager_trunc_io
alist	deps/lager-master/src/lager_trunc_io.erl	/^alist([H|T], Max, Options = #print_options{force_strings=false,lists_as_strings=true}) when H =:= $"; H =:= $\\\\ ->$/;"	f	module:lager_trunc_io
alist	deps/lager-master/src/lager_trunc_io.erl	/^alist([H|T], Max, Options = #print_options{force_strings=true}) when is_binary(H); is_list(H) ->$/;"	f	module:lager_trunc_io
alist	deps/lager-master/src/lager_trunc_io.erl	/^alist([H|T], Max, Options) when H =:= $\\t; H =:= $\\n; H =:= $\\r; H =:= $\\v; H =:= $\\e; H=:= $\\f; H=:= $\\b ->$/;"	f	module:lager_trunc_io
alist	deps/lager-master/src/lager_trunc_io.erl	/^alist([H|T], Max, Options) when is_integer(H), H >= 16#20, H =< 16#7e ->     % definitely printable$/;"	f	module:lager_trunc_io
alist	deps/lager-master/src/lager_trunc_io.erl	/^alist([H|T], Max, Options) when is_integer(H), H >= 16#a0, H =< 16#ff ->     % definitely printable$/;"	f	module:lager_trunc_io
alist	deps/lager-master/src/lager_trunc_io.erl	/^alist([H|_L], _Max, _Options) ->$/;"	f	module:lager_trunc_io
alist	deps/lager-master/src/lager_trunc_io.erl	/^alist([], _Max, #print_options{force_strings=true}) -> {"", 0};$/;"	f	module:lager_trunc_io
alist	deps/lager-master/src/lager_trunc_io.erl	/^alist([], _Max, _Options) -> {"\\"", 1};$/;"	f	module:lager_trunc_io
alist	deps/lager-master/src/lager_trunc_io.erl	/^alist(_, Max, #print_options{force_strings=false}) when Max < 5 -> {"...\\"", 4};$/;"	f	module:lager_trunc_io
alist	deps/lager-master/src/lager_trunc_io.erl	/^alist(_, Max, #print_options{force_strings=true}) when Max < 4 -> {"...", 3};$/;"	f	module:lager_trunc_io
alist	deps/lager-master/src/lager_trunc_io.erl	/^alist(_, _, #print_options{force_strings=true}) ->$/;"	f	module:lager_trunc_io
alist	src/lager/lager_trunc_io.erl	/^alist(H, _Max, _Options) ->$/;"	f	module:lager_trunc_io
alist	src/lager/lager_trunc_io.erl	/^alist([H|T], Max, #print_options{force_strings=true} = Options) when is_integer(H) ->$/;"	f	module:lager_trunc_io
alist	src/lager/lager_trunc_io.erl	/^alist([H|T], Max, Options = #print_options{force_strings=false,lists_as_strings=true}) when H =:= $"; H =:= $\\\\ ->$/;"	f	module:lager_trunc_io
alist	src/lager/lager_trunc_io.erl	/^alist([H|T], Max, Options = #print_options{force_strings=true}) when is_binary(H); is_list(H) ->$/;"	f	module:lager_trunc_io
alist	src/lager/lager_trunc_io.erl	/^alist([H|T], Max, Options) when H =:= $\\t; H =:= $\\n; H =:= $\\r; H =:= $\\v; H =:= $\\e; H=:= $\\f; H=:= $\\b ->$/;"	f	module:lager_trunc_io
alist	src/lager/lager_trunc_io.erl	/^alist([H|T], Max, Options) when is_integer(H), H >= 16#20, H =< 16#7e ->     % definitely printable$/;"	f	module:lager_trunc_io
alist	src/lager/lager_trunc_io.erl	/^alist([H|T], Max, Options) when is_integer(H), H >= 16#a0, H =< 16#ff ->     % definitely printable$/;"	f	module:lager_trunc_io
alist	src/lager/lager_trunc_io.erl	/^alist([H|_L], _Max, _Options) ->$/;"	f	module:lager_trunc_io
alist	src/lager/lager_trunc_io.erl	/^alist([], _Max, #print_options{force_strings=true}) -> {"", 0};$/;"	f	module:lager_trunc_io
alist	src/lager/lager_trunc_io.erl	/^alist([], _Max, _Options) -> {"\\"", 1};$/;"	f	module:lager_trunc_io
alist	src/lager/lager_trunc_io.erl	/^alist(_, Max, #print_options{force_strings=false}) when Max < 5 -> {"...\\"", 4};$/;"	f	module:lager_trunc_io
alist	src/lager/lager_trunc_io.erl	/^alist(_, Max, #print_options{force_strings=true}) when Max < 4 -> {"...", 3};$/;"	f	module:lager_trunc_io
alist	src/lager/lager_trunc_io.erl	/^alist(_, _, #print_options{force_strings=true}) ->$/;"	f	module:lager_trunc_io
alist_start	deps/lager-master/src/lager_trunc_io.erl	/^alist_start(L, Max, #print_options{force_strings=true} = Options) ->$/;"	f	module:lager_trunc_io
alist_start	deps/lager-master/src/lager_trunc_io.erl	/^alist_start(L, Max, Options) ->$/;"	f	module:lager_trunc_io
alist_start	deps/lager-master/src/lager_trunc_io.erl	/^alist_start([H|T], Max, Options) when H =:= $\\t; H =:= $\\n; H =:= $\\r; H =:= $\\v; H =:= $\\e; H=:= $\\f; H=:= $\\b ->$/;"	f	module:lager_trunc_io
alist_start	deps/lager-master/src/lager_trunc_io.erl	/^alist_start([H|T], Max, Options) when is_integer(H), H >= 16#20, H =< 16#7e ->  % definitely printable$/;"	f	module:lager_trunc_io
alist_start	deps/lager-master/src/lager_trunc_io.erl	/^alist_start([H|T], Max, Options) when is_integer(H), H >= 16#a0, H =< 16#ff ->  % definitely printable$/;"	f	module:lager_trunc_io
alist_start	deps/lager-master/src/lager_trunc_io.erl	/^alist_start([], _Max, #print_options{force_strings=true}) -> {"", 0};$/;"	f	module:lager_trunc_io
alist_start	deps/lager-master/src/lager_trunc_io.erl	/^alist_start([], _Max, _Options) -> {"[]", 2};$/;"	f	module:lager_trunc_io
alist_start	deps/lager-master/src/lager_trunc_io.erl	/^alist_start(_, Max, _Options) when Max < 4 -> {"...", 3};$/;"	f	module:lager_trunc_io
alist_start	deps/lager-master/src/lager_trunc_io.erl	/^alist_start(_, _Max, #print_options{depth=0}) -> {"[...]", 5};$/;"	f	module:lager_trunc_io
alist_start	src/lager/lager_trunc_io.erl	/^alist_start(L, Max, #print_options{force_strings=true} = Options) ->$/;"	f	module:lager_trunc_io
alist_start	src/lager/lager_trunc_io.erl	/^alist_start(L, Max, Options) ->$/;"	f	module:lager_trunc_io
alist_start	src/lager/lager_trunc_io.erl	/^alist_start([H|T], Max, Options) when H =:= $\\t; H =:= $\\n; H =:= $\\r; H =:= $\\v; H =:= $\\e; H=:= $\\f; H=:= $\\b ->$/;"	f	module:lager_trunc_io
alist_start	src/lager/lager_trunc_io.erl	/^alist_start([H|T], Max, Options) when is_integer(H), H >= 16#20, H =< 16#7e ->  % definitely printable$/;"	f	module:lager_trunc_io
alist_start	src/lager/lager_trunc_io.erl	/^alist_start([H|T], Max, Options) when is_integer(H), H >= 16#a0, H =< 16#ff ->  % definitely printable$/;"	f	module:lager_trunc_io
alist_start	src/lager/lager_trunc_io.erl	/^alist_start([], _Max, #print_options{force_strings=true}) -> {"", 0};$/;"	f	module:lager_trunc_io
alist_start	src/lager/lager_trunc_io.erl	/^alist_start([], _Max, _Options) -> {"[]", 2};$/;"	f	module:lager_trunc_io
alist_start	src/lager/lager_trunc_io.erl	/^alist_start(_, Max, _Options) when Max < 4 -> {"...", 3};$/;"	f	module:lager_trunc_io
alist_start	src/lager/lager_trunc_io.erl	/^alist_start(_, _Max, #print_options{depth=0}) -> {"[...]", 5};$/;"	f	module:lager_trunc_io
all	myfile/mmake.erl	/^all(Worker) when is_integer(Worker) ->$/;"	f	module:mmake
all	myfile/mmake.erl	/^all(Worker, Options) when is_integer(Worker) ->$/;"	f	module:mmake
all	src/misc/mmake.erl	/^all(Worker) when is_integer(Worker) ->$/;"	f	module:mmake
all	src/misc/mmake.erl	/^all(Worker, Options) when is_integer(Worker) ->$/;"	f	module:mmake
all	src/mysql/emysql/emysql_statements.erl	/^all() ->$/;"	f	module:emysql_statements
analyze_exception	deps/lager-master/src/lager_stdlib.erl	/^analyze_exception(_Class, Term, Stack) ->$/;"	f	module:lager_stdlib
analyze_exception	deps/lager-master/src/lager_stdlib.erl	/^analyze_exception(error, Term, Stack) ->$/;"	f	module:lager_stdlib
analyze_exception	src/lager/lager_stdlib.erl	/^analyze_exception(_Class, Term, Stack) ->$/;"	f	module:lager_stdlib
analyze_exception	src/lager/lager_stdlib.erl	/^analyze_exception(error, Term, Stack) ->$/;"	f	module:lager_stdlib
application_config_mangling_test_	deps/lager-master/src/lager_app.erl	/^application_config_mangling_test_() ->$/;"	f	module:lager_app
application_config_mangling_test_	src/lager/lager_app.erl	/^application_config_mangling_test_() ->$/;"	f	module:lager_app
apply	src/mod/gen_server2.erl	/^apply(Pid,Fun) ->$/;"	f	module:gen_server2
argss	deps/lager-master/src/lager_stdlib.erl	/^argss(0) ->$/;"	f	module:lager_stdlib
argss	deps/lager-master/src/lager_stdlib.erl	/^argss(1) ->$/;"	f	module:lager_stdlib
argss	deps/lager-master/src/lager_stdlib.erl	/^argss(2) ->$/;"	f	module:lager_stdlib
argss	deps/lager-master/src/lager_stdlib.erl	/^argss(I) ->$/;"	f	module:lager_stdlib
argss	src/lager/lager_stdlib.erl	/^argss(0) ->$/;"	f	module:lager_stdlib
argss	src/lager/lager_stdlib.erl	/^argss(1) ->$/;"	f	module:lager_stdlib
argss	src/lager/lager_stdlib.erl	/^argss(2) ->$/;"	f	module:lager_stdlib
argss	src/lager/lager_stdlib.erl	/^argss(I) ->$/;"	f	module:lager_stdlib
as_dict	src/mysql/emysql/emysql.erl	/^as_dict(Res) -> emysql_conv:as_dict(Res).$/;"	f	module:emysql
as_dict	src/mysql/emysql/emysql_conv.erl	/^as_dict(Res = #result_packet{}) ->$/;"	f	module:emysql_conv
as_dict	src/mysql/emysql/emysql_util.erl	/^as_dict(Res) -> emysql:as_dict(Res).$/;"	f	module:emysql_util
as_json	src/mysql/emysql/emysql.erl	/^as_json(Res) -> emysql_conv:as_json(Res).$/;"	f	module:emysql
as_json	src/mysql/emysql/emysql_conv.erl	/^as_json(#result_packet { rows = Rows } = Result) ->$/;"	f	module:emysql_conv
as_json	src/mysql/emysql/emysql_util.erl	/^as_json(Res) -> emysql:as_json(Res).$/;"	f	module:emysql_util
as_proplist	src/mysql/emysql/emysql.erl	/^as_proplist(Res) -> emysql_conv:as_proplist(Res).$/;"	f	module:emysql
as_proplist	src/mysql/emysql/emysql_conv.erl	/^as_proplist(#result_packet{field_list=_Cols,rows=_Rows}) when _Cols =:= undefined,$/;"	f	module:emysql_conv
as_proplist	src/mysql/emysql/emysql_conv.erl	/^as_proplist(#result_packet{field_list=_Cols,rows=_Rows}) when is_list(_Cols),$/;"	f	module:emysql_conv
as_proplist	src/mysql/emysql/emysql_conv.erl	/^as_proplist(Res = #result_packet{field_list=Cols,rows=Rows}) when is_list(Cols),$/;"	f	module:emysql_conv
as_proplist	src/mysql/emysql/emysql_util.erl	/^as_proplist(Res) -> emysql:as_proplist(Res).$/;"	f	module:emysql_util
as_record	src/mysql/emysql/emysql.erl	/^as_record(Res, Recname, Fields) -> emysql_conv:as_record(Res, Recname, Fields).$/;"	f	module:emysql
as_record	src/mysql/emysql/emysql.erl	/^as_record(Res, Recname, Fields, Fun) -> emysql_conv:as_record(Res, Recname, Fields, Fun).$/;"	f	module:emysql
as_record	src/mysql/emysql/emysql_conv.erl	/^as_record(Result = #result_packet{}, RecordName, Fields) when is_atom(RecordName), is_list(Fields) ->$/;"	f	module:emysql_conv
as_record	src/mysql/emysql/emysql_conv.erl	/^as_record(Result = #result_packet{}, RecordName, Fields, Fun) when is_atom(RecordName), is_list(Fields), is_function(Fun) ->$/;"	f	module:emysql_conv
as_record	src/mysql/emysql/emysql_util.erl	/^as_record(Res, RecName, Fields) -> emysql:as_record(Res, RecName, Fields).$/;"	f	module:emysql_util
as_record	src/mysql/emysql/emysql_util.erl	/^as_record(Res, RecName, Fields, Fun) -> emysql:as_record(Res, RecName, Fields, Fun).$/;"	f	module:emysql_util
asciiz	src/mysql/emysql/emysql_auth.erl	/^asciiz(Data) when is_binary(Data) ->$/;"	f	module:emysql_auth
asciz	deps/mysql/mysql_conn.erl	/^asciz(Data) when is_binary(Data) ->$/;"	f	module:mysql_conn
asciz	deps/mysql/mysql_conn.erl	/^asciz(Data) when is_list(Data) ->$/;"	f	module:mysql_conn
asciz	src/mysql/mysql_conn.erl	/^asciz(Data) when is_binary(Data) ->$/;"	f	module:mysql_conn
asciz	src/mysql/mysql_conn.erl	/^asciz(Data) when is_list(Data) ->$/;"	f	module:mysql_conn
asciz_binary	deps/mysql/mysql.erl	/^asciz_binary(<<0:8, Rest\/binary>>, Acc) ->$/;"	f	module:mysql
asciz_binary	deps/mysql/mysql.erl	/^asciz_binary(<<>>, Acc) ->$/;"	f	module:mysql
asciz_binary	deps/mysql/mysql.erl	/^asciz_binary(<<C:8, Rest\/binary>>, Acc) ->$/;"	f	module:mysql
asciz_binary	src/mysql/mysql.erl	/^asciz_binary(<<0:8, Rest\/binary>>, Acc) ->$/;"	f	module:mysql
asciz_binary	src/mysql/mysql.erl	/^asciz_binary(<<>>, Acc) ->$/;"	f	module:mysql
asciz_binary	src/mysql/mysql.erl	/^asciz_binary(<<C:8, Rest\/binary>>, Acc) ->$/;"	f	module:mysql
async_recv	src/mod/mod_reader.erl	/^async_recv(Sock, Length, Timeout) when is_port(Sock) ->$/;"	f	module:mod_reader
async_reset_conn	src/mysql/emysql/emysql_conn_mgr.erl	/^async_reset_conn(Pools, Conn) ->$/;"	f	module:emysql_conn_mgr
async_threshold_test_	deps/lager-master/test/lager_test_backend.erl	/^async_threshold_test_() ->$/;"	f	module:lager_test_backend
atom_needs_quoting	deps/lager-master/src/lager_trunc_io.erl	/^atom_needs_quoting([H|T]) when (H >= $a andalso H =< $z);$/;"	f	module:lager_trunc_io
atom_needs_quoting	deps/lager-master/src/lager_trunc_io.erl	/^atom_needs_quoting([]) ->$/;"	f	module:lager_trunc_io
atom_needs_quoting	deps/lager-master/src/lager_trunc_io.erl	/^atom_needs_quoting(_) ->$/;"	f	module:lager_trunc_io
atom_needs_quoting	src/lager/lager_trunc_io.erl	/^atom_needs_quoting([H|T]) when (H >= $a andalso H =< $z);$/;"	f	module:lager_trunc_io
atom_needs_quoting	src/lager/lager_trunc_io.erl	/^atom_needs_quoting([]) ->$/;"	f	module:lager_trunc_io
atom_needs_quoting	src/lager/lager_trunc_io.erl	/^atom_needs_quoting(_) ->$/;"	f	module:lager_trunc_io
atom_needs_quoting_start	deps/lager-master/src/lager_trunc_io.erl	/^atom_needs_quoting_start([H|T]) when H >= $a, H =< $z ->$/;"	f	module:lager_trunc_io
atom_needs_quoting_start	deps/lager-master/src/lager_trunc_io.erl	/^atom_needs_quoting_start(_) ->$/;"	f	module:lager_trunc_io
atom_needs_quoting_start	src/lager/lager_trunc_io.erl	/^atom_needs_quoting_start([H|T]) when H >= $a, H =< $z ->$/;"	f	module:lager_trunc_io
atom_needs_quoting_start	src/lager/lager_trunc_io.erl	/^atom_needs_quoting_start(_) ->$/;"	f	module:lager_trunc_io
atom_quoting_test	deps/lager-master/src/lager_trunc_io.erl	/^atom_quoting_test() ->$/;"	f	module:lager_trunc_io
atom_quoting_test	src/lager/lager_trunc_io.erl	/^atom_quoting_test() ->$/;"	f	module:lager_trunc_io
atom_to_binary	deps/mysql/mysql_conn.erl	/^atom_to_binary(Val) ->$/;"	f	module:mysql_conn
atom_to_binary	src/mysql/mysql_conn.erl	/^atom_to_binary(Val) ->$/;"	f	module:mysql_conn
auth	src/mysql/emysql/emysql_auth.erl	/^auth(Sock, User, Password, #greeting { seq_num = SeqNum } = Greeting) ->$/;"	f	module:emysql_auth
auth_packet	src/mysql/emysql/emysql_auth.erl	/^auth_packet(User, Password,$/;"	f	module:emysql_auth
auth_packet_old	src/mysql/emysql/emysql_auth.erl	/^auth_packet_old(Password, #greeting { salt1 = Salt1 }) ->$/;"	f	module:emysql_auth
b	deps/lager-master/test/pr_nested_record_test.erl	/^-record(b, {field1, field2}).$/;"	r
base	deps/lager-master/src/lager_format.erl	/^base(B) when is_integer(B) ->$/;"	f	module:lager_format
base	deps/lager-master/src/lager_format.erl	/^base(none) ->$/;"	f	module:lager_format
base	src/lager/lager_format.erl	/^base(B) when is_integer(B) ->$/;"	f	module:lager_format
base	src/lager/lager_format.erl	/^base(none) ->$/;"	f	module:lager_format
basic_test_	deps/lager-master/src/lager_default_formatter.erl	/^basic_test_() ->$/;"	f	module:lager_default_formatter
basic_test_	src/lager/lager_default_formatter.erl	/^basic_test_() ->$/;"	f	module:lager_default_formatter
batch_insert_sql	deps/mysql/db_util.erl	/^batch_insert_sql(Table, Fields, [[_ | FV] | T]) ->$/;"	f	module:db_util
batch_insert_sql	src/mysql/db_util.erl	/^batch_insert_sql(Table, Fields, [[_ | FV] | T]) ->$/;"	f	module:db_util
batch_insert_sql	src/mysql/emysql/edb_util.erl	/^batch_insert_sql(Table, Fields, [[_ | FV] | T]) ->$/;"	f	module:db_util
batch_replace_sql	deps/mysql/db_util.erl	/^batch_replace_sql(Table, Fields, [[_ | FV] | T]) ->$/;"	f	module:db_util
batch_replace_sql	src/mysql/db_util.erl	/^batch_replace_sql(Table, Fields, [[_ | FV] | T]) ->$/;"	f	module:db_util
batch_replace_sql	src/mysql/emysql/edb_util.erl	/^batch_replace_sql(Table, Fields, [[_ | FV] | T]) ->$/;"	f	module:db_util
behaviour_info	src/mysql/emysql/emysql_worker.erl	/^behaviour_info(_) -> undefined.$/;"	f	module:emysql_worker
behaviour_info	src/mysql/emysql/emysql_worker.erl	/^behaviour_info(callbacks) -> [{init, 1}, {process, 1}];$/;"	f	module:emysql_worker
binary_printing_test	deps/lager-master/src/lager_trunc_io.erl	/^binary_printing_test() ->$/;"	f	module:lager_trunc_io
binary_printing_test	src/lager/lager_trunc_io.erl	/^binary_printing_test() ->$/;"	f	module:lager_trunc_io
bitstring_printing_test	deps/lager-master/src/lager_trunc_io.erl	/^bitstring_printing_test() ->$/;"	f	module:lager_trunc_io
bitstring_printing_test	src/lager/lager_trunc_io.erl	/^bitstring_printing_test() ->$/;"	f	module:lager_trunc_io
bounce	deps/lager-master/src/lager_common_test_backend.erl	/^bounce() ->$/;"	f	module:lager_common_test_backend
bounce	deps/lager-master/src/lager_common_test_backend.erl	/^bounce(Level) ->$/;"	f	module:lager_common_test_backend
bounce	src/lager/lager_common_test_backend.erl	/^bounce() ->$/;"	f	module:lager_common_test_backend
bounce	src/lager/lager_common_test_backend.erl	/^bounce(Level) ->$/;"	f	module:lager_common_test_backend
brackets_to_parens	deps/lager-master/src/lager_stdlib.erl	/^brackets_to_parens(S) ->$/;"	f	module:lager_stdlib
brackets_to_parens	src/lager/lager_stdlib.erl	/^brackets_to_parens(S) ->$/;"	f	module:lager_stdlib
build	deps/lager-master/src/lager_format.erl	/^build([$\\n], Acc, MaxLen, #options{chomp=true}) ->$/;"	f	module:lager_format
build	deps/lager-master/src/lager_format.erl	/^build([$\\n|Cs], Acc, MaxLen, O) ->$/;"	f	module:lager_format
build	deps/lager-master/src/lager_format.erl	/^build([$\\t|Cs], Acc, MaxLen, O) ->$/;"	f	module:lager_format
build	deps/lager-master/src/lager_format.erl	/^build([C|Cs], Acc, MaxLen, O) ->$/;"	f	module:lager_format
build	deps/lager-master/src/lager_format.erl	/^build([], Acc, MaxLen, _O) ->$/;"	f	module:lager_format
build	deps/lager-master/src/lager_format.erl	/^build([{$n, _, _, _, _, _, _}], Acc, MaxLen, #options{chomp=true}) ->$/;"	f	module:lager_format
build	deps/lager-master/src/lager_format.erl	/^build([{C,As,F,Ad,P,Pad,Enc}|Cs], Acc, MaxLen, O) ->$/;"	f	module:lager_format
build	src/lager/lager_format.erl	/^build([$\\n], Acc, MaxLen, #options{chomp=true}) ->$/;"	f	module:lager_format
build	src/lager/lager_format.erl	/^build([$\\n|Cs], Acc, MaxLen, O) ->$/;"	f	module:lager_format
build	src/lager/lager_format.erl	/^build([$\\t|Cs], Acc, MaxLen, O) ->$/;"	f	module:lager_format
build	src/lager/lager_format.erl	/^build([C|Cs], Acc, MaxLen, O) ->$/;"	f	module:lager_format
build	src/lager/lager_format.erl	/^build([], Acc, MaxLen, _O) ->$/;"	f	module:lager_format
build	src/lager/lager_format.erl	/^build([{$n, _, _, _, _, _, _}], Acc, MaxLen, #options{chomp=true}) ->$/;"	f	module:lager_format
build	src/lager/lager_format.erl	/^build([{C,As,F,Ad,P,Pad,Enc}|Cs], Acc, MaxLen, O) ->$/;"	f	module:lager_format
build2	deps/lager-master/src/lager_format.erl	/^build2([C|Cs], Count, MaxLen) ->$/;"	f	module:lager_format
build2	deps/lager-master/src/lager_format.erl	/^build2([], _, _) -> [].$/;"	f	module:lager_format
build2	deps/lager-master/src/lager_format.erl	/^build2([{C,As,F,Ad,P,Pad,Enc}|Cs], Count, MaxLen) ->$/;"	f	module:lager_format
build2	src/lager/lager_format.erl	/^build2([C|Cs], Count, MaxLen) ->$/;"	f	module:lager_format
build2	src/lager/lager_format.erl	/^build2([], _, _) -> [].$/;"	f	module:lager_format
build2	src/lager/lager_format.erl	/^build2([{C,As,F,Ad,P,Pad,Enc}|Cs], Count, MaxLen) ->$/;"	f	module:lager_format
build_fmt_args	deps/lager-master/test/trunc_io_eqc.erl	/^build_fmt_args(FmtArgs) ->$/;"	f	module:trunc_io_eqc
build_greeting	src/mysql/emysql/emysql_auth.erl	/^build_greeting(stage1, D, G) ->$/;"	f	module:emysql_auth
build_greeting	src/mysql/emysql/emysql_auth.erl	/^build_greeting(stage2, D, G) ->$/;"	f	module:emysql_auth
build_greeting	src/mysql/emysql/emysql_auth.erl	/^build_greeting({stage3, SaltLength}, D, G) ->$/;"	f	module:emysql_auth
bxor_binary	deps/mysql/mysql_auth.erl	/^bxor_binary(B1, B2) ->$/;"	f	module:mysql_auth
bxor_binary	src/mysql/emysql/emysql_auth.erl	/^bxor_binary(B1, B2) ->$/;"	f	module:emysql_auth
bxor_binary	src/mysql/mysql_auth.erl	/^bxor_binary(B1, B2) ->$/;"	f	module:mysql_auth
calculate_fudge	deps/lager-master/test/trunc_io_eqc.erl	/^calculate_fudge([], Acc) ->$/;"	f	module:trunc_io_eqc
calculate_fudge	deps/lager-master/test/trunc_io_eqc.erl	/^calculate_fudge([_|T], Acc) ->$/;"	f	module:trunc_io_eqc
calculate_fudge	deps/lager-master/test/trunc_io_eqc.erl	/^calculate_fudge([{"~62P", _Arg, _Depth}|T], Acc) ->$/;"	f	module:trunc_io_eqc
calculate_fudge	deps/lager-master/test/trunc_io_eqc.erl	/^calculate_fudge([{Fmt, Arg}|T], Acc) when$/;"	f	module:trunc_io_eqc
calculate_next_rotation	deps/lager-master/src/lager_util.erl	/^calculate_next_rotation(Spec) ->$/;"	f	module:lager_util
calculate_next_rotation	deps/lager-master/src/lager_util.erl	/^calculate_next_rotation([], Now) ->$/;"	f	module:lager_util
calculate_next_rotation	deps/lager-master/src/lager_util.erl	/^calculate_next_rotation([{date, Date}|T], {{Year, Month, Day}, _} = Now) ->$/;"	f	module:lager_util
calculate_next_rotation	deps/lager-master/src/lager_util.erl	/^calculate_next_rotation([{date, Date}|T], {{_, _, Date}, _} = Now) ->$/;"	f	module:lager_util
calculate_next_rotation	deps/lager-master/src/lager_util.erl	/^calculate_next_rotation([{date, last}|T], {{Year, Month, Day}, _} = Now) ->$/;"	f	module:lager_util
calculate_next_rotation	deps/lager-master/src/lager_util.erl	/^calculate_next_rotation([{day, Day}|T], {Date, _Time} = Now) ->$/;"	f	module:lager_util
calculate_next_rotation	deps/lager-master/src/lager_util.erl	/^calculate_next_rotation([{hour, X}|T], {{_, _, _}, _} = Now) ->$/;"	f	module:lager_util
calculate_next_rotation	deps/lager-master/src/lager_util.erl	/^calculate_next_rotation([{hour, X}|T], {{_, _, _}, {Hour, _, _}} = Now) when Hour < X ->$/;"	f	module:lager_util
calculate_next_rotation	src/lager/lager_util.erl	/^calculate_next_rotation(Spec) ->$/;"	f	module:lager_util
calculate_next_rotation	src/lager/lager_util.erl	/^calculate_next_rotation([], Now) ->$/;"	f	module:lager_util
calculate_next_rotation	src/lager/lager_util.erl	/^calculate_next_rotation([{date, Date}|T], {{Year, Month, Day}, _} = Now) ->$/;"	f	module:lager_util
calculate_next_rotation	src/lager/lager_util.erl	/^calculate_next_rotation([{date, Date}|T], {{_, _, Date}, _} = Now) ->$/;"	f	module:lager_util
calculate_next_rotation	src/lager/lager_util.erl	/^calculate_next_rotation([{date, last}|T], {{Year, Month, Day}, _} = Now) ->$/;"	f	module:lager_util
calculate_next_rotation	src/lager/lager_util.erl	/^calculate_next_rotation([{day, Day}|T], {Date, _Time} = Now) ->$/;"	f	module:lager_util
calculate_next_rotation	src/lager/lager_util.erl	/^calculate_next_rotation([{hour, X}|T], {{_, _, _}, _} = Now) ->$/;"	f	module:lager_util
calculate_next_rotation	src/lager/lager_util.erl	/^calculate_next_rotation([{hour, X}|T], {{_, _, _}, {Hour, _, _}} = Now) when Hour < X ->$/;"	f	module:lager_util
call	src/mod/gen_server2.erl	/^call(Pid,Msg) ->$/;"	f	module:gen_server2
call_server	deps/mysql/mysql.erl	/^call_server(Msg, Timeout) ->$/;"	f	module:mysql
call_server	src/mysql/mysql.erl	/^call_server(Msg, Timeout) ->$/;"	f	module:mysql
canonicalize_query	src/mysql/emysql/emysql_conn.erl	/^canonicalize_query(Q) when is_binary(Q) -> Q;$/;"	f	module:emysql_conn
canonicalize_query	src/mysql/emysql/emysql_conn.erl	/^canonicalize_query(QL) when is_list(QL) -> iolist_to_binary(QL).$/;"	f	module:emysql_conn
capabilities	src/mysql/emysql/emysql_auth.erl	/^capabilities(Cs) ->$/;"	f	module:emysql_auth
cast	src/mod/gen_server2.erl	/^cast(Pid,Msg) ->$/;"	f	module:gen_server2
cast_fun_for	src/mysql/emysql/emysql_tcp.erl	/^cast_fun_for(Type) ->$/;"	f	module:emysql_tcp
char	deps/lager-master/src/lager_format.erl	/^char(C, F, Adj, P, Pad) when F >= P ->$/;"	f	module:lager_format
char	deps/lager-master/src/lager_format.erl	/^char(C, F, _Adj, none, _Pad) -> chars(C, F);$/;"	f	module:lager_format
char	deps/lager-master/src/lager_format.erl	/^char(C, none, _Adj, P, _Pad) -> chars(C, P);$/;"	f	module:lager_format
char	deps/lager-master/src/lager_format.erl	/^char(C, none, _Adj, none, _Pad) -> [C];$/;"	f	module:lager_format
char	src/lager/lager_format.erl	/^char(C, F, Adj, P, Pad) when F >= P ->$/;"	f	module:lager_format
char	src/lager/lager_format.erl	/^char(C, F, _Adj, none, _Pad) -> chars(C, F);$/;"	f	module:lager_format
char	src/lager/lager_format.erl	/^char(C, none, _Adj, P, _Pad) -> chars(C, P);$/;"	f	module:lager_format
char	src/lager/lager_format.erl	/^char(C, none, _Adj, none, _Pad) -> [C];$/;"	f	module:lager_format
chars	deps/lager-master/src/lager_format.erl	/^chars(C, 1) ->$/;"	f	module:lager_format
chars	deps/lager-master/src/lager_format.erl	/^chars(C, 2) ->$/;"	f	module:lager_format
chars	deps/lager-master/src/lager_format.erl	/^chars(C, 3) ->$/;"	f	module:lager_format
chars	deps/lager-master/src/lager_format.erl	/^chars(C, N) when is_integer(N) ->$/;"	f	module:lager_format
chars	deps/lager-master/src/lager_format.erl	/^chars(C, N) when is_integer(N), (N band 1) =:= 0 ->$/;"	f	module:lager_format
chars	deps/lager-master/src/lager_format.erl	/^chars(_C, 0) ->$/;"	f	module:lager_format
chars	src/lager/lager_format.erl	/^chars(C, 1) ->$/;"	f	module:lager_format
chars	src/lager/lager_format.erl	/^chars(C, 2) ->$/;"	f	module:lager_format
chars	src/lager/lager_format.erl	/^chars(C, 3) ->$/;"	f	module:lager_format
chars	src/lager/lager_format.erl	/^chars(C, N) when is_integer(N) ->$/;"	f	module:lager_format
chars	src/lager/lager_format.erl	/^chars(C, N) when is_integer(N), (N band 1) =:= 0 ->$/;"	f	module:lager_format
chars	src/lager/lager_format.erl	/^chars(_C, 0) ->$/;"	f	module:lager_format
check	deps/lager-master/test/trunc_io_eqc.erl	/^check() ->$/;"	f	module:trunc_io_eqc
check_db_state	deps/mysql/db_util.erl	/^check_db_state() ->$/;"	f	module:db_util
check_db_state	src/mysql/db_util.erl	/^check_db_state() ->$/;"	f	module:db_util
check_handshake_auth	src/mysql/emysql/emysql_auth.erl	/^check_handshake_auth(#error_packet{} = Err, _Greeting) -> {error, {auth_fail, Err}}.$/;"	f	module:emysql_auth
check_handshake_auth	src/mysql/emysql/emysql_auth.erl	/^check_handshake_auth(#ok_packet{}, Greeting) -> {ok, Greeting};$/;"	f	module:emysql_auth
check_hwm	deps/lager-master/src/error_logger_lager_h.erl	/^check_hwm(State = #state{hwm = Hwm, lasttime = Last, dropped = Drop}) ->$/;"	f	module:error_logger_lager_h
check_hwm	deps/lager-master/src/error_logger_lager_h.erl	/^check_hwm(State = #state{hwm = undefined}) ->$/;"	f	module:error_logger_lager_h
check_hwm	deps/lager-master/src/error_logger_lager_h.erl	/^check_hwm(State = #state{mps = Mps, hwm = Hwm}) when Mps < Hwm ->$/;"	f	module:error_logger_lager_h
check_hwm	src/lager/error_logger_lager_h.erl	/^check_hwm(State = #state{hwm = Hwm, lasttime = Last, dropped = Drop}) ->$/;"	f	module:error_logger_lager_h
check_hwm	src/lager/error_logger_lager_h.erl	/^check_hwm(State = #state{hwm = undefined}) ->$/;"	f	module:error_logger_lager_h
check_hwm	src/lager/error_logger_lager_h.erl	/^check_hwm(State = #state{mps = Mps, hwm = Hwm}) when Mps < Hwm ->$/;"	f	module:error_logger_lager_h
check_includes	myfile/mmake.erl	/^check_includes(File, IncludePath, ObjMTime) ->$/;"	f	module:mmake
check_includes	src/misc/mmake.erl	/^check_includes(File, IncludePath, ObjMTime) ->$/;"	f	module:mmake
check_includes2	myfile/mmake.erl	/^check_includes2(Epp, File, ObjMTime) ->$/;"	f	module:mmake
check_includes2	src/misc/mmake.erl	/^check_includes2(Epp, File, ObjMTime) ->$/;"	f	module:mmake
check_log_db	deps/mysql/db.erl	/^check_log_db() ->$/;"	f	module:db
check_log_db	src/mysql/db.erl	/^check_log_db() ->$/;"	f	module:db
check_log_db	src/mysql/emysql/edb.erl	/^check_log_db() ->$/;"	f	module:db
check_reload	myfile/reloader.erl	/^check_reload() ->$/;"	f	module:reloader
check_reload2	myfile/reloader.erl	/^check_reload2() ->$/;"	f	module:reloader
check_trace	deps/lager-master/src/lager_util.erl	/^check_trace(Attrs, {Filter, _Level, Dest}) when is_list(Filter) ->$/;"	f	module:lager_util
check_trace	deps/lager-master/src/lager_util.erl	/^check_trace(Attrs, {Filter, _Level, Dest}) when is_tuple(Filter) ->$/;"	f	module:lager_util
check_trace	src/lager/lager_util.erl	/^check_trace(Attrs, {Filter, _Level, Dest}) when is_list(Filter) ->$/;"	f	module:lager_util
check_trace	src/lager/lager_util.erl	/^check_trace(Attrs, {Filter, _Level, Dest}) when is_tuple(Filter) ->$/;"	f	module:lager_util
check_trace_test	deps/lager-master/src/lager_util.erl	/^check_trace_test() ->$/;"	f	module:lager_util
check_trace_test	src/lager/lager_util.erl	/^check_trace_test() ->$/;"	f	module:lager_util
check_traces	deps/lager-master/src/lager_util.erl	/^check_traces(Attrs, Level, [Flow|Flows], Acc) ->$/;"	f	module:lager_util
check_traces	deps/lager-master/src/lager_util.erl	/^check_traces(Attrs, Level, [{Filter, _, _}|Flows], Acc) when length(Attrs) < length(Filter) ->$/;"	f	module:lager_util
check_traces	deps/lager-master/src/lager_util.erl	/^check_traces(Attrs, Level, [{_, {mask, FilterLevel}, _}|Flows], Acc) when (Level band FilterLevel) == 0 ->$/;"	f	module:lager_util
check_traces	deps/lager-master/src/lager_util.erl	/^check_traces(_, _,  [], Acc) ->$/;"	f	module:lager_util
check_traces	src/lager/lager_util.erl	/^check_traces(Attrs, Level, [Flow|Flows], Acc) ->$/;"	f	module:lager_util
check_traces	src/lager/lager_util.erl	/^check_traces(Attrs, Level, [{Filter, _, _}|Flows], Acc) when length(Attrs) < length(Filter) ->$/;"	f	module:lager_util
check_traces	src/lager/lager_util.erl	/^check_traces(Attrs, Level, [{_, {mask, FilterLevel}, _}|Flows], Acc) when (Level band FilterLevel) == 0 ->$/;"	f	module:lager_util
check_traces	src/lager/lager_util.erl	/^check_traces(_, _,  [], Acc) ->$/;"	f	module:lager_util
check_version	deps/mysql/db_version.erl	/^check_version() ->$/;"	f	module:db_version
check_version	src/mysql/db_version.erl	/^check_version() ->$/;"	f	module:db_version
cleanup	deps/lager-master/test/lager_test_backend.erl	/^cleanup(_) ->$/;"	f	module:lager_test_backend
clear_all_traces	deps/lager-master/src/lager.erl	/^clear_all_traces() ->$/;"	f	module:lager
clear_all_traces	src/lager/lager.erl	/^clear_all_traces() ->$/;"	f	module:lager
close_connection	src/mysql/emysql/emysql_conn.erl	/^close_connection(Conn) ->$/;"	f	module:emysql_conn
code_change	deps/lager-master/src/error_logger_lager_h.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:error_logger_lager_h
code_change	deps/lager-master/src/lager_backend_throttle.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_backend_throttle
code_change	deps/lager-master/src/lager_common_test_backend.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_common_test_backend
code_change	deps/lager-master/src/lager_console_backend.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_console_backend
code_change	deps/lager-master/src/lager_crash_log.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_crash_log
code_change	deps/lager-master/src/lager_file_backend.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_file_backend
code_change	deps/lager-master/src/lager_handler_watcher.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_handler_watcher
code_change	deps/lager-master/test/crash.erl	/^code_change(_, State, _) ->$/;"	f	module:crash
code_change	deps/lager-master/test/lager_crash_backend.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_crash_backend
code_change	deps/lager-master/test/lager_test_backend.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_test_backend
code_change	deps/mysql/mysql.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:mysql
code_change	myfile/tcp_acceptor.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:tcp_acceptor
code_change	myfile/tcp_listener.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:tcp_listener
code_change	src/kernel/tcp_acceptor.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:tcp_acceptor
code_change	src/kernel/tcp_listener.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:tcp_listener
code_change	src/lager/error_logger_lager_h.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:error_logger_lager_h
code_change	src/lager/lager_backend_throttle.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_backend_throttle
code_change	src/lager/lager_common_test_backend.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_common_test_backend
code_change	src/lager/lager_console_backend.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_console_backend
code_change	src/lager/lager_crash_log.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_crash_log
code_change	src/lager/lager_file_backend.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_file_backend
code_change	src/lager/lager_handler_watcher.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:lager_handler_watcher
code_change	src/logger/logger_h.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:logger_h
code_change	src/mod/gen_server2.erl	/^code_change(_OldVsn, State, _Extra) -> $/;"	f	module:gen_server2
code_change	src/mysql/emysql/emysql_conn_mgr.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:emysql_conn_mgr
code_change	src/mysql/emysql/emysql_statements.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:emysql_statements
code_change	src/mysql/mysql.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:mysql
coerce_2_list	myfile/mmake.erl	/^coerce_2_list(X) ->$/;"	f	module:mmake
coerce_2_list	myfile/mmake.erl	/^coerce_2_list(X) when is_atom(X) ->$/;"	f	module:mmake
coerce_2_list	src/misc/mmake.erl	/^coerce_2_list(X) ->$/;"	f	module:mmake
coerce_2_list	src/misc/mmake.erl	/^coerce_2_list(X) when is_atom(X) ->$/;"	f	module:mmake
collect	deps/lager-master/src/lager_format.erl	/^collect([$~|Fmt0], Args0) ->$/;"	f	module:lager_format
collect	deps/lager-master/src/lager_format.erl	/^collect([C|Fmt], Args) ->$/;"	f	module:lager_format
collect	deps/lager-master/src/lager_format.erl	/^collect([], []) -> [].$/;"	f	module:lager_format
collect	src/lager/lager_format.erl	/^collect([$~|Fmt0], Args0) ->$/;"	f	module:lager_format
collect	src/lager/lager_format.erl	/^collect([C|Fmt], Args) ->$/;"	f	module:lager_format
collect	src/lager/lager_format.erl	/^collect([], []) -> [].$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$#|Fmt], [A|Args]) -> {$#,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$+|Fmt], [A|Args]) -> {$+,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$B|Fmt], [A|Args]) -> {$B,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$P|Fmt], [A,Depth|Args]) -> {$P,[A,Depth],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$W|Fmt], [A,Depth|Args]) -> {$W,[A,Depth],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$X|Fmt], [A,Prefix|Args]) -> {$X,[A,Prefix],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$b|Fmt], [A|Args]) -> {$b,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$c|Fmt], [A|Args]) -> {$c,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$e|Fmt], [A|Args]) -> {$e,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$f|Fmt], [A|Args]) -> {$f,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$g|Fmt], [A|Args]) -> {$g,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$i|Fmt], [A|Args]) -> {$i,[A],Fmt,Args}.$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$n|Fmt], Args) when is_list(Args) -> {$n,[],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$p|Fmt], [A|Args]) -> {$p,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$s|Fmt], [A|Args]) -> {$s,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$w|Fmt], [A|Args]) -> {$w,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$x|Fmt], [A,Prefix|Args]) -> {$x,[A,Prefix],Fmt,Args};$/;"	f	module:lager_format
collect_cc	deps/lager-master/src/lager_format.erl	/^collect_cc([$~|Fmt], Args) when is_list(Args) -> {$~,[],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$#|Fmt], [A|Args]) -> {$#,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$+|Fmt], [A|Args]) -> {$+,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$B|Fmt], [A|Args]) -> {$B,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$P|Fmt], [A,Depth|Args]) -> {$P,[A,Depth],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$W|Fmt], [A,Depth|Args]) -> {$W,[A,Depth],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$X|Fmt], [A,Prefix|Args]) -> {$X,[A,Prefix],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$b|Fmt], [A|Args]) -> {$b,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$c|Fmt], [A|Args]) -> {$c,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$e|Fmt], [A|Args]) -> {$e,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$f|Fmt], [A|Args]) -> {$f,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$g|Fmt], [A|Args]) -> {$g,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$i|Fmt], [A|Args]) -> {$i,[A],Fmt,Args}.$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$n|Fmt], Args) when is_list(Args) -> {$n,[],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$p|Fmt], [A|Args]) -> {$p,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$s|Fmt], [A|Args]) -> {$s,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$w|Fmt], [A|Args]) -> {$w,[A],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$x|Fmt], [A,Prefix|Args]) -> {$x,[A,Prefix],Fmt,Args};$/;"	f	module:lager_format
collect_cc	src/lager/lager_format.erl	/^collect_cc([$~|Fmt], Args) when is_list(Args) -> {$~,[],Fmt,Args};$/;"	f	module:lager_format
collect_cseq	deps/lager-master/src/lager_format.erl	/^collect_cseq(Fmt0, Args0) ->$/;"	f	module:lager_format
collect_cseq	src/lager/lager_format.erl	/^collect_cseq(Fmt0, Args0) ->$/;"	f	module:lager_format
collect_workers	deps/lager-master/test/lager_test_backend.erl	/^collect_workers(Workers) ->$/;"	f	module:lager_test_backend
collect_workers	deps/lager-master/test/lager_test_backend.erl	/^collect_workers([]) ->$/;"	f	module:lager_test_backend
compile	src/misc/wg_dynamic_config.erl	/^compile(Mod, L) ->$/;"	f	module:wg_dynamic_config
compile	src/misc/wg_dynamic_config.erl	/^compile(Mod, L, KeyPos,_Dir,CompileOtps) ->$/;"	f	module:wg_dynamic_config
compile	src/misc/wg_dynamic_config.erl	/^compile(Mod,L,KeyPos,Dir) ->$/;"	f	module:wg_dynamic_config
compile_kv	src/misc/wg_dynamic_config.erl	/^compile_kv(Mod,L) ->$/;"	f	module:wg_dynamic_config
compile_record	src/misc/wg_dynamic_config.erl	/^compile_record(Mod,L) ->$/;"	f	module:wg_dynamic_config
concat_lists	deps/lager-master/src/lager_transform.erl	/^concat_lists({call, Line, _Function, _Args} = Call, B) ->$/;"	f	module:lager_transform
concat_lists	deps/lager-master/src/lager_transform.erl	/^concat_lists({cons, Line, Element, Tail}, B) ->$/;"	f	module:lager_transform
concat_lists	deps/lager-master/src/lager_transform.erl	/^concat_lists({lc, Line, _Body, _Generator} = LC, B) ->$/;"	f	module:lager_transform
concat_lists	deps/lager-master/src/lager_transform.erl	/^concat_lists({nil, _Line}, B) ->$/;"	f	module:lager_transform
concat_lists	deps/lager-master/src/lager_transform.erl	/^concat_lists({record_field, Line, _Var, _Record, _Field} = Rec, B) ->$/;"	f	module:lager_transform
concat_lists	deps/lager-master/src/lager_transform.erl	/^concat_lists({var, Line, _Name}=Var, B) ->$/;"	f	module:lager_transform
concat_lists	src/lager/lager_transform.erl	/^concat_lists({call, Line, _Function, _Args} = Call, B) ->$/;"	f	module:lager_transform
concat_lists	src/lager/lager_transform.erl	/^concat_lists({cons, Line, Element, Tail}, B) ->$/;"	f	module:lager_transform
concat_lists	src/lager/lager_transform.erl	/^concat_lists({lc, Line, _Body, _Generator} = LC, B) ->$/;"	f	module:lager_transform
concat_lists	src/lager/lager_transform.erl	/^concat_lists({nil, _Line}, B) ->$/;"	f	module:lager_transform
concat_lists	src/lager/lager_transform.erl	/^concat_lists({record_field, Line, _Var, _Record, _Field} = Rec, B) ->$/;"	f	module:lager_transform
concat_lists	src/lager/lager_transform.erl	/^concat_lists({var, Line, _Name}=Var, B) ->$/;"	f	module:lager_transform
cond_lowercase	deps/lager-master/src/lager_format.erl	/^cond_lowercase(String, true) ->$/;"	f	module:lager_format
cond_lowercase	deps/lager-master/src/lager_format.erl	/^cond_lowercase(String,false) ->$/;"	f	module:lager_format
cond_lowercase	src/lager/lager_format.erl	/^cond_lowercase(String, true) ->$/;"	f	module:lager_format
cond_lowercase	src/lager/lager_format.erl	/^cond_lowercase(String,false) ->$/;"	f	module:lager_format
config_ok	src/mysql/emysql/emysql.erl	/^config_ok(#pool{pool_id=PoolId,size=Size,user=User,password=Password,host=Host,port=Port,$/;"	f	module:emysql
config_ok	src/mysql/emysql/emysql.erl	/^config_ok(_BadOptions) ->$/;"	f	module:emysql
config_to_id	deps/lager-master/src/lager_file_backend.erl	/^config_to_id(Config) ->$/;"	f	module:lager_file_backend
config_to_id	deps/lager-master/src/lager_file_backend.erl	/^config_to_id([{Name,_Severity,_Size,_Rotation,_Count}, _Format]) ->$/;"	f	module:lager_file_backend
config_to_id	deps/lager-master/src/lager_file_backend.erl	/^config_to_id([{Name,_Severity}, _Format]) when is_list(Name) ->$/;"	f	module:lager_file_backend
config_to_id	deps/lager-master/src/lager_file_backend.erl	/^config_to_id({Name,_Severity,_Size,_Rotation,_Count}) ->$/;"	f	module:lager_file_backend
config_to_id	deps/lager-master/src/lager_file_backend.erl	/^config_to_id({Name,_Severity}) when is_list(Name) ->$/;"	f	module:lager_file_backend
config_to_id	src/lager/lager_file_backend.erl	/^config_to_id(Config) ->$/;"	f	module:lager_file_backend
config_to_id	src/lager/lager_file_backend.erl	/^config_to_id([{Name,_Severity,_Size,_Rotation,_Count}, _Format]) ->$/;"	f	module:lager_file_backend
config_to_id	src/lager/lager_file_backend.erl	/^config_to_id([{Name,_Severity}, _Format]) when is_list(Name) ->$/;"	f	module:lager_file_backend
config_to_id	src/lager/lager_file_backend.erl	/^config_to_id({Name,_Severity,_Size,_Rotation,_Count}) ->$/;"	f	module:lager_file_backend
config_to_id	src/lager/lager_file_backend.erl	/^config_to_id({Name,_Severity}) when is_list(Name) ->$/;"	f	module:lager_file_backend
config_to_levels	deps/lager-master/src/lager_util.erl	/^config_to_levels(Conf) ->$/;"	f	module:lager_util
config_to_levels	deps/lager-master/src/lager_util.erl	/^config_to_levels(Conf) when is_atom(Conf) ->$/;"	f	module:lager_util
config_to_levels	deps/lager-master/src/lager_util.erl	/^config_to_levels([$! | Rest]) ->$/;"	f	module:lager_util
config_to_levels	deps/lager-master/src/lager_util.erl	/^config_to_levels([$< | Rest]) ->$/;"	f	module:lager_util
config_to_levels	deps/lager-master/src/lager_util.erl	/^config_to_levels([$<, $= | Rest]) ->$/;"	f	module:lager_util
config_to_levels	deps/lager-master/src/lager_util.erl	/^config_to_levels([$= | Rest]) ->$/;"	f	module:lager_util
config_to_levels	deps/lager-master/src/lager_util.erl	/^config_to_levels([$=, $< | Rest]) ->$/;"	f	module:lager_util
config_to_levels	deps/lager-master/src/lager_util.erl	/^config_to_levels([$=, $> | Rest]) ->$/;"	f	module:lager_util
config_to_levels	deps/lager-master/src/lager_util.erl	/^config_to_levels([$> | Rest]) ->$/;"	f	module:lager_util
config_to_levels	deps/lager-master/src/lager_util.erl	/^config_to_levels([$>, $= | Rest]) ->$/;"	f	module:lager_util
config_to_levels	src/lager/lager_util.erl	/^config_to_levels(Conf) ->$/;"	f	module:lager_util
config_to_levels	src/lager/lager_util.erl	/^config_to_levels(Conf) when is_atom(Conf) ->$/;"	f	module:lager_util
config_to_levels	src/lager/lager_util.erl	/^config_to_levels([$! | Rest]) ->$/;"	f	module:lager_util
config_to_levels	src/lager/lager_util.erl	/^config_to_levels([$< | Rest]) ->$/;"	f	module:lager_util
config_to_levels	src/lager/lager_util.erl	/^config_to_levels([$<, $= | Rest]) ->$/;"	f	module:lager_util
config_to_levels	src/lager/lager_util.erl	/^config_to_levels([$= | Rest]) ->$/;"	f	module:lager_util
config_to_levels	src/lager/lager_util.erl	/^config_to_levels([$=, $< | Rest]) ->$/;"	f	module:lager_util
config_to_levels	src/lager/lager_util.erl	/^config_to_levels([$=, $> | Rest]) ->$/;"	f	module:lager_util
config_to_levels	src/lager/lager_util.erl	/^config_to_levels([$> | Rest]) ->$/;"	f	module:lager_util
config_to_levels	src/lager/lager_util.erl	/^config_to_levels([$>, $= | Rest]) ->$/;"	f	module:lager_util
config_to_levels_int	deps/lager-master/src/lager_util.erl	/^config_to_levels_int(Conf) ->$/;"	f	module:lager_util
config_to_levels_int	src/lager/lager_util.erl	/^config_to_levels_int(Conf) ->$/;"	f	module:lager_util
config_to_levels_test	deps/lager-master/src/lager_util.erl	/^config_to_levels_test() ->$/;"	f	module:lager_util
config_to_levels_test	src/lager/lager_util.erl	/^config_to_levels_test() ->$/;"	f	module:lager_util
config_to_mask	deps/lager-master/src/lager_util.erl	/^config_to_mask(Conf) ->$/;"	f	module:lager_util
config_to_mask	src/lager/lager_util.erl	/^config_to_mask(Conf) ->$/;"	f	module:lager_util
config_to_mask_test	deps/lager-master/src/lager_util.erl	/^config_to_mask_test() ->$/;"	f	module:lager_util
config_to_mask_test	src/lager/lager_util.erl	/^config_to_mask_test() ->$/;"	f	module:lager_util
config_validation_test_	deps/lager-master/src/lager_file_backend.erl	/^config_validation_test_() ->$/;"	f	module:lager_file_backend
config_validation_test_	src/lager/lager_file_backend.erl	/^config_validation_test_() ->$/;"	f	module:lager_file_backend
conn	deps/mysql/mysql.erl	/^-record(conn, {$/;"	r
conn	src/mysql/mysql.erl	/^-record(conn, {$/;"	r
conn_test_period	src/mysql/emysql/emysql_app.erl	/^conn_test_period() ->$/;"	f	module:emysql_app
connect	deps/mysql/mysql.erl	/^connect(PoolId, Host, Port, User, Password, Database, Encoding, Reconnect) ->$/;"	f	module:mysql
connect	deps/mysql/mysql.erl	/^connect(PoolId, Host, Port, User, Password, Database, Encoding, Reconnect,$/;"	f	module:mysql
connect	deps/mysql/mysql.erl	/^connect(PoolId, Host, undefined, User, Password, Database, Reconnect) ->$/;"	f	module:mysql
connect	src/mysql/mysql.erl	/^connect(PoolId, Host, Port, User, Password, Database, Encoding, Reconnect) ->$/;"	f	module:mysql
connect	src/mysql/mysql.erl	/^connect(PoolId, Host, Port, User, Password, Database, Encoding, Reconnect,$/;"	f	module:mysql
connect	src/mysql/mysql.erl	/^connect(PoolId, Host, undefined, User, Password, Database, Reconnect) ->$/;"	f	module:mysql
connection_locked_at	src/mysql/emysql/emysql_conn_mgr.erl	/^connection_locked_at(Conn, MonitorRef) ->$/;"	f	module:emysql_conn_mgr
console_log_test_	deps/lager-master/src/lager_console_backend.erl	/^console_log_test_() ->$/;"	f	module:lager_console_backend
console_log_test_	src/lager/lager_console_backend.erl	/^console_log_test_() ->$/;"	f	module:lager_console_backend
control	deps/lager-master/src/lager_format.erl	/^control($#, [A], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control($+, [A], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control($B, [A], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control($X, [A,Prefix], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control($X, [A,Prefix], F, Adj, P, Pad, _Enc, L) when is_integer(A), $/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control($b, [A], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control($c, [A], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control($c, [A], F, Adj, P, Pad, unicode, L) when is_integer(A) ->$/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control($e, [A], F, Adj, P, Pad, _Enc, L) when is_float(A) ->$/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control($f, [A], F, Adj, P, Pad, _Enc, L) when is_float(A) ->$/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control($g, [A], F, Adj, P, Pad, _Enc, L) when is_float(A) ->$/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control($i, [_A], _F, _Adj, _P, _Pad, _Enc, L) ->$/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control($n, [], F, Adj, P, Pad, _Enc, L) ->$/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control($s, [A], F, Adj, P, Pad, _Enc, L) when is_atom(A) ->$/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control($x, [A,Prefix], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control($x, [A,Prefix], F, Adj, P, Pad, _Enc, L) when is_integer(A), $/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control($~, [], F, Adj, P, Pad, _Enc, L) ->$/;"	f	module:lager_format
control	deps/lager-master/src/lager_format.erl	/^control(C, A, F, Adj, P, Pad, Enc, L) ->$/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($#, [A], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($+, [A], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($B, [A], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($X, [A,Prefix], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($X, [A,Prefix], F, Adj, P, Pad, _Enc, L) when is_integer(A), $/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($b, [A], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($c, [A], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($c, [A], F, Adj, P, Pad, unicode, L) when is_integer(A) ->$/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($e, [A], F, Adj, P, Pad, _Enc, L) when is_float(A) ->$/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($f, [A], F, Adj, P, Pad, _Enc, L) when is_float(A) ->$/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($g, [A], F, Adj, P, Pad, _Enc, L) when is_float(A) ->$/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($i, [_A], _F, _Adj, _P, _Pad, _Enc, L) ->$/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($n, [], F, Adj, P, Pad, _Enc, L) ->$/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($s, [A], F, Adj, P, Pad, _Enc, L) when is_atom(A) ->$/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($x, [A,Prefix], F, Adj, P, Pad, _Enc, L) when is_integer(A) ->$/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($x, [A,Prefix], F, Adj, P, Pad, _Enc, L) when is_integer(A), $/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control($~, [], F, Adj, P, Pad, _Enc, L) ->$/;"	f	module:lager_format
control	src/lager/lager_format.erl	/^control(C, A, F, Adj, P, Pad, Enc, L) ->$/;"	f	module:lager_format
control2	deps/lager-master/src/lager_format.erl	/^control2($P, [A,Depth], _F, _Adj, _P, _Pad, _Enc, L) when is_integer(Depth) ->$/;"	f	module:lager_format
control2	deps/lager-master/src/lager_format.erl	/^control2($W, [A,Depth], F, Adj, P, Pad, _Enc, L) when is_integer(Depth) ->$/;"	f	module:lager_format
control2	deps/lager-master/src/lager_format.erl	/^control2($p, [A], _F, _Adj, _P, _Pad, _Enc, L) ->$/;"	f	module:lager_format
control2	deps/lager-master/src/lager_format.erl	/^control2($s, [L0], F, Adj, P, Pad, latin1, L) ->$/;"	f	module:lager_format
control2	deps/lager-master/src/lager_format.erl	/^control2($s, [L0], F, Adj, P, Pad, unicode, L) ->$/;"	f	module:lager_format
control2	deps/lager-master/src/lager_format.erl	/^control2($w, [A], F, Adj, P, Pad, _Enc, L) ->$/;"	f	module:lager_format
control2	src/lager/lager_format.erl	/^control2($P, [A,Depth], _F, _Adj, _P, _Pad, _Enc, L) when is_integer(Depth) ->$/;"	f	module:lager_format
control2	src/lager/lager_format.erl	/^control2($W, [A,Depth], F, Adj, P, Pad, _Enc, L) when is_integer(Depth) ->$/;"	f	module:lager_format
control2	src/lager/lager_format.erl	/^control2($p, [A], _F, _Adj, _P, _Pad, _Enc, L) ->$/;"	f	module:lager_format
control2	src/lager/lager_format.erl	/^control2($s, [L0], F, Adj, P, Pad, latin1, L) ->$/;"	f	module:lager_format
control2	src/lager/lager_format.erl	/^control2($s, [L0], F, Adj, P, Pad, unicode, L) ->$/;"	f	module:lager_format
control2	src/lager/lager_format.erl	/^control2($w, [A], F, Adj, P, Pad, _Enc, L) ->$/;"	f	module:lager_format
convert_type	deps/mysql/mysql_conn.erl	/^convert_type(Val, ColType) ->$/;"	f	module:mysql_conn
convert_type	src/mysql/mysql_conn.erl	/^convert_type(Val, ColType) ->$/;"	f	module:mysql_conn
count	deps/lager-master/test/lager_test_backend.erl	/^count() ->$/;"	f	module:lager_test_backend
count_ignored	deps/lager-master/test/lager_test_backend.erl	/^count_ignored() ->$/;"	f	module:lager_test_backend
count_nl	deps/lager-master/src/lager_stdlib.erl	/^count_nl($\\n) ->$/;"	f	module:lager_stdlib
count_nl	deps/lager-master/src/lager_stdlib.erl	/^count_nl(Bin) when is_binary(Bin) ->$/;"	f	module:lager_stdlib
count_nl	deps/lager-master/src/lager_stdlib.erl	/^count_nl([E | Es]) ->$/;"	f	module:lager_stdlib
count_nl	deps/lager-master/src/lager_stdlib.erl	/^count_nl(_) ->$/;"	f	module:lager_stdlib
count_nl	src/lager/lager_stdlib.erl	/^count_nl($\\n) ->$/;"	f	module:lager_stdlib
count_nl	src/lager/lager_stdlib.erl	/^count_nl(Bin) when is_binary(Bin) ->$/;"	f	module:lager_stdlib
count_nl	src/lager/lager_stdlib.erl	/^count_nl([E | Es]) ->$/;"	f	module:lager_stdlib
count_nl	src/lager/lager_stdlib.erl	/^count_nl(_) ->$/;"	f	module:lager_stdlib
crash	deps/lager-master/test/crash.erl	/^-module(crash).$/;"	m
crash	deps/lager-master/test/lager_test_backend.erl	/^crash(Type) ->$/;"	f	module:lager_test_backend
date_time_now	deps/lager-master/src/lager_default_formatter.erl	/^date_time_now() ->$/;"	f	module:lager_default_formatter
date_time_now	src/lager/lager_default_formatter.erl	/^date_time_now() ->$/;"	f	module:lager_default_formatter
datetime	deps/lager-master/src/lager_msg.erl	/^datetime(Msg) ->$/;"	f	module:lager_msg
datetime	src/lager/lager_msg.erl	/^datetime(Msg) ->$/;"	f	module:lager_msg
db	deps/mysql/db.erl	/^-module(db).$/;"	m
db	src/mysql/db.erl	/^-module(db).$/;"	m
db	src/mysql/emysql/edb.erl	/^-module(db).$/;"	m
db_sql	deps/mysql/db_sql.erl	/^-module(db_sql).$/;"	m
db_sql	src/mysql/db_sql.erl	/^-module(db_sql).$/;"	m
db_util	deps/mysql/db_util.erl	/^-module(db_util).$/;"	m
db_util	src/mysql/db_util.erl	/^-module(db_util).$/;"	m
db_util	src/mysql/emysql/edb_util.erl	/^-module(db_util).$/;"	m
db_version	deps/mysql/db_version.erl	/^-module(db_version).$/;"	m
db_version	src/mysql/db_version.erl	/^-module(db_version).$/;"	m
dec_depth	deps/lager-master/src/lager_trunc_io.erl	/^dec_depth(#print_options{depth=Depth} = Options) when Depth > 0 ->$/;"	f	module:lager_trunc_io
dec_depth	deps/lager-master/src/lager_trunc_io.erl	/^dec_depth(Options) ->$/;"	f	module:lager_trunc_io
dec_depth	src/lager/lager_trunc_io.erl	/^dec_depth(#print_options{depth=Depth} = Options) when Depth > 0 ->$/;"	f	module:lager_trunc_io
dec_depth	src/lager/lager_trunc_io.erl	/^dec_depth(Options) ->$/;"	f	module:lager_trunc_io
decode_row_data	src/mysql/emysql/emysql_tcp.erl	/^decode_row_data(<<251:8, Tail\/binary>>, [Field|Rest]) ->  $/;"	f	module:emysql_tcp
decode_row_data	src/mysql/emysql/emysql_tcp.erl	/^decode_row_data(<<252:8, Length:16\/little, Data:Length\/binary, Tail\/binary>>, [Field|Rest]) ->$/;"	f	module:emysql_tcp
decode_row_data	src/mysql/emysql/emysql_tcp.erl	/^decode_row_data(<<253:8, Length:24\/little, Data:Length\/binary, Tail\/binary>>, [Field|Rest]) ->$/;"	f	module:emysql_tcp
decode_row_data	src/mysql/emysql/emysql_tcp.erl	/^decode_row_data(<<254:8, Length:64\/little, Data:Length\/binary, Tail\/binary>>, [Field|Rest]) ->$/;"	f	module:emysql_tcp
decode_row_data	src/mysql/emysql/emysql_tcp.erl	/^decode_row_data(<<>>, []) ->$/;"	f	module:emysql_tcp
decode_row_data	src/mysql/emysql/emysql_tcp.erl	/^decode_row_data(<<Length:8, Data:Length\/binary, Tail\/binary>>, [Field|Rest]) $/;"	f	module:emysql_tcp
decrement_pool_size	src/mysql/emysql/emysql.erl	/^decrement_pool_size(PoolId, Num) when is_integer(Num) ->$/;"	f	module:emysql
default_timeout	src/mysql/emysql/emysql.erl	/^default_timeout() ->$/;"	f	module:emysql
default_timeout	src/mysql/emysql/emysql_app.erl	/^default_timeout() ->$/;"	f	module:emysql_app
del	src/misc/global_data_disk.erl	/^del(K) ->$/;"	f	module:global_data_disk
del	src/misc/global_data_ram.erl	/^del(K) ->$/;"	f	module:global_data_ram
delete	deps/mysql/db_util.erl	/^delete(Table,WhereFields) ->$/;"	f	module:db_util
delete	deps/mysql/db_util.erl	/^delete(Table,WhereFields,Limit)->$/;"	f	module:db_util
delete	src/mysql/db_util.erl	/^delete(Table,WhereFields) ->$/;"	f	module:db_util
delete	src/mysql/db_util.erl	/^delete(Table,WhereFields,Limit)->$/;"	f	module:db_util
delete	src/mysql/emysql/edb_util.erl	/^delete(Table,WhereFields) ->$/;"	f	module:db_util
delete	src/mysql/emysql/edb_util.erl	/^delete(Table,WhereFields,Limit)->$/;"	f	module:db_util
depth_limit_test	deps/lager-master/src/lager_trunc_io.erl	/^depth_limit_test() ->$/;"	f	module:lager_trunc_io
depth_limit_test	src/lager/lager_trunc_io.erl	/^depth_limit_test() ->$/;"	f	module:lager_trunc_io
destinations	deps/lager-master/src/lager_msg.erl	/^destinations(Msg) ->$/;"	f	module:lager_msg
destinations	src/lager/lager_msg.erl	/^destinations(Msg) ->$/;"	f	module:lager_msg
discard_messages	deps/lager-master/src/error_logger_lager_h.erl	/^discard_messages(Second, Count) ->$/;"	f	module:error_logger_lager_h
discard_messages	src/lager/error_logger_lager_h.erl	/^discard_messages(Second, Count) ->$/;"	f	module:error_logger_lager_h
dispatch_log	deps/lager-master/src/lager.erl	/^dispatch_log(Severity, Metadata, Format, Args, Size) when is_atom(Severity)->$/;"	f	module:lager
dispatch_log	deps/lager-master/src/lager.erl	/^dispatch_log(Severity, _Module, _Function, _Line, _Pid, Metadata, Format, Args, Size) ->$/;"	f	module:lager
dispatch_log	src/lager/lager.erl	/^dispatch_log(Severity, Metadata, Format, Args, Size) when is_atom(Severity)->$/;"	f	module:lager
dispatch_log	src/lager/lager.erl	/^dispatch_log(Severity, _Module, _Function, _Line, _Pid, Metadata, Format, Args, Size) ->$/;"	f	module:lager
do_call	src/mod/gen_server2.erl	/^do_call(Info, From, State) ->$/;"	f	module:gen_server2
do_call	src/mod/gen_server2.erl	/^do_call(get_status,_From,State) ->$/;"	f	module:gen_server2
do_call	src/mod/gen_server2.erl	/^do_call(stop,_From,State) ->$/;"	f	module:gen_server2
do_call	src/mod/gen_server2.erl	/^do_call({apply,Fun},_From,State) ->$/;"	f	module:gen_server2
do_call	src/mod/gen_server2.erl	/^do_call({mfa_apply,Mod,Fun,Args},_From,State) when Mod =\/= os ->$/;"	f	module:gen_server2
do_call	src/mod/gen_server2.erl	/^do_call({mfa_status,Mod,Fun,Args},_From,State) when Mod =\/= os ->$/;"	f	module:gen_server2
do_call	src/mod/mod_reader.erl	/^do_call(Info, _From, State) -> $/;"	f	module:mod_reader
do_cast	src/mod/gen_server2.erl	/^do_cast(Info, State) ->$/;"	f	module:gen_server2
do_cast	src/mod/gen_server2.erl	/^do_cast(stop,State) ->$/;"	f	module:gen_server2
do_cast	src/mod/gen_server2.erl	/^do_cast({apply,Fun},State) ->$/;"	f	module:gen_server2
do_cast	src/mod/gen_server2.erl	/^do_cast({mfa_apply,Mod,Fun,Args},State) when Mod =\/= os ->$/;"	f	module:gen_server2
do_cast	src/mod/gen_server2.erl	/^do_cast({mfa_status,Mod,Fun,Args},State) when Mod =\/= os ->$/;"	f	module:gen_server2
do_cast	src/mod/gen_server2.erl	/^do_cast({status_apply,Fun},State) ->$/;"	f	module:gen_server2
do_cast	src/mod/mod_reader.erl	/^do_cast(Info, State) -> $/;"	f	module:mod_reader
do_cast	src/mod/mod_reader.erl	/^do_cast({set_socket,Socket},State) ->    $/;"	f	module:mod_reader
do_check_reload	myfile/reloader.erl	/^do_check_reload() ->$/;"	f	module:reloader
do_compile	src/misc/wg_dynamic_config.erl	/^do_compile(Module,L, KeyPos, CompileOtps) ->$/;"	f	module:wg_dynamic_config
do_execute	deps/mysql/mysql_conn.erl	/^do_execute(State, Name, Params, ExpectedVersion) ->$/;"	f	module:mysql_conn
do_execute	src/mysql/mysql_conn.erl	/^do_execute(State, Name, Params, ExpectedVersion) ->$/;"	f	module:mysql_conn
do_execute1	deps/mysql/mysql_conn.erl	/^do_execute1(State, Name, Params) ->$/;"	f	module:mysql_conn
do_execute1	src/mysql/mysql_conn.erl	/^do_execute1(State, Name, Params) ->$/;"	f	module:mysql_conn
do_fetch	deps/mysql/mysql_conn.erl	/^do_fetch(Pid, Queries, From, Timeout) ->$/;"	f	module:mysql_conn
do_fetch	src/mysql/mysql_conn.erl	/^do_fetch(Pid, Queries, From, Timeout) ->$/;"	f	module:mysql_conn
do_gen_call	src/mysql/emysql/emysql_conn_mgr.erl	/^do_gen_call(Msg) ->$/;"	f	module:emysql_conn_mgr
do_info	src/mod/gen_server2.erl	/^do_info(Info, State) -> $/;"	f	module:gen_server2
do_info	src/mod/gen_server2.erl	/^do_info(stop,State) ->$/;"	f	module:gen_server2
do_info	src/mod/mod_reader.erl	/^do_info(Info, State) -> $/;"	f	module:mod_reader
do_info	src/mod/mod_reader.erl	/^do_info({inet_async,Socket,_Ref,{ok,<<0:16,Len:16>>}},#state{socket = Socket,packet_len = 0} = State) ->$/;"	f	module:mod_reader
do_info	src/mod/mod_reader.erl	/^do_info({inet_async,Socket,_Ref,{ok,?FLASH_POLICY_REQ}},#state{socket = Socket} = State) ->$/;"	f	module:mod_reader
do_info	src/mod/mod_reader.erl	/^do_info({inet_async,Socket,_Ref,{ok,Bin}},#state{socket = Socket,packet_len = 0} = State) ->$/;"	f	module:mod_reader
do_info	src/mod/mod_reader.erl	/^do_info({inet_async,Socket,_Ref,{ok,Bin}},#state{socket = Socket} = State) ->$/;"	f	module:mod_reader
do_info	src/mod/mod_reader.erl	/^do_info({inet_async,_Socket,_Ref,{error,Reason}},State) ->$/;"	f	module:mod_reader
do_info	src/mod/mod_reader.erl	/^do_info({inet_async,_Socket,_Ref,{error,closed}},State) ->$/;"	f	module:mod_reader
do_info	src/mod/mod_reader.erl	/^do_info({inet_reply,_Socket,ok},State) ->$/;"	f	module:mod_reader
do_init	src/mod/mod_reader.erl	/^do_init([]) ->$/;"	f	module:mod_reader
do_log	deps/lager-master/src/lager.erl	/^do_log(Severity, Metadata, Format, Args, Size, SeverityAsInt, LevelThreshold, TraceFilters, Pid) when is_atom(Severity) ->$/;"	f	module:lager
do_log	deps/lager-master/src/lager_crash_log.erl	/^do_log({log, Event}, #state{name=Name, fd=FD, inode=Inode, flap=Flap,$/;"	f	module:lager_crash_log
do_log	src/lager/lager.erl	/^do_log(Severity, Metadata, Format, Args, Size, SeverityAsInt, LevelThreshold, TraceFilters, Pid) when is_atom(Severity) ->$/;"	f	module:lager
do_log	src/lager/lager_crash_log.erl	/^do_log({log, Event}, #state{name=Name, fd=FD, inode=Inode, flap=Flap,$/;"	f	module:lager_crash_log
do_make_files	myfile/mmake.erl	/^do_make_files(Worker, Fs, Opts) ->$/;"	f	module:mmake
do_make_files	src/misc/mmake.erl	/^do_make_files(Worker, Fs, Opts) ->$/;"	f	module:mmake
do_new_auth	deps/mysql/mysql_auth.erl	/^do_new_auth(Sock, RecvPid, SeqNum, User, Password, Salt1, Salt2, LogFun) ->$/;"	f	module:mysql_auth
do_new_auth	src/mysql/mysql_auth.erl	/^do_new_auth(Sock, RecvPid, SeqNum, User, Password, Salt1, Salt2, LogFun) ->$/;"	f	module:mysql_auth
do_old_auth	deps/mysql/mysql_auth.erl	/^do_old_auth(Sock, RecvPid, SeqNum, User, Password, Salt1, LogFun) ->$/;"	f	module:mysql_auth
do_old_auth	src/mysql/mysql_auth.erl	/^do_old_auth(Sock, RecvPid, SeqNum, User, Password, Salt1, LogFun) ->$/;"	f	module:mysql_auth
do_pre_load_beams	myfile/reloader.erl	/^do_pre_load_beams([H | T]) ->$/;"	f	module:reloader
do_pre_load_beams	myfile/reloader.erl	/^do_pre_load_beams([]) ->$/;"	f	module:reloader
do_queries	deps/mysql/mysql_conn.erl	/^do_queries(Sock, RecvPid, LogFun, Queries, Version) ->$/;"	f	module:mysql_conn
do_queries	deps/mysql/mysql_conn.erl	/^do_queries(State, Queries) ->$/;"	f	module:mysql_conn
do_queries	deps/mysql/mysql_conn.erl	/^do_queries(State, Queries) when not is_list(Queries) ->$/;"	f	module:mysql_conn
do_queries	src/mysql/mysql_conn.erl	/^do_queries(Sock, RecvPid, LogFun, Queries, Version) ->$/;"	f	module:mysql_conn
do_queries	src/mysql/mysql_conn.erl	/^do_queries(State, Queries) ->$/;"	f	module:mysql_conn
do_queries	src/mysql/mysql_conn.erl	/^do_queries(State, Queries) when not is_list(Queries) ->$/;"	f	module:mysql_conn
do_query	deps/mysql/mysql_conn.erl	/^do_query(Sock, RecvPid, LogFun, Query, Version) ->$/;"	f	module:mysql_conn
do_query	deps/mysql/mysql_conn.erl	/^do_query(State, Query) ->$/;"	f	module:mysql_conn
do_query	src/mysql/mysql_conn.erl	/^do_query(Sock, RecvPid, LogFun, Query, Version) ->$/;"	f	module:mysql_conn
do_query	src/mysql/mysql_conn.erl	/^do_query(State, Query) ->$/;"	f	module:mysql_conn
do_recv	deps/mysql/mysql_conn.erl	/^do_recv(LogFun, RecvPid, SeqNum)  when is_function(LogFun);$/;"	f	module:mysql_conn
do_recv	deps/mysql/mysql_conn.erl	/^do_recv(LogFun, RecvPid, SeqNum) when is_function(LogFun);$/;"	f	module:mysql_conn
do_recv	src/mysql/mysql_conn.erl	/^do_recv(LogFun, RecvPid, SeqNum)  when is_function(LogFun);$/;"	f	module:mysql_conn
do_recv	src/mysql/mysql_conn.erl	/^do_recv(LogFun, RecvPid, SeqNum) when is_function(LogFun);$/;"	f	module:mysql_conn
do_send	deps/mysql/mysql_auth.erl	/^do_send(Sock, Packet, Num, LogFun) ->$/;"	f	module:mysql_auth
do_send	deps/mysql/mysql_conn.erl	/^do_send(Sock, Packet, SeqNum, _LogFun) when is_binary(Packet), is_integer(SeqNum) ->$/;"	f	module:mysql_conn
do_send	src/mysql/mysql_auth.erl	/^do_send(Sock, Packet, Num, LogFun) ->$/;"	f	module:mysql_auth
do_send	src/mysql/mysql_conn.erl	/^do_send(Sock, Packet, SeqNum, _LogFun) when is_binary(Packet), is_integer(SeqNum) ->$/;"	f	module:mysql_conn
do_sync	src/misc/global_data_disk.erl	/^do_sync() ->$/;"	f	module:global_data_disk
do_terminate	src/mod/mod_reader.erl	/^do_terminate(_Reason, #state{socket=Socket}) ->$/;"	f	module:mod_reader
do_transaction	deps/mysql/mysql_conn.erl	/^do_transaction(State, Fun) ->$/;"	f	module:mysql_conn
do_transaction	src/mysql/mysql_conn.erl	/^do_transaction(State, Fun) ->$/;"	f	module:mysql_conn
do_wait_worker	myfile/mmake.erl	/^do_wait_worker(0,[],_Opts,_NoExec,_Load, _Ref) ->$/;"	f	module:mmake
do_wait_worker	myfile/mmake.erl	/^do_wait_worker(N,L,Opts,NoExec,Load, Ref) ->$/;"	f	module:mmake
do_wait_worker	src/misc/mmake.erl	/^do_wait_worker(0,[],_Opts,_NoExec,_Load, _Ref) ->$/;"	f	module:mmake
do_wait_worker	src/misc/mmake.erl	/^do_wait_worker(N,L,Opts,NoExec,Load, Ref) ->$/;"	f	module:mmake
do_worker	myfile/mmake.erl	/^do_worker(L, Opts, NoExec, Load, Worker) ->$/;"	f	module:mmake
do_worker	src/misc/mmake.erl	/^do_worker(L, Opts, NoExec, Load, Worker) ->$/;"	f	module:mmake
do_write	deps/lager-master/src/lager_file_backend.erl	/^do_write(#state{fd=FD, name=Name, flap=Flap} = State, Level, Msg) ->$/;"	f	module:lager_file_backend
do_write	src/lager/lager_file_backend.erl	/^do_write(#state{fd=FD, name=Name, flap=Flap} = State, Level, Msg) ->$/;"	f	module:lager_file_backend
do_write_log	src/logger/logger_h.erl	/^do_write_log(Fd) ->$/;"	f	module:logger_h
do_write_log	src/logger/logger_h.erl	/^do_write_log(Fd,L) ->$/;"	f	module:logger_h
dualmap	deps/mysql/mysql_auth.erl	/^dualmap(F, [E1 | R1], [E2 | R2]) ->$/;"	f	module:mysql_auth
dualmap	deps/mysql/mysql_auth.erl	/^dualmap(_F, [], []) ->$/;"	f	module:mysql_auth
dualmap	src/mysql/mysql_auth.erl	/^dualmap(F, [E1 | R1], [E2 | R2]) ->$/;"	f	module:mysql_auth
dualmap	src/mysql/mysql_auth.erl	/^dualmap(_F, [], []) ->$/;"	f	module:mysql_auth
dynamic_compile	src/logger/dynamic_compile.erl	/^-module(dynamic_compile).$/;"	m
dynarec	myfile/dynarec.erl	/^-module(dynarec).$/;"	m
emysql	src/mysql/emysql/emysql.erl	/^-module(emysql).$/;"	m
emysql_app	src/mysql/emysql/emysql_app.erl	/^-module(emysql_app).$/;"	m
emysql_auth	src/mysql/emysql/emysql_auth.erl	/^-module(emysql_auth).$/;"	m
emysql_conn	src/mysql/emysql/emysql_conn.erl	/^-module(emysql_conn).$/;"	m
emysql_conn_mgr	src/mysql/emysql/emysql_conn_mgr.erl	/^-module(emysql_conn_mgr).$/;"	m
emysql_connection	include/emysql.hrl	/^-record(emysql_connection, {id :: string(), $/;"	r
emysql_conv	src/mysql/emysql/emysql_conv.erl	/^-module(emysql_conv).$/;"	m
emysql_statements	src/mysql/emysql/emysql_statements.erl	/^-module(emysql_statements).$/;"	m
emysql_sup	src/mysql/emysql/emysql_sup.erl	/^-module(emysql_sup).$/;"	m
emysql_tcp	src/mysql/emysql/emysql_tcp.erl	/^-module(emysql_tcp).$/;"	m
emysql_util	src/mysql/emysql/emysql_util.erl	/^-module(emysql_util).$/;"	m
emysql_worker	src/mysql/emysql/emysql_worker.erl	/^-module(emysql_worker).$/;"	m
encode	deps/mysql/mysql.erl	/^encode(Val) ->$/;"	f	module:mysql
encode	deps/mysql/mysql.erl	/^encode(Val, _AsBinary) ->$/;"	f	module:mysql
encode	deps/mysql/mysql.erl	/^encode(Val, false) when Val == undefined; Val == null ->$/;"	f	module:mysql
encode	deps/mysql/mysql.erl	/^encode(Val, false) when is_atom(Val) ->$/;"	f	module:mysql
encode	deps/mysql/mysql.erl	/^encode(Val, false) when is_binary(Val) ->$/;"	f	module:mysql
encode	deps/mysql/mysql.erl	/^encode(Val, false) when is_float(Val) ->$/;"	f	module:mysql
encode	deps/mysql/mysql.erl	/^encode(Val, false) when is_integer(Val) ->$/;"	f	module:mysql
encode	deps/mysql/mysql.erl	/^encode(Val, false) when is_list(Val) ->$/;"	f	module:mysql
encode	deps/mysql/mysql.erl	/^encode(Val, true) ->$/;"	f	module:mysql
encode	deps/mysql/mysql.erl	/^encode(Val, true) when Val == undefined; Val == null ->$/;"	f	module:mysql
encode	deps/mysql/mysql.erl	/^encode(Val, true) when is_binary(Val) ->$/;"	f	module:mysql
encode	deps/mysql/mysql.erl	/^encode({Time1, Time2, Time3}, false) ->$/;"	f	module:mysql
encode	deps/mysql/mysql.erl	/^encode({TimeType, Val}, AsBinary)$/;"	f	module:mysql
encode	deps/mysql/mysql.erl	/^encode({datetime, Val}, AsBinary) ->$/;"	f	module:mysql
encode	deps/mysql/mysql.erl	/^encode({{Year, Month, Day}, {Hour, Minute, Second}}, false) ->$/;"	f	module:mysql
encode	src/mysql/emysql/emysql_conn.erl	/^encode(Val, _) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode(Val, binary) when is_atom(Val) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode(Val, binary) when is_binary(Val) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode(Val, binary) when is_float(Val) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode(Val, binary) when is_integer(Val) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode(Val, binary) when is_list(Val) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode(Val, list) when is_binary(Val) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode(Val, list) when is_float(Val) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode(Val, list) when is_integer(Val) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode(Val, list) when is_list(Val) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode(null, binary)  ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode(null, list) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode(undefined, binary)  ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode(undefined, list) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode({Time1, Time2, Time3}, list) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode({_Time1, _Time2, _Time3}=Val, binary) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode({date, Val}, ReturnType) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode({datetime, Val}, ReturnType) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode({time, Val}, ReturnType) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode({{Year, Month, Day}, {Hour, Minute, Second}}, list) ->$/;"	f	module:emysql_conn
encode	src/mysql/emysql/emysql_conn.erl	/^encode({{_Year, _Month, _Day}, {_Hour, _Minute, _Second}}=Val, binary) ->$/;"	f	module:emysql_conn
encode	src/mysql/mysql.erl	/^encode(Val) ->$/;"	f	module:mysql
encode	src/mysql/mysql.erl	/^encode(Val, _AsBinary) ->$/;"	f	module:mysql
encode	src/mysql/mysql.erl	/^encode(Val, false) when Val == undefined; Val == null ->$/;"	f	module:mysql
encode	src/mysql/mysql.erl	/^encode(Val, false) when is_atom(Val) ->$/;"	f	module:mysql
encode	src/mysql/mysql.erl	/^encode(Val, false) when is_binary(Val) ->$/;"	f	module:mysql
encode	src/mysql/mysql.erl	/^encode(Val, false) when is_float(Val) ->$/;"	f	module:mysql
encode	src/mysql/mysql.erl	/^encode(Val, false) when is_integer(Val) ->$/;"	f	module:mysql
encode	src/mysql/mysql.erl	/^encode(Val, false) when is_list(Val) ->$/;"	f	module:mysql
encode	src/mysql/mysql.erl	/^encode(Val, true) ->$/;"	f	module:mysql
encode	src/mysql/mysql.erl	/^encode(Val, true) when Val == undefined; Val == null ->$/;"	f	module:mysql
encode	src/mysql/mysql.erl	/^encode(Val, true) when is_binary(Val) ->$/;"	f	module:mysql
encode	src/mysql/mysql.erl	/^encode({Time1, Time2, Time3}, false) ->$/;"	f	module:mysql
encode	src/mysql/mysql.erl	/^encode({TimeType, Val}, AsBinary)$/;"	f	module:mysql
encode	src/mysql/mysql.erl	/^encode({datetime, Val}, AsBinary) ->$/;"	f	module:mysql
encode	src/mysql/mysql.erl	/^encode({{Year, Month, Day}, {Hour, Minute, Second}}, false) ->$/;"	f	module:mysql
encoding	deps/lager-master/src/lager_format.erl	/^encoding(Fmt,Args) ->$/;"	f	module:lager_format
encoding	deps/lager-master/src/lager_format.erl	/^encoding([$t|Fmt],Args) ->$/;"	f	module:lager_format
encoding	src/lager/lager_format.erl	/^encoding(Fmt,Args) ->$/;"	f	module:lager_format
encoding	src/lager/lager_format.erl	/^encoding([$t|Fmt],Args) ->$/;"	f	module:lager_format
encoding_ok	src/mysql/emysql/emysql.erl	/^encoding_ok(Enc) when is_atom(Enc) ->  ok; $/;"	f	module:emysql
encoding_ok	src/mysql/emysql/emysql.erl	/^encoding_ok(_)  ->  erlang:error(badarg).$/;"	f	module:emysql
encoding_ok	src/mysql/emysql/emysql.erl	/^encoding_ok({Enc, Coll}) when is_atom(Enc), is_atom(Coll) -> ok; $/;"	f	module:emysql
ensure_logfile	deps/lager-master/src/lager_util.erl	/^ensure_logfile(Name, FD, Inode, Buffer) ->$/;"	f	module:lager_util
ensure_logfile	src/lager/lager_util.erl	/^ensure_logfile(Name, FD, Inode, Buffer) ->$/;"	f	module:lager_util
eof_packet	include/emysql.hrl	/^-record(eof_packet, {seq_num :: number(), $/;"	r
eol	deps/lager-master/src/lager_console_backend.erl	/^eol() ->$/;"	f	module:lager_console_backend
eol	src/lager/lager_console_backend.erl	/^eol() ->$/;"	f	module:lager_console_backend
eqc_test_	deps/lager-master/test/trunc_io_eqc.erl	/^eqc_test_() ->$/;"	f	module:trunc_io_eqc
error_logger_lager_h	deps/lager-master/src/error_logger_lager_h.erl	/^-module(error_logger_lager_h).$/;"	m
error_logger_lager_h	src/lager/error_logger_lager_h.erl	/^-module(error_logger_lager_h).$/;"	m
error_logger_redirect_crash_test_	deps/lager-master/test/lager_test_backend.erl	/^error_logger_redirect_crash_test_() ->$/;"	f	module:lager_test_backend
error_logger_redirect_test_	deps/lager-master/test/lager_test_backend.erl	/^error_logger_redirect_test_() ->$/;"	f	module:lager_test_backend
error_logger_service	src/kernel/server_app.erl	/^error_logger_service(_Sup) ->$/;"	f	module:server_app
error_msg	deps/lager-master/test/sync_error_logger.erl	/^error_msg(Format) ->$/;"	f	module:sync_error_logger
error_msg	deps/lager-master/test/sync_error_logger.erl	/^error_msg(Format, Args) ->$/;"	f	module:sync_error_logger
error_packet	include/emysql.hrl	/^-record(error_packet, {seq_num :: number(), $/;"	r
error_report	deps/lager-master/test/sync_error_logger.erl	/^error_report(Report) ->$/;"	f	module:sync_error_logger
error_report	deps/lager-master/test/sync_error_logger.erl	/^error_report(Type, Report) ->$/;"	f	module:sync_error_logger
escape	deps/lager-master/src/lager_trunc_io.erl	/^escape($\\b) -> "\\\\b";$/;"	f	module:lager_trunc_io
escape	deps/lager-master/src/lager_trunc_io.erl	/^escape($\\e) -> "\\\\e";$/;"	f	module:lager_trunc_io
escape	deps/lager-master/src/lager_trunc_io.erl	/^escape($\\f) -> "\\\\f";$/;"	f	module:lager_trunc_io
escape	deps/lager-master/src/lager_trunc_io.erl	/^escape($\\n) -> "\\\\n";$/;"	f	module:lager_trunc_io
escape	deps/lager-master/src/lager_trunc_io.erl	/^escape($\\r) -> "\\\\r";$/;"	f	module:lager_trunc_io
escape	deps/lager-master/src/lager_trunc_io.erl	/^escape($\\t) -> "\\\\t";$/;"	f	module:lager_trunc_io
escape	deps/lager-master/src/lager_trunc_io.erl	/^escape($\\v) -> "\\\\v".$/;"	f	module:lager_trunc_io
escape	src/lager/lager_trunc_io.erl	/^escape($\\b) -> "\\\\b";$/;"	f	module:lager_trunc_io
escape	src/lager/lager_trunc_io.erl	/^escape($\\e) -> "\\\\e";$/;"	f	module:lager_trunc_io
escape	src/lager/lager_trunc_io.erl	/^escape($\\f) -> "\\\\f";$/;"	f	module:lager_trunc_io
escape	src/lager/lager_trunc_io.erl	/^escape($\\n) -> "\\\\n";$/;"	f	module:lager_trunc_io
escape	src/lager/lager_trunc_io.erl	/^escape($\\r) -> "\\\\r";$/;"	f	module:lager_trunc_io
escape	src/lager/lager_trunc_io.erl	/^escape($\\t) -> "\\\\t";$/;"	f	module:lager_trunc_io
escape	src/lager/lager_trunc_io.erl	/^escape($\\v) -> "\\\\v".$/;"	f	module:lager_trunc_io
execute	deps/mysql/db_util.erl	/^execute(Sql) ->$/;"	f	module:db_util
execute	deps/mysql/db_util.erl	/^execute(Sql,TimeOut) ->$/;"	f	module:db_util
execute	deps/mysql/db_version.erl	/^execute(Sql) ->$/;"	f	module:db_version
execute	deps/mysql/mysql.erl	/^execute(Name) ->$/;"	f	module:mysql
execute	deps/mysql/mysql.erl	/^execute(Name, Params) when is_atom(Name), is_list(Params) ->$/;"	f	module:mysql
execute	deps/mysql/mysql.erl	/^execute(PoolId, Name) when is_atom(PoolId), is_atom(Name) ->$/;"	f	module:mysql
execute	deps/mysql/mysql.erl	/^execute(PoolId, Name, Params) when is_list(Params) ->$/;"	f	module:mysql
execute	deps/mysql/mysql.erl	/^execute(PoolId, Name, Params, Timeout) ->$/;"	f	module:mysql
execute	deps/mysql/mysql.erl	/^execute(PoolId, Name, Timeout) when is_integer(Timeout) ->$/;"	f	module:mysql
execute	deps/mysql/mysql_conn.erl	/^execute(Pid, Name, Version, Params, From) ->$/;"	f	module:mysql_conn
execute	deps/mysql/mysql_conn.erl	/^execute(Pid, Name, Version, Params, From, Timeout) ->$/;"	f	module:mysql_conn
execute	src/mysql/db_util.erl	/^execute(Sql) ->$/;"	f	module:db_util
execute	src/mysql/db_util.erl	/^execute(Sql,TimeOut) ->$/;"	f	module:db_util
execute	src/mysql/db_version.erl	/^execute(Sql) ->$/;"	f	module:db_version
execute	src/mysql/emysql/edb_util.erl	/^execute(Sql) ->$/;"	f	module:db_util
execute	src/mysql/emysql/edb_util.erl	/^execute(Sql,TimeOut) ->$/;"	f	module:db_util
execute	src/mysql/emysql/emysql.erl	/^execute(PoolId, Query) when (is_list(Query) orelse is_binary(Query)) ->$/;"	f	module:emysql
execute	src/mysql/emysql/emysql.erl	/^execute(PoolId, Query, Args) when (is_list(Query) orelse is_binary(Query)) andalso is_list(Args) ->$/;"	f	module:emysql
execute	src/mysql/emysql/emysql.erl	/^execute(PoolId, Query, Args, Timeout) when (is_list(Query) orelse is_binary(Query)) andalso is_list(Args) andalso (is_integer(Timeout) orelse Timeout == infinity) ->$/;"	f	module:emysql
execute	src/mysql/emysql/emysql.erl	/^execute(PoolId, Query, Args, Timeout, nonblocking) when (is_list(Query) orelse is_binary(Query)) andalso is_list(Args) andalso (is_integer(Timeout) orelse Timeout == infinity) ->$/;"	f	module:emysql
execute	src/mysql/emysql/emysql.erl	/^execute(PoolId, Query, Timeout) when (is_list(Query) orelse is_binary(Query)) andalso (is_integer(Timeout) orelse Timeout == infinity) ->$/;"	f	module:emysql
execute	src/mysql/emysql/emysql.erl	/^execute(PoolId, StmtName) when is_atom(StmtName) ->$/;"	f	module:emysql
execute	src/mysql/emysql/emysql.erl	/^execute(PoolId, StmtName, Args) when is_atom(StmtName), is_list(Args) ->$/;"	f	module:emysql
execute	src/mysql/emysql/emysql.erl	/^execute(PoolId, StmtName, Args, Timeout)$/;"	f	module:emysql
execute	src/mysql/emysql/emysql.erl	/^execute(PoolId, StmtName, Args, Timeout, nonblocking) when is_atom(StmtName), is_list(Args) andalso is_integer(Timeout) ->$/;"	f	module:emysql
execute	src/mysql/emysql/emysql.erl	/^execute(PoolId, StmtName, Timeout) when is_atom(StmtName), (is_integer(Timeout) orelse Timeout == infinity) ->$/;"	f	module:emysql
execute	src/mysql/emysql/emysql_conn.erl	/^execute(Connection, Query, Args) when (is_list(Query) orelse is_binary(Query)) andalso is_list(Args) ->$/;"	f	module:emysql_conn
execute	src/mysql/emysql/emysql_conn.erl	/^execute(Connection, Query, []) ->$/;"	f	module:emysql_conn
execute	src/mysql/emysql/emysql_conn.erl	/^execute(Connection, StmtName, Args) when is_atom(StmtName), is_list(Args) ->$/;"	f	module:emysql_conn
execute	src/mysql/emysql/emysql_conn.erl	/^execute(Connection, StmtName, []) when is_atom(StmtName) ->$/;"	f	module:emysql_conn
execute	src/mysql/emysql/emysql_worker.erl	/^execute(To, Message) ->$/;"	f	module:emysql_worker
execute	src/mysql/mysql.erl	/^execute(Name) ->$/;"	f	module:mysql
execute	src/mysql/mysql.erl	/^execute(Name, Params) when is_atom(Name), is_list(Params) ->$/;"	f	module:mysql
execute	src/mysql/mysql.erl	/^execute(PoolId, Name) when is_atom(PoolId), is_atom(Name) ->$/;"	f	module:mysql
execute	src/mysql/mysql.erl	/^execute(PoolId, Name, Params) when is_list(Params) ->$/;"	f	module:mysql
execute	src/mysql/mysql.erl	/^execute(PoolId, Name, Params, Timeout) ->$/;"	f	module:mysql
execute	src/mysql/mysql.erl	/^execute(PoolId, Name, Timeout) when is_integer(Timeout) ->$/;"	f	module:mysql
execute	src/mysql/mysql_conn.erl	/^execute(Pid, Name, Version, Params, From) ->$/;"	f	module:mysql_conn
execute	src/mysql/mysql_conn.erl	/^execute(Pid, Name, Version, Params, From, Timeout) ->$/;"	f	module:mysql_conn
execute_local	deps/mysql/mysql_conn.erl	/^execute_local(State, Name, Params) ->$/;"	f	module:mysql_conn
execute_local	src/mysql/mysql_conn.erl	/^execute_local(State, Name, Params) ->$/;"	f	module:mysql_conn
exists	myfile/mmake.erl	/^exists(File) ->$/;"	f	module:mmake
exists	src/misc/mmake.erl	/^exists(File) ->$/;"	f	module:mmake
exited	deps/lager-master/src/lager_stdlib.erl	/^exited(error) ->$/;"	f	module:lager_stdlib
exited	deps/lager-master/src/lager_stdlib.erl	/^exited(exit) ->$/;"	f	module:lager_stdlib
exited	deps/lager-master/src/lager_stdlib.erl	/^exited(throw) ->$/;"	f	module:lager_stdlib
exited	src/lager/lager_stdlib.erl	/^exited(error) ->$/;"	f	module:lager_stdlib
exited	src/lager/lager_stdlib.erl	/^exited(exit) ->$/;"	f	module:lager_stdlib
exited	src/lager/lager_stdlib.erl	/^exited(throw) ->$/;"	f	module:lager_stdlib
exited_size	deps/lager-master/src/lager_stdlib.erl	/^exited_size(Class) ->$/;"	f	module:lager_stdlib
exited_size	src/lager/lager_stdlib.erl	/^exited_size(Class) ->$/;"	f	module:lager_stdlib
expand	myfile/mmake.erl	/^expand(Mod,Already) ->$/;"	f	module:mmake
expand	myfile/mmake.erl	/^expand(Mod,Already) when is_atom(Mod) ->$/;"	f	module:mmake
expand	myfile/mmake.erl	/^expand(Mods,Already) when is_list(Mods), not is_integer(hd(Mods)) ->$/;"	f	module:mmake
expand	src/misc/mmake.erl	/^expand(Mod,Already) ->$/;"	f	module:mmake
expand	src/misc/mmake.erl	/^expand(Mod,Already) when is_atom(Mod) ->$/;"	f	module:mmake
expand	src/misc/mmake.erl	/^expand(Mods,Already) when is_list(Mods), not is_integer(hd(Mods)) ->$/;"	f	module:mmake
expand_handlers	deps/lager-master/src/lager_app.erl	/^expand_handlers([H|T]) ->$/;"	f	module:lager_app
expand_handlers	deps/lager-master/src/lager_app.erl	/^expand_handlers([]) ->$/;"	f	module:lager_app
expand_handlers	deps/lager-master/src/lager_app.erl	/^expand_handlers([{Mod, Config}|T]) when is_atom(Mod) ->$/;"	f	module:lager_app
expand_handlers	deps/lager-master/src/lager_app.erl	/^expand_handlers([{lager_file_backend, Configs}|T]) ->$/;"	f	module:lager_app
expand_handlers	deps/lager-master/src/lager_app.erl	/^expand_handlers([{lager_file_backend, [{Key, _Value}|_]=Config}|T]) when is_atom(Key) ->$/;"	f	module:lager_app
expand_handlers	src/lager/lager_app.erl	/^expand_handlers([H|T]) ->$/;"	f	module:lager_app
expand_handlers	src/lager/lager_app.erl	/^expand_handlers([]) ->$/;"	f	module:lager_app
expand_handlers	src/lager/lager_app.erl	/^expand_handlers([{Mod, Config}|T]) when is_atom(Mod) ->$/;"	f	module:lager_app
expand_handlers	src/lager/lager_app.erl	/^expand_handlers([{lager_file_backend, Configs}|T]) ->$/;"	f	module:lager_app
expand_handlers	src/lager/lager_app.erl	/^expand_handlers([{lager_file_backend, [{Key, _Value}|_]=Config}|T]) when is_atom(Key) ->$/;"	f	module:lager_app
expand_path	deps/lager-master/src/lager_util.erl	/^expand_path(RelPath) ->$/;"	f	module:lager_util
expand_path	src/lager/lager_util.erl	/^expand_path(RelPath) ->$/;"	f	module:lager_util
expand_path_test	deps/lager-master/src/lager_util.erl	/^expand_path_test() ->$/;"	f	module:lager_util
expand_path_test	src/lager/lager_util.erl	/^expand_path_test() ->$/;"	f	module:lager_util
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason(Reason, Class, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason(badarg, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason(badarith, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason(function_clause, error, [{F,A}], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason(function_clause, error=Cl, [{M,F,As}], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason(if_clause, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason(noproc, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason(notalive, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason(restricted_shell_started, exit, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason(restricted_shell_stopped, exit, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason(system_limit, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason(timeout_value, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason(undef, error, [{M,F,A}], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason({argument_limit,_Fun}, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason({bad_filter,V}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason({bad_generator,V}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason({badarg,V}, error=Cl, [], PF, Str) -> % orelse, andalso$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason({badarity,{Fun,As}}, error, [], _PF, _Str) $/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason({badfun,Term}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason({badmatch,Term}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason({case_clause,V}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason({restricted_shell_bad_return, V}, exit=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason({restricted_shell_disallowed,{ForMF,As}}, $/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason({shell_undef,F,A}, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason({try_clause,V}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	deps/lager-master/src/lager_stdlib.erl	/^explain_reason({unbound,V}, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason(Reason, Class, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason(badarg, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason(badarith, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason(function_clause, error, [{F,A}], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason(function_clause, error=Cl, [{M,F,As}], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason(if_clause, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason(noproc, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason(notalive, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason(restricted_shell_started, exit, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason(restricted_shell_stopped, exit, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason(system_limit, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason(timeout_value, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason(undef, error, [{M,F,A}], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason({argument_limit,_Fun}, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason({bad_filter,V}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason({bad_generator,V}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason({badarg,V}, error=Cl, [], PF, Str) -> % orelse, andalso$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason({badarity,{Fun,As}}, error, [], _PF, _Str) $/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason({badfun,Term}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason({badmatch,Term}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason({case_clause,V}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason({restricted_shell_bad_return, V}, exit=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason({restricted_shell_disallowed,{ForMF,As}}, $/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason({shell_undef,F,A}, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason({try_clause,V}, error=Cl, [], PF, Str) ->$/;"	f	module:lager_stdlib
explain_reason	src/lager/lager_stdlib.erl	/^explain_reason({unbound,V}, error, [], _PF, _Str) ->$/;"	f	module:lager_stdlib
fetch	deps/mysql/mysql.erl	/^fetch(PoolId, Query) ->$/;"	f	module:mysql
fetch	deps/mysql/mysql.erl	/^fetch(PoolId, Query, Timeout) -> $/;"	f	module:mysql
fetch	deps/mysql/mysql.erl	/^fetch(Query) ->$/;"	f	module:mysql
fetch	deps/mysql/mysql_conn.erl	/^fetch(Pid, Queries, From) ->$/;"	f	module:mysql_conn
fetch	deps/mysql/mysql_conn.erl	/^fetch(Pid, Queries, From, Timeout)  ->$/;"	f	module:mysql_conn
fetch	src/mysql/emysql/emysql_statements.erl	/^fetch(StmtName) ->$/;"	f	module:emysql_statements
fetch	src/mysql/mysql.erl	/^fetch(PoolId, Query) ->$/;"	f	module:mysql
fetch	src/mysql/mysql.erl	/^fetch(PoolId, Query, Timeout) -> $/;"	f	module:mysql
fetch	src/mysql/mysql.erl	/^fetch(Query) ->$/;"	f	module:mysql
fetch	src/mysql/mysql_conn.erl	/^fetch(Pid, Queries, From) ->$/;"	f	module:mysql_conn
fetch	src/mysql/mysql_conn.erl	/^fetch(Pid, Queries, From, Timeout)  ->$/;"	f	module:mysql_conn
fetch_local	deps/mysql/mysql_conn.erl	/^fetch_local(State, Query) ->$/;"	f	module:mysql_conn
fetch_local	src/mysql/mysql_conn.erl	/^fetch_local(State, Query) ->$/;"	f	module:mysql_conn
fetch_queries	deps/mysql/mysql.erl	/^fetch_queries(PoolId, From, State, QueryList) ->$/;"	f	module:mysql
fetch_queries	src/mysql/mysql.erl	/^fetch_queries(PoolId, From, State, QueryList) ->$/;"	f	module:mysql
field	include/emysql.hrl	/^-record(field, {seq_num :: number(), $/;"	r
field_names	src/mysql/emysql/emysql.erl	/^field_names(#result_packet{field_list=FieldList}) ->$/;"	f	module:emysql
field_names	src/mysql/emysql/emysql_util.erl	/^field_names(R) -> emysql:field_names(R).$/;"	f	module:emysql_util
field_value	deps/lager-master/src/lager_format.erl	/^field_value(Fmt, Args) ->$/;"	f	module:lager_format
field_value	deps/lager-master/src/lager_format.erl	/^field_value(Fmt, Args, F) -> %Default case$/;"	f	module:lager_format
field_value	deps/lager-master/src/lager_format.erl	/^field_value([$*|Fmt], [A|Args]) when is_integer(A) ->$/;"	f	module:lager_format
field_value	deps/lager-master/src/lager_format.erl	/^field_value([C|Fmt], Args) when is_integer(C), C >= $0, C =< $9 ->$/;"	f	module:lager_format
field_value	deps/lager-master/src/lager_format.erl	/^field_value([C|Fmt], Args, F) when is_integer(C), C >= $0, C =< $9 ->$/;"	f	module:lager_format
field_value	src/lager/lager_format.erl	/^field_value(Fmt, Args) ->$/;"	f	module:lager_format
field_value	src/lager/lager_format.erl	/^field_value(Fmt, Args, F) -> %Default case$/;"	f	module:lager_format
field_value	src/lager/lager_format.erl	/^field_value([$*|Fmt], [A|Args]) when is_integer(A) ->$/;"	f	module:lager_format
field_value	src/lager/lager_format.erl	/^field_value([C|Fmt], Args) when is_integer(C), C >= $0, C =< $9 ->$/;"	f	module:lager_format
field_value	src/lager/lager_format.erl	/^field_value([C|Fmt], Args, F) when is_integer(C), C >= $0, C =< $9 ->$/;"	f	module:lager_format
field_width	deps/lager-master/src/lager_format.erl	/^field_width(F, Fmt, Args) when F < 0 ->$/;"	f	module:lager_format
field_width	deps/lager-master/src/lager_format.erl	/^field_width(F, Fmt, Args) when F >= 0 ->$/;"	f	module:lager_format
field_width	deps/lager-master/src/lager_format.erl	/^field_width(Fmt0, Args0) ->$/;"	f	module:lager_format
field_width	deps/lager-master/src/lager_format.erl	/^field_width([$-|Fmt0], Args0) ->$/;"	f	module:lager_format
field_width	src/lager/lager_format.erl	/^field_width(F, Fmt, Args) when F < 0 ->$/;"	f	module:lager_format
field_width	src/lager/lager_format.erl	/^field_width(F, Fmt, Args) when F >= 0 ->$/;"	f	module:lager_format
field_width	src/lager/lager_format.erl	/^field_width(Fmt0, Args0) ->$/;"	f	module:lager_format
field_width	src/lager/lager_format.erl	/^field_width([$-|Fmt0], Args0) ->$/;"	f	module:lager_format
files	myfile/mmake.erl	/^files(Worker, Fs) ->$/;"	f	module:mmake
files	myfile/mmake.erl	/^files(Worker, Fs0, Options) ->$/;"	f	module:mmake
files	src/misc/mmake.erl	/^files(Worker, Fs) ->$/;"	f	module:mmake
files	src/misc/mmake.erl	/^files(Worker, Fs0, Options) ->$/;"	f	module:mmake
filesystem_test_	deps/lager-master/src/lager_crash_log.erl	/^filesystem_test_() ->$/;"	f	module:lager_crash_log
filesystem_test_	deps/lager-master/src/lager_file_backend.erl	/^filesystem_test_() ->$/;"	f	module:lager_file_backend
filesystem_test_	src/lager/lager_crash_log.erl	/^filesystem_test_() ->$/;"	f	module:lager_crash_log
filesystem_test_	src/lager/lager_file_backend.erl	/^filesystem_test_() ->$/;"	f	module:lager_file_backend
find_app_file	deps/lager-master/src/lager_transform.erl	/^find_app_file(Dir) ->$/;"	f	module:lager_transform
find_app_file	src/lager/lager_transform.erl	/^find_app_file(Dir) ->$/;"	f	module:lager_transform
find_path	src/test/a_star.erl	/^find_path(StartPos, Pos, CloseList) ->$/;"	f	module:a_star
find_pool	src/mysql/emysql/emysql_conn_mgr.erl	/^find_pool(PoolId, Pools) ->$/;"	f	module:emysql_conn_mgr
find_pool	src/mysql/emysql/emysql_conn_mgr.erl	/^find_pool(PoolId, [#pool{pool_id = PoolId} = Pool|Tail], OtherPools) ->$/;"	f	module:emysql_conn_mgr
find_pool	src/mysql/emysql/emysql_conn_mgr.erl	/^find_pool(PoolId, [Pool|Tail], OtherPools) ->$/;"	f	module:emysql_conn_mgr
find_pool	src/mysql/emysql/emysql_conn_mgr.erl	/^find_pool(_, [], _) -> undefined;$/;"	f	module:emysql_conn_mgr
flat_trunc	deps/lager-master/src/lager_format.erl	/^flat_trunc(L, 0, R) when is_list(L) ->$/;"	f	module:lager_format
flat_trunc	deps/lager-master/src/lager_format.erl	/^flat_trunc(List, N) when is_integer(N), N >= 0 ->$/;"	f	module:lager_format
flat_trunc	deps/lager-master/src/lager_format.erl	/^flat_trunc([H|T], N, R) ->$/;"	f	module:lager_format
flat_trunc	deps/lager-master/src/lager_format.erl	/^flat_trunc([], _, R) ->$/;"	f	module:lager_format
flat_trunc	src/lager/lager_format.erl	/^flat_trunc(L, 0, R) when is_list(L) ->$/;"	f	module:lager_format
flat_trunc	src/lager/lager_format.erl	/^flat_trunc(List, N) when is_integer(N), N >= 0 ->$/;"	f	module:lager_format
flat_trunc	src/lager/lager_format.erl	/^flat_trunc([H|T], N, R) ->$/;"	f	module:lager_format
flat_trunc	src/lager/lager_format.erl	/^flat_trunc([], _, R) ->$/;"	f	module:lager_format
float_data	deps/lager-master/src/lager_format.erl	/^float_data(Fl) ->$/;"	f	module:lager_format
float_data	deps/lager-master/src/lager_format.erl	/^float_data([$e|E], Ds) ->$/;"	f	module:lager_format
float_data	deps/lager-master/src/lager_format.erl	/^float_data([D|Cs], Ds) when D >= $0, D =< $9 ->$/;"	f	module:lager_format
float_data	deps/lager-master/src/lager_format.erl	/^float_data([_|Cs], Ds) ->$/;"	f	module:lager_format
float_data	src/lager/lager_format.erl	/^float_data(Fl) ->$/;"	f	module:lager_format
float_data	src/lager/lager_format.erl	/^float_data([$e|E], Ds) ->$/;"	f	module:lager_format
float_data	src/lager/lager_format.erl	/^float_data([D|Cs], Ds) when D >= $0, D =< $9 ->$/;"	f	module:lager_format
float_data	src/lager/lager_format.erl	/^float_data([_|Cs], Ds) ->$/;"	f	module:lager_format
float_e	deps/lager-master/src/lager_format.erl	/^float_e(Fl, Fd, P) when Fl < 0.0 -> %Negative numbers$/;"	f	module:lager_format
float_e	deps/lager-master/src/lager_format.erl	/^float_e(_Fl, {Ds,E}, P) ->$/;"	f	module:lager_format
float_e	src/lager/lager_format.erl	/^float_e(Fl, Fd, P) when Fl < 0.0 -> %Negative numbers$/;"	f	module:lager_format
float_e	src/lager/lager_format.erl	/^float_e(_Fl, {Ds,E}, P) ->$/;"	f	module:lager_format
float_exp	deps/lager-master/src/lager_format.erl	/^float_exp(E) ->$/;"	f	module:lager_format
float_exp	deps/lager-master/src/lager_format.erl	/^float_exp(E) when E >= 0 ->$/;"	f	module:lager_format
float_exp	src/lager/lager_format.erl	/^float_exp(E) ->$/;"	f	module:lager_format
float_exp	src/lager/lager_format.erl	/^float_exp(E) when E >= 0 ->$/;"	f	module:lager_format
float_f	deps/lager-master/src/lager_format.erl	/^float_f(Fl, Fd, P) when Fl < 0.0 ->$/;"	f	module:lager_format
float_f	deps/lager-master/src/lager_format.erl	/^float_f(Fl, {Ds,E}, P) when E =< 0 ->$/;"	f	module:lager_format
float_f	deps/lager-master/src/lager_format.erl	/^float_f(_Fl, {Ds,E}, P) ->$/;"	f	module:lager_format
float_f	src/lager/lager_format.erl	/^float_f(Fl, Fd, P) when Fl < 0.0 ->$/;"	f	module:lager_format
float_f	src/lager/lager_format.erl	/^float_f(Fl, {Ds,E}, P) when E =< 0 ->$/;"	f	module:lager_format
float_f	src/lager/lager_format.erl	/^float_f(_Fl, {Ds,E}, P) ->$/;"	f	module:lager_format
float_inside_list_test	deps/lager-master/src/lager_trunc_io.erl	/^float_inside_list_test() ->$/;"	f	module:lager_trunc_io
float_inside_list_test	src/lager/lager_trunc_io.erl	/^float_inside_list_test() ->$/;"	f	module:lager_trunc_io
float_man	deps/lager-master/src/lager_format.erl	/^float_man(Ds, 0, Dc) ->$/;"	f	module:lager_format
float_man	deps/lager-master/src/lager_format.erl	/^float_man([D|Ds], Dc) ->$/;"	f	module:lager_format
float_man	deps/lager-master/src/lager_format.erl	/^float_man([D|Ds], I, Dc) ->$/;"	f	module:lager_format
float_man	deps/lager-master/src/lager_format.erl	/^float_man([D|_], 0) when D >= $5 -> {[],true};$/;"	f	module:lager_format
float_man	deps/lager-master/src/lager_format.erl	/^float_man([], Dc) -> {string:chars($0, Dc),false}. %Pad with 0's$/;"	f	module:lager_format
float_man	deps/lager-master/src/lager_format.erl	/^float_man([], I, Dc) -> %Pad with 0's$/;"	f	module:lager_format
float_man	deps/lager-master/src/lager_format.erl	/^float_man([_|_], 0) -> {[],false};$/;"	f	module:lager_format
float_man	src/lager/lager_format.erl	/^float_man(Ds, 0, Dc) ->$/;"	f	module:lager_format
float_man	src/lager/lager_format.erl	/^float_man([D|Ds], Dc) ->$/;"	f	module:lager_format
float_man	src/lager/lager_format.erl	/^float_man([D|Ds], I, Dc) ->$/;"	f	module:lager_format
float_man	src/lager/lager_format.erl	/^float_man([D|_], 0) when D >= $5 -> {[],true};$/;"	f	module:lager_format
float_man	src/lager/lager_format.erl	/^float_man([], Dc) -> {string:chars($0, Dc),false}. %Pad with 0's$/;"	f	module:lager_format
float_man	src/lager/lager_format.erl	/^float_man([], I, Dc) -> %Pad with 0's$/;"	f	module:lager_format
float_man	src/lager/lager_format.erl	/^float_man([_|_], 0) -> {[],false};$/;"	f	module:lager_format
flush	deps/lager-master/test/lager_test_backend.erl	/^flush() ->$/;"	f	module:lager_test_backend
foo	deps/lager-master/test/special_process.erl	/^foo(baz) ->$/;"	f	module:special_process
format	deps/lager-master/src/lager_default_formatter.erl	/^format(Message,Config,Colors) ->$/;"	f	module:lager_default_formatter
format	deps/lager-master/src/lager_default_formatter.erl	/^format(Msg, Config) ->$/;"	f	module:lager_default_formatter
format	deps/lager-master/src/lager_default_formatter.erl	/^format(Msg,[], Colors) ->$/;"	f	module:lager_default_formatter
format	deps/lager-master/src/lager_default_formatter.erl	/^format(Msg,[{eol, EOL}], Colors) ->$/;"	f	module:lager_default_formatter
format	deps/lager-master/src/lager_format.erl	/^format(FmtStr, Args, MaxLen) ->$/;"	f	module:lager_format
format	deps/lager-master/src/lager_format.erl	/^format(FmtStr, Args, MaxLen, Opts) when is_atom(FmtStr) ->$/;"	f	module:lager_format
format	deps/lager-master/src/lager_format.erl	/^format(FmtStr, Args, MaxLen, Opts) when is_binary(FmtStr) ->$/;"	f	module:lager_format
format	deps/lager-master/src/lager_format.erl	/^format(FmtStr, Args, MaxLen, Opts) when is_list(FmtStr) ->$/;"	f	module:lager_format
format	deps/lager-master/src/lager_format.erl	/^format([], [], _, _) ->$/;"	f	module:lager_format
format	deps/lager-master/src/lager_format.erl	/^format(_FmtStr, _Args, _MaxLen, _Opts) ->$/;"	f	module:lager_format
format	deps/lager-master/src/lager_trunc_io.erl	/^format(Fmt, Args, Max) ->$/;"	f	module:lager_trunc_io
format	deps/lager-master/src/lager_trunc_io.erl	/^format(Fmt, Args, Max, Options) ->$/;"	f	module:lager_trunc_io
format	src/lager/lager_default_formatter.erl	/^format(Message,Config,Colors) ->$/;"	f	module:lager_default_formatter
format	src/lager/lager_default_formatter.erl	/^format(Msg, Config) ->$/;"	f	module:lager_default_formatter
format	src/lager/lager_default_formatter.erl	/^format(Msg,[], Colors) ->$/;"	f	module:lager_default_formatter
format	src/lager/lager_default_formatter.erl	/^format(Msg,[{eol, EOL}], Colors) ->$/;"	f	module:lager_default_formatter
format	src/lager/lager_format.erl	/^format(FmtStr, Args, MaxLen) ->$/;"	f	module:lager_format
format	src/lager/lager_format.erl	/^format(FmtStr, Args, MaxLen, Opts) when is_atom(FmtStr) ->$/;"	f	module:lager_format
format	src/lager/lager_format.erl	/^format(FmtStr, Args, MaxLen, Opts) when is_binary(FmtStr) ->$/;"	f	module:lager_format
format	src/lager/lager_format.erl	/^format(FmtStr, Args, MaxLen, Opts) when is_list(FmtStr) ->$/;"	f	module:lager_format
format	src/lager/lager_format.erl	/^format([], [], _, _) ->$/;"	f	module:lager_format
format	src/lager/lager_format.erl	/^format(_FmtStr, _Args, _MaxLen, _Opts) ->$/;"	f	module:lager_format
format	src/lager/lager_trunc_io.erl	/^format(Fmt, Args, Max) ->$/;"	f	module:lager_trunc_io
format	src/lager/lager_trunc_io.erl	/^format(Fmt, Args, Max, Options) ->$/;"	f	module:lager_trunc_io
format_args	deps/lager-master/src/error_logger_lager_h.erl	/^format_args([H|T], FmtAcc, ArgsAcc) ->$/;"	f	module:error_logger_lager_h
format_args	deps/lager-master/src/error_logger_lager_h.erl	/^format_args([], FmtAcc, ArgsAcc) ->$/;"	f	module:error_logger_lager_h
format_args	src/lager/error_logger_lager_h.erl	/^format_args([H|T], FmtAcc, ArgsAcc) ->$/;"	f	module:error_logger_lager_h
format_args	src/lager/error_logger_lager_h.erl	/^format_args([], FmtAcc, ArgsAcc) ->$/;"	f	module:error_logger_lager_h
format_call	deps/lager-master/src/lager_stdlib.erl	/^format_call(ErrStr, Pre1, ForMForFun, As, PF) ->$/;"	f	module:lager_stdlib
format_call	src/lager/lager_stdlib.erl	/^format_call(ErrStr, Pre1, ForMForFun, As, PF) ->$/;"	f	module:lager_stdlib
format_crash_report	deps/lager-master/src/error_logger_lager_h.erl	/^format_crash_report(Report, Neighbours) ->$/;"	f	module:error_logger_lager_h
format_crash_report	src/lager/error_logger_lager_h.erl	/^format_crash_report(Report, Neighbours) ->$/;"	f	module:error_logger_lager_h
format_errstr_call	deps/lager-master/src/lager_stdlib.erl	/^format_errstr_call(ErrStr, Class, ForMForFun, As, PF, Pre0) ->$/;"	f	module:lager_stdlib
format_errstr_call	src/lager/lager_stdlib.erl	/^format_errstr_call(ErrStr, Class, ForMForFun, As, PF, Pre0) ->$/;"	f	module:lager_stdlib
format_exception	deps/lager-master/src/lager_stdlib.erl	/^format_exception(Class, Reason, StackTrace, FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_exception	src/lager/lager_stdlib.erl	/^format_exception(Class, Reason, StackTrace, FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_fun	deps/lager-master/src/lager_stdlib.erl	/^format_fun(Fun) when is_function(Fun) ->$/;"	f	module:lager_stdlib
format_fun	src/lager/lager_stdlib.erl	/^format_fun(Fun) when is_function(Fun) ->$/;"	f	module:lager_stdlib
format_mfa	deps/lager-master/src/error_logger_lager_h.erl	/^format_mfa(Other) ->$/;"	f	module:error_logger_lager_h
format_mfa	deps/lager-master/src/error_logger_lager_h.erl	/^format_mfa([{M, F, A, Props}, _]) when is_list(Props) ->$/;"	f	module:error_logger_lager_h
format_mfa	deps/lager-master/src/error_logger_lager_h.erl	/^format_mfa([{M, F, A}, _]) ->$/;"	f	module:error_logger_lager_h
format_mfa	deps/lager-master/src/error_logger_lager_h.erl	/^format_mfa({M, F, A, Props}) when is_list(Props) ->$/;"	f	module:error_logger_lager_h
format_mfa	deps/lager-master/src/error_logger_lager_h.erl	/^format_mfa({M, F, A}) when is_integer(A) ->$/;"	f	module:error_logger_lager_h
format_mfa	deps/lager-master/src/error_logger_lager_h.erl	/^format_mfa({M, F, A}) when is_list(A) ->$/;"	f	module:error_logger_lager_h
format_mfa	deps/lager-master/src/lager_stdlib.erl	/^format_mfa({M,F,Args}=StartF, FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_mfa	src/lager/error_logger_lager_h.erl	/^format_mfa(Other) ->$/;"	f	module:error_logger_lager_h
format_mfa	src/lager/error_logger_lager_h.erl	/^format_mfa([{M, F, A, Props}, _]) when is_list(Props) ->$/;"	f	module:error_logger_lager_h
format_mfa	src/lager/error_logger_lager_h.erl	/^format_mfa([{M, F, A}, _]) ->$/;"	f	module:error_logger_lager_h
format_mfa	src/lager/error_logger_lager_h.erl	/^format_mfa({M, F, A, Props}) when is_list(Props) ->$/;"	f	module:error_logger_lager_h
format_mfa	src/lager/error_logger_lager_h.erl	/^format_mfa({M, F, A}) when is_integer(A) ->$/;"	f	module:error_logger_lager_h
format_mfa	src/lager/error_logger_lager_h.erl	/^format_mfa({M, F, A}) when is_list(A) ->$/;"	f	module:error_logger_lager_h
format_mfa	src/lager/lager_stdlib.erl	/^format_mfa({M,F,Args}=StartF, FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_offender	deps/lager-master/src/error_logger_lager_h.erl	/^format_offender(Off) ->$/;"	f	module:error_logger_lager_h
format_offender	src/lager/error_logger_lager_h.erl	/^format_offender(Off) ->$/;"	f	module:error_logger_lager_h
format_op	deps/lager-master/src/lager_stdlib.erl	/^format_op(ErrStr, Pre, Op, [A1, A2], PF) ->$/;"	f	module:lager_stdlib
format_op	src/lager/lager_stdlib.erl	/^format_op(ErrStr, Pre, Op, [A1, A2], PF) ->$/;"	f	module:lager_stdlib
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason(Reason) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({'function not exported', [{M, F, A, _Props},MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({'function not exported', [{M, F, A},MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({Reason, [{M, F, A, Props}|_]}) when is_atom(M), is_atom(F), is_integer(A), is_list(Props) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({Reason, [{M, F, A}|_]}) when is_atom(M), is_atom(F), is_integer(A) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({bad_return, {MFA, Val}}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({bad_return, {_MFA, {'EXIT', Reason}}}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({bad_return_value, Val}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({badarg, [MFA,MFA2|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({badarith, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({emfile, _Trace}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({function_clause, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({if_clause, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({noproc, MFA}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({system_limit, [{M, F, _}|_] = Trace}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({undef, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({{bad_return_value, Val}, MFA}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({{badarg, Stack}, _}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({{badarity, {Fun, Args}}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({{badfun, Term}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({{badmatch, Val}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({{badrecord, Record}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({{case_clause, Val}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	deps/lager-master/src/error_logger_lager_h.erl	/^format_reason({{try_clause, Val}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason(Reason) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({'function not exported', [{M, F, A, _Props},MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({'function not exported', [{M, F, A},MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({Reason, [{M, F, A, Props}|_]}) when is_atom(M), is_atom(F), is_integer(A), is_list(Props) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({Reason, [{M, F, A}|_]}) when is_atom(M), is_atom(F), is_integer(A) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({bad_return, {MFA, Val}}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({bad_return, {_MFA, {'EXIT', Reason}}}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({bad_return_value, Val}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({badarg, [MFA,MFA2|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({badarith, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({emfile, _Trace}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({function_clause, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({if_clause, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({noproc, MFA}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({system_limit, [{M, F, _}|_] = Trace}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({undef, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({{bad_return_value, Val}, MFA}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({{badarg, Stack}, _}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({{badarity, {Fun, Args}}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({{badfun, Term}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({{badmatch, Val}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({{badrecord, Record}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({{case_clause, Val}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_reason	src/lager/error_logger_lager_h.erl	/^format_reason({{try_clause, Val}, [MFA|_]}) ->$/;"	f	module:error_logger_lager_h
format_rep	deps/lager-master/src/lager_stdlib.erl	/^format_rep([{Tag,Data}|Rep], FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_rep	deps/lager-master/src/lager_stdlib.erl	/^format_rep([{error_info,{Class,Reason,StackTrace}}|Rep], FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_rep	deps/lager-master/src/lager_stdlib.erl	/^format_rep([{initial_call,InitialCall}|Rep], FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_rep	deps/lager-master/src/lager_stdlib.erl	/^format_rep(_, _S) ->$/;"	f	module:lager_stdlib
format_rep	src/lager/lager_stdlib.erl	/^format_rep([{Tag,Data}|Rep], FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_rep	src/lager/lager_stdlib.erl	/^format_rep([{error_info,{Class,Reason,StackTrace}}|Rep], FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_rep	src/lager/lager_stdlib.erl	/^format_rep([{initial_call,InitialCall}|Rep], FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_rep	src/lager/lager_stdlib.erl	/^format_rep(_, _S) ->$/;"	f	module:lager_stdlib
format_rep	src/logger/logger_h.erl	/^format_rep([Other|Rep]) ->$/;"	f	module:logger_h
format_rep	src/logger/logger_h.erl	/^format_rep([{Tag,Data}|Rep]) ->$/;"	f	module:logger_h
format_rep	src/logger/logger_h.erl	/^format_rep(_) ->$/;"	f	module:logger_h
format_report	deps/lager-master/src/lager_stdlib.erl	/^format_report(Rep, FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_report	deps/lager-master/src/lager_stdlib.erl	/^format_report(Rep, FmtMaxBytes) when is_list(Rep) ->$/;"	f	module:lager_stdlib
format_report	src/lager/lager_stdlib.erl	/^format_report(Rep, FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_report	src/lager/lager_stdlib.erl	/^format_report(Rep, FmtMaxBytes) when is_list(Rep) ->$/;"	f	module:lager_stdlib
format_report	src/logger/logger_h.erl	/^format_report(Rep) ->$/;"	f	module:logger_h
format_report	src/logger/logger_h.erl	/^format_report(Rep) when is_list(Rep) ->$/;"	f	module:logger_h
format_stacktrace1	deps/lager-master/src/lager_stdlib.erl	/^format_stacktrace1(S0, Stack0, PF, SF) ->$/;"	f	module:lager_stdlib
format_stacktrace1	src/lager/lager_stdlib.erl	/^format_stacktrace1(S0, Stack0, PF, SF) ->$/;"	f	module:lager_stdlib
format_stacktrace2	deps/lager-master/src/lager_stdlib.erl	/^format_stacktrace2(S, [{M,F,As}|Fs], N, PF) when is_list(As) ->$/;"	f	module:lager_stdlib
format_stacktrace2	deps/lager-master/src/lager_stdlib.erl	/^format_stacktrace2(S, [{M,F,A}|Fs], N, PF) when is_integer(A) ->$/;"	f	module:lager_stdlib
format_stacktrace2	deps/lager-master/src/lager_stdlib.erl	/^format_stacktrace2(_S, [], _N, _PF) ->$/;"	f	module:lager_stdlib
format_stacktrace2	src/lager/lager_stdlib.erl	/^format_stacktrace2(S, [{M,F,As}|Fs], N, PF) when is_list(As) ->$/;"	f	module:lager_stdlib
format_stacktrace2	src/lager/lager_stdlib.erl	/^format_stacktrace2(S, [{M,F,A}|Fs], N, PF) when is_integer(A) ->$/;"	f	module:lager_stdlib
format_stacktrace2	src/lager/lager_stdlib.erl	/^format_stacktrace2(_S, [], _N, _PF) ->$/;"	f	module:lager_stdlib
format_tag	deps/lager-master/src/lager_stdlib.erl	/^format_tag(Tag, Data, FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_tag	src/lager/lager_stdlib.erl	/^format_tag(Tag, Data, FmtMaxBytes) ->$/;"	f	module:lager_stdlib
format_test	deps/lager-master/src/lager_trunc_io.erl	/^format_test() ->$/;"	f	module:lager_trunc_io
format_test	src/lager/lager_trunc_io.erl	/^format_test() ->$/;"	f	module:lager_trunc_io
format_time	deps/lager-master/src/lager_util.erl	/^format_time() ->$/;"	f	module:lager_util
format_time	deps/lager-master/src/lager_util.erl	/^format_time({utc, {{Y, M, D}, {H, Mi, S, Ms}}}) ->$/;"	f	module:lager_util
format_time	deps/lager-master/src/lager_util.erl	/^format_time({utc, {{Y, M, D}, {H, Mi, S}}}) ->$/;"	f	module:lager_util
format_time	deps/lager-master/src/lager_util.erl	/^format_time({{Y, M, D}, {H, Mi, S, Ms}}) ->$/;"	f	module:lager_util
format_time	deps/lager-master/src/lager_util.erl	/^format_time({{Y, M, D}, {H, Mi, S}}) ->$/;"	f	module:lager_util
format_time	src/lager/lager_util.erl	/^format_time() ->$/;"	f	module:lager_util
format_time	src/lager/lager_util.erl	/^format_time({utc, {{Y, M, D}, {H, Mi, S, Ms}}}) ->$/;"	f	module:lager_util
format_time	src/lager/lager_util.erl	/^format_time({utc, {{Y, M, D}, {H, Mi, S}}}) ->$/;"	f	module:lager_util
format_time	src/lager/lager_util.erl	/^format_time({{Y, M, D}, {H, Mi, S, Ms}}) ->$/;"	f	module:lager_util
format_time	src/lager/lager_util.erl	/^format_time({{Y, M, D}, {H, Mi, S}}) ->$/;"	f	module:lager_util
format_time_test_	deps/lager-master/src/lager_util.erl	/^format_time_test_() ->$/;"	f	module:lager_util
format_time_test_	src/lager/lager_util.erl	/^format_time_test_() ->$/;"	f	module:lager_util
format_value	deps/lager-master/src/lager_stdlib.erl	/^format_value(V, ErrStr, Class, PF, Str) ->$/;"	f	module:lager_stdlib
format_value	src/lager/lager_stdlib.erl	/^format_value(V, ErrStr, Class, PF, Str) ->$/;"	f	module:lager_stdlib
formatting_test_	deps/lager-master/src/lager_file_backend.erl	/^formatting_test_() ->$/;"	f	module:lager_file_backend
formatting_test_	src/lager/lager_file_backend.erl	/^formatting_test_() ->$/;"	f	module:lager_file_backend
forms	src/misc/wg_dynamic_config.erl	/^forms(Module, KeyPos,L) ->$/;"	f	module:wg_dynamic_config
fprint	deps/lager-master/src/lager_trunc_io.erl	/^fprint(T, Max, Options) -> $/;"	f	module:lager_trunc_io
fprint	deps/lager-master/src/lager_trunc_io.erl	/^fprint(Term, Max) ->$/;"	f	module:lager_trunc_io
fprint	src/lager/lager_trunc_io.erl	/^fprint(T, Max, Options) -> $/;"	f	module:lager_trunc_io
fprint	src/lager/lager_trunc_io.erl	/^fprint(Term, Max) ->$/;"	f	module:lager_trunc_io
from_now	deps/lager-master/src/lager_handler_watcher.erl	/^from_now(Seconds) ->$/;"	f	module:lager_handler_watcher
from_now	src/lager/lager_handler_watcher.erl	/^from_now(Seconds) ->$/;"	f	module:lager_handler_watcher
from_string	src/logger/dynamic_compile.erl	/^from_string(CodeStr) ->$/;"	f	module:dynamic_compile
from_string	src/logger/dynamic_compile.erl	/^from_string(CodeStr, CompileFormsOptions) ->$/;"	f	module:dynamic_compile
function	deps/lager-master/test/crash.erl	/^function(X) when is_list(X) ->$/;"	f	module:crash
fwrite_e	deps/lager-master/src/lager_format.erl	/^fwrite_e(Fl, F, Adj, P, Pad) when P >= 2 ->$/;"	f	module:lager_format
fwrite_e	deps/lager-master/src/lager_format.erl	/^fwrite_e(Fl, F, Adj, none, Pad) ->$/;"	f	module:lager_format
fwrite_e	deps/lager-master/src/lager_format.erl	/^fwrite_e(Fl, none, Adj, none, Pad) -> %Default values$/;"	f	module:lager_format
fwrite_e	deps/lager-master/src/lager_format.erl	/^fwrite_e(Fl, none, _Adj, P, _Pad) when P >= 2 ->$/;"	f	module:lager_format
fwrite_e	src/lager/lager_format.erl	/^fwrite_e(Fl, F, Adj, P, Pad) when P >= 2 ->$/;"	f	module:lager_format
fwrite_e	src/lager/lager_format.erl	/^fwrite_e(Fl, F, Adj, none, Pad) ->$/;"	f	module:lager_format
fwrite_e	src/lager/lager_format.erl	/^fwrite_e(Fl, none, Adj, none, Pad) -> %Default values$/;"	f	module:lager_format
fwrite_e	src/lager/lager_format.erl	/^fwrite_e(Fl, none, _Adj, P, _Pad) when P >= 2 ->$/;"	f	module:lager_format
fwrite_f	deps/lager-master/src/lager_format.erl	/^fwrite_f(Fl, F, Adj, P, Pad) when P >= 1 ->$/;"	f	module:lager_format
fwrite_f	deps/lager-master/src/lager_format.erl	/^fwrite_f(Fl, F, Adj, none, Pad) ->$/;"	f	module:lager_format
fwrite_f	deps/lager-master/src/lager_format.erl	/^fwrite_f(Fl, none, Adj, none, Pad) -> %Default values$/;"	f	module:lager_format
fwrite_f	deps/lager-master/src/lager_format.erl	/^fwrite_f(Fl, none, _Adj, P, _Pad) when P >= 1 ->$/;"	f	module:lager_format
fwrite_f	src/lager/lager_format.erl	/^fwrite_f(Fl, F, Adj, P, Pad) when P >= 1 ->$/;"	f	module:lager_format
fwrite_f	src/lager/lager_format.erl	/^fwrite_f(Fl, F, Adj, none, Pad) ->$/;"	f	module:lager_format
fwrite_f	src/lager/lager_format.erl	/^fwrite_f(Fl, none, Adj, none, Pad) -> %Default values$/;"	f	module:lager_format
fwrite_f	src/lager/lager_format.erl	/^fwrite_f(Fl, none, _Adj, P, _Pad) when P >= 1 ->$/;"	f	module:lager_format
fwrite_g	deps/lager-master/src/lager_format.erl	/^fwrite_g(Fl, F, Adj, P, Pad) when P >= 1 ->$/;"	f	module:lager_format
fwrite_g	deps/lager-master/src/lager_format.erl	/^fwrite_g(Fl, F, Adj, none, Pad) ->$/;"	f	module:lager_format
fwrite_g	src/lager/lager_format.erl	/^fwrite_g(Fl, F, Adj, P, Pad) when P >= 1 ->$/;"	f	module:lager_format
fwrite_g	src/lager/lager_format.erl	/^fwrite_g(Fl, F, Adj, none, Pad) ->$/;"	f	module:lager_format
game_config	src/misc/game_config.erl	/^-module(game_config).$/;"	m
game_ctl	myfile/game_ctl.erl	/^-module(game_ctl).$/;"	m
gen_any	deps/lager-master/test/trunc_io_eqc.erl	/^gen_any(MaxDepth) ->$/;"	f	module:trunc_io_eqc
gen_atom	deps/lager-master/test/trunc_io_eqc.erl	/^gen_atom() ->$/;"	f	module:trunc_io_eqc
gen_bitstring	deps/lager-master/test/trunc_io_eqc.erl	/^gen_bitstring() ->$/;"	f	module:trunc_io_eqc
gen_char	deps/lager-master/test/trunc_io_eqc.erl	/^gen_char() ->$/;"	f	module:trunc_io_eqc
gen_field_getter	myfile/dynarec.erl	/^gen_field_getter(Tuples) ->$/;"	f	module:dynarec
gen_field_getter_clause	myfile/dynarec.erl	/^gen_field_getter_clause(RecordName, FieldName) ->$/;"	f	module:dynarec
gen_fields	myfile/dynarec.erl	/^gen_fields(Tuples) ->$/;"	f	module:dynarec
gen_fmt_args	deps/lager-master/test/trunc_io_eqc.erl	/^gen_fmt_args() ->$/;"	f	module:trunc_io_eqc
gen_fun	deps/lager-master/test/trunc_io_eqc.erl	/^gen_fun() ->$/;"	f	module:trunc_io_eqc
gen_iolist	deps/lager-master/test/trunc_io_eqc.erl	/^gen_iolist(0) ->$/;"	f	module:trunc_io_eqc
gen_iolist	deps/lager-master/test/trunc_io_eqc.erl	/^gen_iolist(Depth) ->$/;"	f	module:trunc_io_eqc
gen_max_len	deps/lager-master/test/trunc_io_eqc.erl	/^gen_max_len() -> %% Generate length from 3 to whatever.  Needs space for ... in output$/;"	f	module:trunc_io_eqc
gen_new_record	myfile/dynarec.erl	/^gen_new_record(Tuples) ->$/;"	f	module:dynarec
gen_new_record_clause	myfile/dynarec.erl	/^gen_new_record_clause(RecordName) ->$/;"	f	module:dynarec
gen_pid	deps/lager-master/test/trunc_io_eqc.erl	/^gen_pid() ->$/;"	f	module:trunc_io_eqc
gen_port	deps/lager-master/test/trunc_io_eqc.erl	/^gen_port() ->$/;"	f	module:trunc_io_eqc
gen_print_bin	deps/lager-master/test/trunc_io_eqc.erl	/^gen_print_bin() ->$/;"	f	module:trunc_io_eqc
gen_print_str	deps/lager-master/test/trunc_io_eqc.erl	/^gen_print_str() ->$/;"	f	module:trunc_io_eqc
gen_quoted_atom	deps/lager-master/test/trunc_io_eqc.erl	/^gen_quoted_atom() ->$/;"	f	module:trunc_io_eqc
gen_records	myfile/dynarec.erl	/^gen_records(Tuples) ->$/;"	f	module:dynarec
gen_ref	deps/lager-master/test/trunc_io_eqc.erl	/^gen_ref() ->$/;"	f	module:trunc_io_eqc
gen_reversed_atom_list	myfile/dynarec.erl	/^gen_reversed_atom_list(Terminator, [Head | Tail], Acc) ->$/;"	f	module:dynarec
gen_reversed_atom_list	myfile/dynarec.erl	/^gen_reversed_atom_list([Head | Tail], Acc) ->$/;"	f	module:dynarec
gen_reversed_atom_list	myfile/dynarec.erl	/^gen_reversed_atom_list(_Terminator, [], Acc) ->$/;"	f	module:dynarec
gen_reversed_fields_tokens	myfile/dynarec.erl	/^gen_reversed_fields_tokens(Record, Fields) ->$/;"	f	module:dynarec
gen_server2	src/mod/gen_server2.erl	/^-module(gen_server2).$/;"	m
gen_setter	myfile/dynarec.erl	/^gen_setter(Tuples) ->$/;"	f	module:dynarec
gen_setter_clause	myfile/dynarec.erl	/^gen_setter_clause(RecordName, FieldName) ->$/;"	f	module:dynarec
gen_tuple	deps/lager-master/test/trunc_io_eqc.erl	/^gen_tuple(Gen) ->$/;"	f	module:trunc_io_eqc
get	deps/lager-master/src/lager_config.erl	/^get(Key) ->$/;"	f	module:lager_config
get	deps/lager-master/src/lager_config.erl	/^get(Key, Default) ->$/;"	f	module:lager_config
get	src/lager/lager_config.erl	/^get(Key) ->$/;"	f	module:lager_config
get	src/lager/lager_config.erl	/^get(Key, Default) ->$/;"	f	module:lager_config
get	src/logger/loglevel.erl	/^get() ->$/;"	f	module:loglevel
get	src/misc/global_data_disk.erl	/^get(K) ->$/;"	f	module:global_data_disk
get	src/misc/global_data_disk.erl	/^get(K,Def) ->$/;"	f	module:global_data_disk
get	src/misc/global_data_ram.erl	/^get(K) ->$/;"	f	module:global_data_ram
get	src/misc/global_data_ram.erl	/^get(K,Def) ->$/;"	f	module:global_data_ram
get	src/misc/wg_dynamic_config.erl	/^get(Mod,K) ->$/;"	f	module:wg_dynamic_config
get	src/misc/wg_dynamic_config.erl	/^get(Mod,K, Default) ->$/;"	f	module:wg_dynamic_config
get_all	deps/mysql/db_util.erl	/^get_all(Sql) ->$/;"	f	module:db_util
get_all	deps/mysql/db_util.erl	/^get_all(Table,Fields,WhereFields) ->$/;"	f	module:db_util
get_all	deps/mysql/db_util.erl	/^get_all(Table,Fields,WhereFields,OrderFields) ->$/;"	f	module:db_util
get_all	deps/mysql/db_util.erl	/^get_all(Table,Fields,WhereFields,OrderFields,Limit) ->$/;"	f	module:db_util
get_all	src/mysql/db_util.erl	/^get_all(Sql) ->$/;"	f	module:db_util
get_all	src/mysql/db_util.erl	/^get_all(Table,Fields,WhereFields) ->$/;"	f	module:db_util
get_all	src/mysql/db_util.erl	/^get_all(Table,Fields,WhereFields,OrderFields) ->$/;"	f	module:db_util
get_all	src/mysql/db_util.erl	/^get_all(Table,Fields,WhereFields,OrderFields,Limit) ->$/;"	f	module:db_util
get_all	src/mysql/emysql/edb_util.erl	/^get_all(Sql) ->$/;"	f	module:db_util
get_all	src/mysql/emysql/edb_util.erl	/^get_all(Table,Fields,WhereFields) ->$/;"	f	module:db_util
get_all	src/mysql/emysql/edb_util.erl	/^get_all(Table,Fields,WhereFields,OrderFields) ->$/;"	f	module:db_util
get_all	src/mysql/emysql/edb_util.erl	/^get_all(Table,Fields,WhereFields,OrderFields,Limit) ->$/;"	f	module:db_util
get_beam_info	myfile/reloader.erl	/^get_beam_info([H | T],Path,AccIn) ->$/;"	f	module:reloader
get_beam_info	myfile/reloader.erl	/^get_beam_info([],_Path,AccIn) ->$/;"	f	module:reloader
get_beam_list	myfile/reloader.erl	/^get_beam_list() ->$/;"	f	module:reloader
get_beam_list	myfile/reloader.erl	/^get_beam_list([H | T],AccIn) ->$/;"	f	module:reloader
get_beam_list	myfile/reloader.erl	/^get_beam_list([],AccIn) ->$/;"	f	module:reloader
get_beam_time	myfile/reloader.erl	/^get_beam_time(Name) ->$/;"	f	module:reloader
get_callback_mod	src/mod/gen_server2.erl	/^get_callback_mod() ->$/;"	f	module:gen_server2
get_close_list	src/test/a_star.erl	/^get_close_list() ->$/;"	f	module:a_star
get_config	src/misc/game_config.erl	/^get_config(Key) ->$/;"	f	module:game_config
get_config	src/misc/game_config.erl	/^get_config(Key, Default) ->$/;"	f	module:game_config
get_db_name	deps/mysql/db.erl	/^get_db_name() ->$/;"	f	module:db
get_db_name	src/mysql/db.erl	/^get_db_name() ->$/;"	f	module:db
get_db_name	src/mysql/emysql/edb.erl	/^get_db_name() ->$/;"	f	module:db
get_eight_pos	src/test/a_star.erl	/^get_eight_pos({X, Y}) ->$/;"	f	module:a_star
get_error_data	deps/mysql/mysql_conn.erl	/^get_error_data(ErrPacket, ?MYSQL_4_0) ->$/;"	f	module:mysql_conn
get_error_data	deps/mysql/mysql_conn.erl	/^get_error_data(ErrPacket, ?MYSQL_4_1) ->$/;"	f	module:mysql_conn
get_error_data	src/mysql/mysql_conn.erl	/^get_error_data(ErrPacket, ?MYSQL_4_0) ->$/;"	f	module:mysql_conn
get_error_data	src/mysql/mysql_conn.erl	/^get_error_data(ErrPacket, ?MYSQL_4_1) ->$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(0) ->   'DECIMAL';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(1) ->   'TINY';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(10) ->  'DATE';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(11) ->  'TIME';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(12) ->  'DATETIME';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(13) ->  'YEAR';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(14) ->  'NEWDATE';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(2) ->   'SHORT';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(246) -> 'NEWDECIMAL';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(247) -> 'ENUM';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(248) -> 'SET';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(249) -> 'TINYBLOB';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(250) -> 'MEDIUM_BLOG';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(251) -> 'LONG_BLOG';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(252) -> 'BLOB';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(253) -> 'VAR_STRING';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(254) -> 'STRING';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(255) -> 'GEOMETRY'.$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(3) ->   'LONG';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(4) ->   'FLOAT';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(5) ->   'DOUBLE';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(6) ->   'NULL';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(7) ->   'TIMESTAMP';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(8) ->   'LONGLONG';$/;"	f	module:mysql_conn
get_field_datatype	deps/mysql/mysql_conn.erl	/^get_field_datatype(9) ->   'INT24';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(0) ->   'DECIMAL';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(1) ->   'TINY';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(10) ->  'DATE';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(11) ->  'TIME';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(12) ->  'DATETIME';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(13) ->  'YEAR';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(14) ->  'NEWDATE';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(2) ->   'SHORT';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(246) -> 'NEWDECIMAL';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(247) -> 'ENUM';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(248) -> 'SET';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(249) -> 'TINYBLOB';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(250) -> 'MEDIUM_BLOG';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(251) -> 'LONG_BLOG';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(252) -> 'BLOB';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(253) -> 'VAR_STRING';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(254) -> 'STRING';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(255) -> 'GEOMETRY'.$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(3) ->   'LONG';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(4) ->   'FLOAT';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(5) ->   'DOUBLE';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(6) ->   'NULL';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(7) ->   'TIMESTAMP';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(8) ->   'LONGLONG';$/;"	f	module:mysql_conn
get_field_datatype	src/mysql/mysql_conn.erl	/^get_field_datatype(9) ->   'INT24';$/;"	f	module:mysql_conn
get_field_name	myfile/dynarec.erl	/^get_field_name({record_field, _, {atom, _, FieldName}, _Default}) ->$/;"	f	module:dynarec
get_field_name	myfile/dynarec.erl	/^get_field_name({record_field, _, {atom, _, FieldName}}) ->$/;"	f	module:dynarec
get_fields	deps/mysql/mysql_conn.erl	/^get_fields(LogFun, RecvPid, Res, ?MYSQL_4_0) ->$/;"	f	module:mysql_conn
get_fields	deps/mysql/mysql_conn.erl	/^get_fields(LogFun, RecvPid, Res, ?MYSQL_4_1) ->$/;"	f	module:mysql_conn
get_fields	src/mysql/mysql_conn.erl	/^get_fields(LogFun, RecvPid, Res, ?MYSQL_4_0) ->$/;"	f	module:mysql_conn
get_fields	src/mysql/mysql_conn.erl	/^get_fields(LogFun, RecvPid, Res, ?MYSQL_4_1) ->$/;"	f	module:mysql_conn
get_file_time	myfile/reloader.erl	/^get_file_time() ->$/;"	f	module:reloader
get_lcb	deps/mysql/mysql_conn.erl	/^get_lcb(<<251:8, Rest\/binary>>) ->$/;"	f	module:mysql_conn
get_lcb	deps/mysql/mysql_conn.erl	/^get_lcb(<<252:8, Value:16\/little, Rest\/binary>>) ->$/;"	f	module:mysql_conn
get_lcb	deps/mysql/mysql_conn.erl	/^get_lcb(<<253:8, Value:24\/little, Rest\/binary>>) ->$/;"	f	module:mysql_conn
get_lcb	deps/mysql/mysql_conn.erl	/^get_lcb(<<254:8, Value:32\/little, Rest\/binary>>) ->$/;"	f	module:mysql_conn
get_lcb	deps/mysql/mysql_conn.erl	/^get_lcb(<<255:8, Rest\/binary>>) ->$/;"	f	module:mysql_conn
get_lcb	deps/mysql/mysql_conn.erl	/^get_lcb(<<Value:8, Rest\/binary>>) when Value < 251 ->$/;"	f	module:mysql_conn
get_lcb	src/mysql/mysql_conn.erl	/^get_lcb(<<251:8, Rest\/binary>>) ->$/;"	f	module:mysql_conn
get_lcb	src/mysql/mysql_conn.erl	/^get_lcb(<<252:8, Value:16\/little, Rest\/binary>>) ->$/;"	f	module:mysql_conn
get_lcb	src/mysql/mysql_conn.erl	/^get_lcb(<<253:8, Value:24\/little, Rest\/binary>>) ->$/;"	f	module:mysql_conn
get_lcb	src/mysql/mysql_conn.erl	/^get_lcb(<<254:8, Value:32\/little, Rest\/binary>>) ->$/;"	f	module:mysql_conn
get_lcb	src/mysql/mysql_conn.erl	/^get_lcb(<<255:8, Rest\/binary>>) ->$/;"	f	module:mysql_conn
get_lcb	src/mysql/mysql_conn.erl	/^get_lcb(<<Value:8, Rest\/binary>>) when Value < 251 ->$/;"	f	module:mysql_conn
get_limit	deps/mysql/db_util.erl	/^get_limit(Sql,Limit) ->$/;"	f	module:db_util
get_limit	deps/mysql/db_util.erl	/^get_limit(Table,Fields,WhereFields,Limit) ->$/;"	f	module:db_util
get_limit	deps/mysql/db_util.erl	/^get_limit(Table,Fields,WhereFields,OrderFields,Limit) ->$/;"	f	module:db_util
get_limit	src/mysql/db_util.erl	/^get_limit(Sql,Limit) ->$/;"	f	module:db_util
get_limit	src/mysql/db_util.erl	/^get_limit(Table,Fields,WhereFields,Limit) ->$/;"	f	module:db_util
get_limit	src/mysql/db_util.erl	/^get_limit(Table,Fields,WhereFields,OrderFields,Limit) ->$/;"	f	module:db_util
get_limit	src/mysql/emysql/edb_util.erl	/^get_limit(Sql,Limit) ->$/;"	f	module:db_util
get_limit	src/mysql/emysql/edb_util.erl	/^get_limit(Table,Fields,WhereFields,Limit) ->$/;"	f	module:db_util
get_limit	src/mysql/emysql/edb_util.erl	/^get_limit(Table,Fields,WhereFields,OrderFields,Limit) ->$/;"	f	module:db_util
get_log_cache	src/logger/logger_h.erl	/^get_log_cache() ->$/;"	f	module:logger_h
get_log_ref	src/logger/logger_h.erl	/^get_log_ref() ->$/;"	f	module:logger_h
get_loglevel	deps/lager-master/src/lager.erl	/^get_loglevel(Handler) ->$/;"	f	module:lager
get_loglevel	src/lager/lager.erl	/^get_loglevel(Handler) ->$/;"	f	module:lager
get_loglevel_test	deps/lager-master/src/lager_file_backend.erl	/^get_loglevel_test() ->$/;"	f	module:lager_file_backend
get_loglevel_test	src/lager/lager_file_backend.erl	/^get_loglevel_test() ->$/;"	f	module:lager_file_backend
get_loglevels	deps/lager-master/src/lager.erl	/^get_loglevels() ->$/;"	f	module:lager
get_loglevels	src/lager/lager.erl	/^get_loglevels() ->$/;"	f	module:lager
get_logs	deps/lager-master/src/lager_common_test_backend.erl	/^get_logs() ->$/;"	f	module:lager_common_test_backend
get_logs	src/lager/lager_common_test_backend.erl	/^get_logs() ->$/;"	f	module:lager_common_test_backend
get_metadata	deps/lager-master/src/lager_default_formatter.erl	/^get_metadata(Key, Metadata) ->$/;"	f	module:lager_default_formatter
get_metadata	deps/lager-master/src/lager_default_formatter.erl	/^get_metadata(Key, Metadata, Default) ->$/;"	f	module:lager_default_formatter
get_metadata	src/lager/lager_default_formatter.erl	/^get_metadata(Key, Metadata) ->$/;"	f	module:lager_default_formatter
get_metadata	src/lager/lager_default_formatter.erl	/^get_metadata(Key, Metadata, Default) ->$/;"	f	module:lager_default_formatter
get_next_conn	deps/mysql/mysql.erl	/^get_next_conn(PoolId, State) ->$/;"	f	module:mysql
get_next_conn	src/mysql/mysql.erl	/^get_next_conn(PoolId, State) ->$/;"	f	module:mysql
get_old_index	src/logger/logger_h.erl	/^get_old_index() ->$/;"	f	module:logger_h
get_one	deps/mysql/db_util.erl	/^get_one(Table,Field,WhereFields) ->$/;"	f	module:db_util
get_one	src/mysql/db_util.erl	/^get_one(Table,Field,WhereFields) ->$/;"	f	module:db_util
get_one	src/mysql/emysql/edb_util.erl	/^get_one(Table,Field,WhereFields) ->$/;"	f	module:db_util
get_open_list	src/test/a_star.erl	/^get_open_list() ->$/;"	f	module:a_star
get_opts_from_emakefile	myfile/mmake.erl	/^get_opts_from_emakefile(Mods,Emakefile,Opts) ->$/;"	f	module:mmake
get_opts_from_emakefile	src/misc/mmake.erl	/^get_opts_from_emakefile(Mods,Emakefile,Opts) ->$/;"	f	module:mmake
get_opts_from_emakefile2	myfile/mmake.erl	/^get_opts_from_emakefile2([],RestOfMods,Opts,Result) ->$/;"	f	module:mmake
get_opts_from_emakefile2	myfile/mmake.erl	/^get_opts_from_emakefile2([],[],_Opts,Result) ->$/;"	f	module:mmake
get_opts_from_emakefile2	myfile/mmake.erl	/^get_opts_from_emakefile2([{MakefileMods,O}|Rest],Mods,Opts,Result) ->$/;"	f	module:mmake
get_opts_from_emakefile2	src/misc/mmake.erl	/^get_opts_from_emakefile2([],RestOfMods,Opts,Result) ->$/;"	f	module:mmake
get_opts_from_emakefile2	src/misc/mmake.erl	/^get_opts_from_emakefile2([],[],_Opts,Result) ->$/;"	f	module:mmake
get_opts_from_emakefile2	src/misc/mmake.erl	/^get_opts_from_emakefile2([{MakefileMods,O}|Rest],Mods,Opts,Result) ->$/;"	f	module:mmake
get_pool_id	deps/mysql/mysql_conn.erl	/^get_pool_id(State) ->$/;"	f	module:mysql_conn
get_pool_id	src/mysql/mysql_conn.erl	/^get_pool_id(State) ->$/;"	f	module:mysql_conn
get_prepared	deps/mysql/mysql.erl	/^get_prepared(Name) ->$/;"	f	module:mysql
get_prepared	deps/mysql/mysql.erl	/^get_prepared(Name, Version) ->$/;"	f	module:mysql
get_prepared	src/mysql/mysql.erl	/^get_prepared(Name) ->$/;"	f	module:mysql
get_prepared	src/mysql/mysql.erl	/^get_prepared(Name, Version) ->$/;"	f	module:mysql
get_query_response	deps/mysql/mysql_conn.erl	/^get_query_response(LogFun, RecvPid, Version) ->$/;"	f	module:mysql_conn
get_query_response	src/mysql/mysql_conn.erl	/^get_query_response(LogFun, RecvPid, Version) ->$/;"	f	module:mysql_conn
get_reload_time	myfile/reloader.erl	/^get_reload_time() ->$/;"	f	module:reloader
get_result_affected_rows	deps/mysql/mysql.erl	/^get_result_affected_rows(#mysql_result{affectedrows=AffectedRows}) ->$/;"	f	module:mysql
get_result_affected_rows	src/mysql/mysql.erl	/^get_result_affected_rows(#mysql_result{affectedrows=AffectedRows}) ->$/;"	f	module:mysql
get_result_err_code	deps/mysql/mysql.erl	/^get_result_err_code(#mysql_result{errcode=ErrCode}) ->$/;"	f	module:mysql
get_result_err_code	src/mysql/mysql.erl	/^get_result_err_code(#mysql_result{errcode=ErrCode}) ->$/;"	f	module:mysql
get_result_err_sql_state	deps/mysql/mysql.erl	/^get_result_err_sql_state(#mysql_result{errsqlstate=ErrSqlState}) ->$/;"	f	module:mysql
get_result_err_sql_state	src/mysql/mysql.erl	/^get_result_err_sql_state(#mysql_result{errsqlstate=ErrSqlState}) ->$/;"	f	module:mysql
get_result_field_info	deps/mysql/mysql.erl	/^get_result_field_info(#mysql_result{fieldinfo = FieldInfo}) ->$/;"	f	module:mysql
get_result_field_info	src/mysql/mysql.erl	/^get_result_field_info(#mysql_result{fieldinfo = FieldInfo}) ->$/;"	f	module:mysql
get_result_insert_id	deps/mysql/mysql.erl	/^get_result_insert_id(#mysql_result{insertid=InsertId}) ->$/;"	f	module:mysql
get_result_insert_id	src/mysql/mysql.erl	/^get_result_insert_id(#mysql_result{insertid=InsertId}) ->$/;"	f	module:mysql
get_result_reason	deps/mysql/mysql.erl	/^get_result_reason(#mysql_result{error=Reason}) ->$/;"	f	module:mysql
get_result_reason	src/mysql/mysql.erl	/^get_result_reason(#mysql_result{error=Reason}) ->$/;"	f	module:mysql
get_result_rows	deps/mysql/mysql.erl	/^get_result_rows(#mysql_result{rows=AllRows}) ->$/;"	f	module:mysql
get_result_rows	src/mysql/mysql.erl	/^get_result_rows(#mysql_result{rows=AllRows}) ->$/;"	f	module:mysql
get_row	deps/mysql/db_util.erl	/^get_row(Sql) ->$/;"	f	module:db_util
get_row	deps/mysql/db_util.erl	/^get_row(Table,Fields,WhereFields)->$/;"	f	module:db_util
get_row	deps/mysql/mysql_conn.erl	/^get_row([Field | OtherFields], Data, Res) ->$/;"	f	module:mysql_conn
get_row	deps/mysql/mysql_conn.erl	/^get_row([], _Data, Res) ->$/;"	f	module:mysql_conn
get_row	src/mysql/db_util.erl	/^get_row(Sql) ->$/;"	f	module:db_util
get_row	src/mysql/db_util.erl	/^get_row(Table,Fields,WhereFields)->$/;"	f	module:db_util
get_row	src/mysql/emysql/edb_util.erl	/^get_row(Sql) ->$/;"	f	module:db_util
get_row	src/mysql/emysql/edb_util.erl	/^get_row(Table,Fields,WhereFields)->$/;"	f	module:db_util
get_row	src/mysql/mysql_conn.erl	/^get_row([Field | OtherFields], Data, Res) ->$/;"	f	module:mysql_conn
get_row	src/mysql/mysql_conn.erl	/^get_row([], _Data, Res) ->$/;"	f	module:mysql_conn
get_rows	deps/mysql/mysql_conn.erl	/^get_rows(Fields, LogFun, RecvPid, Res, Version) ->$/;"	f	module:mysql_conn
get_rows	src/mysql/mysql_conn.erl	/^get_rows(Fields, LogFun, RecvPid, Res, Version) ->$/;"	f	module:mysql_conn
get_tuples	myfile/dynarec.erl	/^get_tuples({attribute,_,record, {Name, Fields}}) ->$/;"	f	module:dynarec
get_value	deps/lager-master/src/error_logger_lager_h.erl	/^get_value(Key, List, Default) ->$/;"	f	module:error_logger_lager_h
get_value	deps/lager-master/src/error_logger_lager_h.erl	/^get_value(Key, Value) ->$/;"	f	module:error_logger_lager_h
get_value	src/lager/error_logger_lager_h.erl	/^get_value(Key, List, Default) ->$/;"	f	module:error_logger_lager_h
get_value	src/lager/error_logger_lager_h.erl	/^get_value(Key, Value) ->$/;"	f	module:error_logger_lager_h
get_with_length	deps/mysql/mysql_conn.erl	/^get_with_length(Bin) when is_binary(Bin) ->$/;"	f	module:mysql_conn
get_with_length	src/mysql/mysql_conn.erl	/^get_with_length(Bin) when is_binary(Bin) ->$/;"	f	module:mysql_conn
give_manager_control	src/mysql/emysql/emysql_conn.erl	/^give_manager_control(Socket) ->$/;"	f	module:emysql_conn
give_manager_control	src/mysql/emysql/emysql_conn_mgr.erl	/^give_manager_control(Socket) ->$/;"	f	module:emysql_conn_mgr
global_data_disk	src/misc/global_data_disk.erl	/^-module(global_data_disk).$/;"	m
global_data_ram	src/misc/global_data_ram.erl	/^-module(global_data_ram).$/;"	m
greeting	deps/mysql/mysql_conn.erl	/^greeting(Packet, LogFun) ->$/;"	f	module:mysql_conn
greeting	include/emysql.hrl	/^-record(greeting, {protocol_version :: number(), $/;"	r
greeting	src/mysql/mysql_conn.erl	/^greeting(Packet, LogFun) ->$/;"	f	module:mysql_conn
guess_application	deps/lager-master/src/lager_transform.erl	/^guess_application(Dirname, Attr) when Dirname \/= undefined ->$/;"	f	module:lager_transform
guess_application	deps/lager-master/src/lager_transform.erl	/^guess_application(_, _) ->$/;"	f	module:lager_transform
guess_application	deps/lager-master/src/lager_transform.erl	/^guess_application(undefined, {attribute, _, file, {Filename, _}}) ->$/;"	f	module:lager_transform
guess_application	src/lager/lager_transform.erl	/^guess_application(Dirname, Attr) when Dirname \/= undefined ->$/;"	f	module:lager_transform
guess_application	src/lager/lager_transform.erl	/^guess_application(_, _) ->$/;"	f	module:lager_transform
guess_application	src/lager/lager_transform.erl	/^guess_application(undefined, {attribute, _, file, {Filename, _}}) ->$/;"	f	module:lager_transform
handle_call	deps/lager-master/src/error_logger_lager_h.erl	/^handle_call(_Request, State) ->$/;"	f	module:error_logger_lager_h
handle_call	deps/lager-master/src/error_logger_lager_h.erl	/^handle_call({set_high_water, N}, State) ->$/;"	f	module:error_logger_lager_h
handle_call	deps/lager-master/src/lager_backend_throttle.erl	/^handle_call(_Request, State) ->$/;"	f	module:lager_backend_throttle
handle_call	deps/lager-master/src/lager_backend_throttle.erl	/^handle_call(get_loglevel, State) ->$/;"	f	module:lager_backend_throttle
handle_call	deps/lager-master/src/lager_backend_throttle.erl	/^handle_call({set_loglevel, _Level}, State) ->$/;"	f	module:lager_backend_throttle
handle_call	deps/lager-master/src/lager_common_test_backend.erl	/^handle_call(_, State) ->$/;"	f	module:lager_common_test_backend
handle_call	deps/lager-master/src/lager_common_test_backend.erl	/^handle_call(get_loglevel, #state{level=Level} = State) ->$/;"	f	module:lager_common_test_backend
handle_call	deps/lager-master/src/lager_common_test_backend.erl	/^handle_call(get_logs, #state{log = Logs} = State) ->$/;"	f	module:lager_common_test_backend
handle_call	deps/lager-master/src/lager_common_test_backend.erl	/^handle_call({set_loglevel, Level}, State) ->$/;"	f	module:lager_common_test_backend
handle_call	deps/lager-master/src/lager_console_backend.erl	/^handle_call(_Request, State) ->$/;"	f	module:lager_console_backend
handle_call	deps/lager-master/src/lager_console_backend.erl	/^handle_call(get_loglevel, #state{level=Level} = State) ->$/;"	f	module:lager_console_backend
handle_call	deps/lager-master/src/lager_console_backend.erl	/^handle_call({set_loglevel, Level}, State) ->$/;"	f	module:lager_console_backend
handle_call	deps/lager-master/src/lager_crash_log.erl	/^handle_call(_Call, _From, State) ->$/;"	f	module:lager_crash_log
handle_call	deps/lager-master/src/lager_crash_log.erl	/^handle_call({log, _} = Log, _From, State) ->$/;"	f	module:lager_crash_log
handle_call	deps/lager-master/src/lager_file_backend.erl	/^handle_call(_Request, State) ->$/;"	f	module:lager_file_backend
handle_call	deps/lager-master/src/lager_file_backend.erl	/^handle_call(get_loglevel, #state{level=Level} = State) ->$/;"	f	module:lager_file_backend
handle_call	deps/lager-master/src/lager_file_backend.erl	/^handle_call({set_loglevel, Level}, #state{name=Ident} = State) ->$/;"	f	module:lager_file_backend
handle_call	deps/lager-master/src/lager_handler_watcher.erl	/^handle_call(_Call, _From, State) ->$/;"	f	module:lager_handler_watcher
handle_call	deps/lager-master/test/crash.erl	/^handle_call(_Call, _From, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(bad_return, _, _) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(bad_return_string, _, _) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(badarg1, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(badarg2, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(badarith, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(badarity, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(badfun, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(badmatch, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(badrecord, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(case_clause, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(case_clause_string, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(function_clause, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(if_clause, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(noproc, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(port_limit, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(process_limit, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(system_limit, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(throw, _, _State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(try_clause, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/crash.erl	/^handle_call(undef, _, State) ->$/;"	f	module:crash
handle_call	deps/lager-master/test/lager_crash_backend.erl	/^handle_call(_Request, State) ->$/;"	f	module:lager_crash_backend
handle_call	deps/lager-master/test/lager_test_backend.erl	/^handle_call(_Request, State) ->$/;"	f	module:lager_test_backend
handle_call	deps/lager-master/test/lager_test_backend.erl	/^handle_call(count, #state{buffer=Buffer} = State) ->$/;"	f	module:lager_test_backend
handle_call	deps/lager-master/test/lager_test_backend.erl	/^handle_call(count_ignored, #state{ignored=Ignored} = State) ->$/;"	f	module:lager_test_backend
handle_call	deps/lager-master/test/lager_test_backend.erl	/^handle_call(flush, State) ->$/;"	f	module:lager_test_backend
handle_call	deps/lager-master/test/lager_test_backend.erl	/^handle_call(get_loglevel, #state{level=Level} = State) ->$/;"	f	module:lager_test_backend
handle_call	deps/lager-master/test/lager_test_backend.erl	/^handle_call(pop, #state{buffer=Buffer} = State) ->$/;"	f	module:lager_test_backend
handle_call	deps/lager-master/test/lager_test_backend.erl	/^handle_call(print_bad_state, State) ->$/;"	f	module:lager_test_backend
handle_call	deps/lager-master/test/lager_test_backend.erl	/^handle_call(print_state, State) ->$/;"	f	module:lager_test_backend
handle_call	deps/lager-master/test/lager_test_backend.erl	/^handle_call({set_loglevel, Level}, State) ->$/;"	f	module:lager_test_backend
handle_call	deps/mysql/mysql.erl	/^handle_call(get_logfun, _From, State) ->$/;"	f	module:mysql
handle_call	deps/mysql/mysql.erl	/^handle_call(stop,_From,State = #state{conn_pools = ConnPools}) ->$/;"	f	module:mysql
handle_call	deps/mysql/mysql.erl	/^handle_call({add_conn, Conn}, _From, State) ->$/;"	f	module:mysql
handle_call	deps/mysql/mysql.erl	/^handle_call({execute, PoolId, Name, Params}, From, State) ->$/;"	f	module:mysql
handle_call	deps/mysql/mysql.erl	/^handle_call({fetch, PoolId, Query}, From, State) ->$/;"	f	module:mysql
handle_call	deps/mysql/mysql.erl	/^handle_call({get_prepared, Name, Version}, _From, State) ->$/;"	f	module:mysql
handle_call	deps/mysql/mysql.erl	/^handle_call({transaction, PoolId, Fun}, From, State) ->$/;"	f	module:mysql
handle_call	myfile/tcp_acceptor.erl	/^handle_call(_Request, _From, State) ->$/;"	f	module:tcp_acceptor
handle_call	myfile/tcp_listener.erl	/^handle_call(_Request, _From, State) ->$/;"	f	module:tcp_listener
handle_call	src/kernel/tcp_acceptor.erl	/^handle_call(_Request, _From, State) ->$/;"	f	module:tcp_acceptor
handle_call	src/kernel/tcp_listener.erl	/^handle_call(_Request, _From, State) ->$/;"	f	module:tcp_listener
handle_call	src/lager/error_logger_lager_h.erl	/^handle_call(_Request, State) ->$/;"	f	module:error_logger_lager_h
handle_call	src/lager/error_logger_lager_h.erl	/^handle_call({set_high_water, N}, State) ->$/;"	f	module:error_logger_lager_h
handle_call	src/lager/lager_backend_throttle.erl	/^handle_call(_Request, State) ->$/;"	f	module:lager_backend_throttle
handle_call	src/lager/lager_backend_throttle.erl	/^handle_call(get_loglevel, State) ->$/;"	f	module:lager_backend_throttle
handle_call	src/lager/lager_backend_throttle.erl	/^handle_call({set_loglevel, _Level}, State) ->$/;"	f	module:lager_backend_throttle
handle_call	src/lager/lager_common_test_backend.erl	/^handle_call(_, State) ->$/;"	f	module:lager_common_test_backend
handle_call	src/lager/lager_common_test_backend.erl	/^handle_call(get_loglevel, #state{level=Level} = State) ->$/;"	f	module:lager_common_test_backend
handle_call	src/lager/lager_common_test_backend.erl	/^handle_call(get_logs, #state{log = Logs} = State) ->$/;"	f	module:lager_common_test_backend
handle_call	src/lager/lager_common_test_backend.erl	/^handle_call({set_loglevel, Level}, State) ->$/;"	f	module:lager_common_test_backend
handle_call	src/lager/lager_console_backend.erl	/^handle_call(_Request, State) ->$/;"	f	module:lager_console_backend
handle_call	src/lager/lager_console_backend.erl	/^handle_call(get_loglevel, #state{level=Level} = State) ->$/;"	f	module:lager_console_backend
handle_call	src/lager/lager_console_backend.erl	/^handle_call({set_loglevel, Level}, State) ->$/;"	f	module:lager_console_backend
handle_call	src/lager/lager_crash_log.erl	/^handle_call(_Call, _From, State) ->$/;"	f	module:lager_crash_log
handle_call	src/lager/lager_crash_log.erl	/^handle_call({log, _} = Log, _From, State) ->$/;"	f	module:lager_crash_log
handle_call	src/lager/lager_file_backend.erl	/^handle_call(_Request, State) ->$/;"	f	module:lager_file_backend
handle_call	src/lager/lager_file_backend.erl	/^handle_call(get_loglevel, #state{level=Level} = State) ->$/;"	f	module:lager_file_backend
handle_call	src/lager/lager_file_backend.erl	/^handle_call({set_loglevel, Level}, #state{name=Ident} = State) ->$/;"	f	module:lager_file_backend
handle_call	src/lager/lager_handler_watcher.erl	/^handle_call(_Call, _From, State) ->$/;"	f	module:lager_handler_watcher
handle_call	src/logger/logger_h.erl	/^handle_call(_Request, State) ->$/;"	f	module:logger_h
handle_call	src/mod/gen_server2.erl	/^handle_call(Info, From, State) ->$/;"	f	module:gen_server2
handle_call	src/mysql/emysql/emysql_conn_mgr.erl	/^handle_call(_, _From, State) -> {reply, {error, invalid_call}, State}.$/;"	f	module:emysql_conn_mgr
handle_call	src/mysql/emysql/emysql_conn_mgr.erl	/^handle_call(pools, _From, State) ->$/;"	f	module:emysql_conn_mgr
handle_call	src/mysql/emysql/emysql_conn_mgr.erl	/^handle_call({abort_wait, PoolId}, {From, _Mref}, State) ->$/;"	f	module:emysql_conn_mgr
handle_call	src/mysql/emysql/emysql_conn_mgr.erl	/^handle_call({add_connections, PoolId, Conns}, _From, State) ->$/;"	f	module:emysql_conn_mgr
handle_call	src/mysql/emysql/emysql_conn_mgr.erl	/^handle_call({add_pool, Pool}, _From, State) ->$/;"	f	module:emysql_conn_mgr
handle_call	src/mysql/emysql/emysql_conn_mgr.erl	/^handle_call({has_pool, PoolID}, _From, State) ->$/;"	f	module:emysql_conn_mgr
handle_call	src/mysql/emysql/emysql_conn_mgr.erl	/^handle_call({lock_connection, PoolId, Wait, Who}, {From, _Mref}, State) ->$/;"	f	module:emysql_conn_mgr
handle_call	src/mysql/emysql/emysql_conn_mgr.erl	/^handle_call({remove_connections, PoolId, Num}, _From, State) ->$/;"	f	module:emysql_conn_mgr
handle_call	src/mysql/emysql/emysql_conn_mgr.erl	/^handle_call({remove_pool, PoolId}, _From, State) ->$/;"	f	module:emysql_conn_mgr
handle_call	src/mysql/emysql/emysql_conn_mgr.erl	/^handle_call({{replace_connection, Kind}, OldConn, NewConn}, _From, State) ->$/;"	f	module:emysql_conn_mgr
handle_call	src/mysql/emysql/emysql_statements.erl	/^handle_call(_, _From, State) -> {reply, {error, invalid_call}, State}.$/;"	f	module:emysql_statements
handle_call	src/mysql/emysql/emysql_statements.erl	/^handle_call(all, _From, State) ->$/;"	f	module:emysql_statements
handle_call	src/mysql/emysql/emysql_statements.erl	/^handle_call({add, StmtName, Statement}, _From, State) ->$/;"	f	module:emysql_statements
handle_call	src/mysql/emysql/emysql_statements.erl	/^handle_call({fetch, StmtName}, _From, State) ->$/;"	f	module:emysql_statements
handle_call	src/mysql/emysql/emysql_statements.erl	/^handle_call({prepare, ConnId, StmtName, Version}, _From, State) ->$/;"	f	module:emysql_statements
handle_call	src/mysql/emysql/emysql_statements.erl	/^handle_call({remove, ConnId}, _From, State) ->$/;"	f	module:emysql_statements
handle_call	src/mysql/emysql/emysql_statements.erl	/^handle_call({version, ConnId, StmtName}, _From, State) ->$/;"	f	module:emysql_statements
handle_call	src/mysql/mysql.erl	/^handle_call(get_logfun, _From, State) ->$/;"	f	module:mysql
handle_call	src/mysql/mysql.erl	/^handle_call(stop,_From,State = #state{conn_pools = ConnPools}) ->$/;"	f	module:mysql
handle_call	src/mysql/mysql.erl	/^handle_call({add_conn, Conn}, _From, State) ->$/;"	f	module:mysql
handle_call	src/mysql/mysql.erl	/^handle_call({execute, PoolId, Name, Params}, From, State) ->$/;"	f	module:mysql
handle_call	src/mysql/mysql.erl	/^handle_call({fetch, PoolId, Query}, From, State) ->$/;"	f	module:mysql
handle_call	src/mysql/mysql.erl	/^handle_call({get_prepared, Name, Version}, _From, State) ->$/;"	f	module:mysql
handle_call	src/mysql/mysql.erl	/^handle_call({transaction, PoolId, Fun}, From, State) ->$/;"	f	module:mysql
handle_cast	deps/lager-master/src/lager_crash_log.erl	/^handle_cast(_Request, State) ->$/;"	f	module:lager_crash_log
handle_cast	deps/lager-master/src/lager_crash_log.erl	/^handle_cast({log, _} = Log, State) ->$/;"	f	module:lager_crash_log
handle_cast	deps/lager-master/src/lager_handler_watcher.erl	/^handle_cast(_Request, State) ->$/;"	f	module:lager_handler_watcher
handle_cast	deps/lager-master/test/crash.erl	/^handle_cast(_Cast, State) ->$/;"	f	module:crash
handle_cast	deps/mysql/mysql.erl	/^handle_cast({prepare, Name, Stmt}, State) ->$/;"	f	module:mysql
handle_cast	deps/mysql/mysql.erl	/^handle_cast({unprepare, Name}, State) ->$/;"	f	module:mysql
handle_cast	myfile/tcp_acceptor.erl	/^handle_cast(_Msg, State) ->$/;"	f	module:tcp_acceptor
handle_cast	myfile/tcp_acceptor.erl	/^handle_cast(accept, State) ->$/;"	f	module:tcp_acceptor
handle_cast	myfile/tcp_listener.erl	/^handle_cast(_Msg, State) ->$/;"	f	module:tcp_listener
handle_cast	src/kernel/tcp_acceptor.erl	/^handle_cast(_Msg, State) ->$/;"	f	module:tcp_acceptor
handle_cast	src/kernel/tcp_acceptor.erl	/^handle_cast(accept, State) ->$/;"	f	module:tcp_acceptor
handle_cast	src/kernel/tcp_listener.erl	/^handle_cast(_Msg, State) ->$/;"	f	module:tcp_listener
handle_cast	src/lager/lager_crash_log.erl	/^handle_cast(_Request, State) ->$/;"	f	module:lager_crash_log
handle_cast	src/lager/lager_crash_log.erl	/^handle_cast({log, _} = Log, State) ->$/;"	f	module:lager_crash_log
handle_cast	src/lager/lager_handler_watcher.erl	/^handle_cast(_Request, State) ->$/;"	f	module:lager_handler_watcher
handle_cast	src/mod/gen_server2.erl	/^handle_cast(Info, State) ->$/;"	f	module:gen_server2
handle_cast	src/mysql/emysql/emysql_conn_mgr.erl	/^handle_cast(_Msg, State) ->$/;"	f	module:emysql_conn_mgr
handle_cast	src/mysql/emysql/emysql_statements.erl	/^handle_cast(_Msg, State) ->$/;"	f	module:emysql_statements
handle_cast	src/mysql/mysql.erl	/^handle_cast({prepare, Name, Stmt}, State) ->$/;"	f	module:mysql
handle_cast	src/mysql/mysql.erl	/^handle_cast({unprepare, Name}, State) ->$/;"	f	module:mysql
handle_event	deps/lager-master/src/error_logger_lager_h.erl	/^handle_event(Event, State) ->$/;"	f	module:error_logger_lager_h
handle_event	deps/lager-master/src/lager_backend_throttle.erl	/^handle_event(_Event, State) ->$/;"	f	module:lager_backend_throttle
handle_event	deps/lager-master/src/lager_backend_throttle.erl	/^handle_event({log, _Message},State) ->$/;"	f	module:lager_backend_throttle
handle_event	deps/lager-master/src/lager_common_test_backend.erl	/^handle_event(Event, State) ->$/;"	f	module:lager_common_test_backend
handle_event	deps/lager-master/src/lager_common_test_backend.erl	/^handle_event({log, Message},$/;"	f	module:lager_common_test_backend
handle_event	deps/lager-master/src/lager_console_backend.erl	/^handle_event(_Event, State) ->$/;"	f	module:lager_console_backend
handle_event	deps/lager-master/src/lager_console_backend.erl	/^handle_event({log, Message},$/;"	f	module:lager_console_backend
handle_event	deps/lager-master/src/lager_file_backend.erl	/^handle_event(_Event, State) ->$/;"	f	module:lager_file_backend
handle_event	deps/lager-master/src/lager_file_backend.erl	/^handle_event({log, Message},$/;"	f	module:lager_file_backend
handle_event	deps/lager-master/test/lager_crash_backend.erl	/^handle_event(_Event, State) ->$/;"	f	module:lager_crash_backend
handle_event	deps/lager-master/test/lager_test_backend.erl	/^handle_event(_Event, State) ->$/;"	f	module:lager_test_backend
handle_event	deps/lager-master/test/lager_test_backend.erl	/^handle_event({log, Msg},$/;"	f	module:lager_test_backend
handle_event	src/lager/error_logger_lager_h.erl	/^handle_event(Event, State) ->$/;"	f	module:error_logger_lager_h
handle_event	src/lager/lager_backend_throttle.erl	/^handle_event(_Event, State) ->$/;"	f	module:lager_backend_throttle
handle_event	src/lager/lager_backend_throttle.erl	/^handle_event({log, _Message},State) ->$/;"	f	module:lager_backend_throttle
handle_event	src/lager/lager_common_test_backend.erl	/^handle_event(Event, State) ->$/;"	f	module:lager_common_test_backend
handle_event	src/lager/lager_common_test_backend.erl	/^handle_event({log, Message},$/;"	f	module:lager_common_test_backend
handle_event	src/lager/lager_console_backend.erl	/^handle_event(_Event, State) ->$/;"	f	module:lager_console_backend
handle_event	src/lager/lager_console_backend.erl	/^handle_event({log, Message},$/;"	f	module:lager_console_backend
handle_event	src/lager/lager_file_backend.erl	/^handle_event(_Event, State) ->$/;"	f	module:lager_file_backend
handle_event	src/lager/lager_file_backend.erl	/^handle_event({log, Message},$/;"	f	module:lager_file_backend
handle_event	src/logger/logger_h.erl	/^handle_event(Event, State) ->$/;"	f	module:logger_h
handle_info	deps/lager-master/src/error_logger_lager_h.erl	/^handle_info(_Info, State) ->$/;"	f	module:error_logger_lager_h
handle_info	deps/lager-master/src/lager_backend_throttle.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_backend_throttle
handle_info	deps/lager-master/src/lager_common_test_backend.erl	/^handle_info(_, State) ->$/;"	f	module:lager_common_test_backend
handle_info	deps/lager-master/src/lager_console_backend.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_console_backend
handle_info	deps/lager-master/src/lager_crash_log.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_crash_log
handle_info	deps/lager-master/src/lager_crash_log.erl	/^handle_info(rotate, #state{name=Name, count=Count, date=Date} = State) ->$/;"	f	module:lager_crash_log
handle_info	deps/lager-master/src/lager_file_backend.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_file_backend
handle_info	deps/lager-master/src/lager_file_backend.erl	/^handle_info({rotate, File}, #state{name=File,count=Count,date=Date} = State) ->$/;"	f	module:lager_file_backend
handle_info	deps/lager-master/src/lager_handler_watcher.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_handler_watcher
handle_info	deps/lager-master/src/lager_handler_watcher.erl	/^handle_info(reinstall_handler, #state{module=Module, config=Config, event=Event} = State) ->$/;"	f	module:lager_handler_watcher
handle_info	deps/lager-master/src/lager_handler_watcher.erl	/^handle_info(stop, State) ->$/;"	f	module:lager_handler_watcher
handle_info	deps/lager-master/src/lager_handler_watcher.erl	/^handle_info({gen_event_EXIT, Module, Reason}, #state{module=Module,$/;"	f	module:lager_handler_watcher
handle_info	deps/lager-master/src/lager_handler_watcher.erl	/^handle_info({gen_event_EXIT, Module, normal}, #state{module=Module} = State) ->$/;"	f	module:lager_handler_watcher
handle_info	deps/lager-master/src/lager_handler_watcher.erl	/^handle_info({gen_event_EXIT, Module, shutdown}, #state{module=Module} = State) ->$/;"	f	module:lager_handler_watcher
handle_info	deps/lager-master/test/crash.erl	/^handle_info(_Info, State) ->$/;"	f	module:crash
handle_info	deps/lager-master/test/lager_crash_backend.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_crash_backend
handle_info	deps/lager-master/test/lager_crash_backend.erl	/^handle_info(crash, _State) ->$/;"	f	module:lager_crash_backend
handle_info	deps/lager-master/test/lager_test_backend.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_test_backend
handle_info	deps/mysql/mysql.erl	/^handle_info({'DOWN', _MonitorRef, process, Pid, Info}, State) ->$/;"	f	module:mysql
handle_info	myfile/tcp_acceptor.erl	/^handle_info(_Info, State) ->$/;"	f	module:tcp_acceptor
handle_info	myfile/tcp_acceptor.erl	/^handle_info({inet_async, LSock, Ref, {error, Reason}},State=#state{sock=LSock, ref=Ref}) ->$/;"	f	module:tcp_acceptor
handle_info	myfile/tcp_acceptor.erl	/^handle_info({inet_async, LSock, Ref, {error, closed}},State=#state{sock=LSock, ref=Ref}) ->$/;"	f	module:tcp_acceptor
handle_info	myfile/tcp_acceptor.erl	/^handle_info({inet_async, LSock, Ref, {ok, Sock}}, State = #state{sock=LSock, ref=Ref}) ->$/;"	f	module:tcp_acceptor
handle_info	myfile/tcp_listener.erl	/^handle_info(_Info, State) ->$/;"	f	module:tcp_listener
handle_info	src/kernel/tcp_acceptor.erl	/^handle_info(_Info, State) ->$/;"	f	module:tcp_acceptor
handle_info	src/kernel/tcp_acceptor.erl	/^handle_info({inet_async, LSock, Ref, {error, Reason}},State=#state{sock=LSock, ref=Ref}) ->$/;"	f	module:tcp_acceptor
handle_info	src/kernel/tcp_acceptor.erl	/^handle_info({inet_async, LSock, Ref, {error, closed}},State=#state{sock=LSock, ref=Ref}) ->$/;"	f	module:tcp_acceptor
handle_info	src/kernel/tcp_acceptor.erl	/^handle_info({inet_async, LSock, Ref, {ok, Sock}}, State = #state{sock=LSock, ref=Ref}) ->$/;"	f	module:tcp_acceptor
handle_info	src/kernel/tcp_listener.erl	/^handle_info(_Info, State) ->$/;"	f	module:tcp_listener
handle_info	src/lager/error_logger_lager_h.erl	/^handle_info(_Info, State) ->$/;"	f	module:error_logger_lager_h
handle_info	src/lager/lager_backend_throttle.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_backend_throttle
handle_info	src/lager/lager_common_test_backend.erl	/^handle_info(_, State) ->$/;"	f	module:lager_common_test_backend
handle_info	src/lager/lager_console_backend.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_console_backend
handle_info	src/lager/lager_crash_log.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_crash_log
handle_info	src/lager/lager_crash_log.erl	/^handle_info(rotate, #state{name=Name, count=Count, date=Date} = State) ->$/;"	f	module:lager_crash_log
handle_info	src/lager/lager_file_backend.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_file_backend
handle_info	src/lager/lager_file_backend.erl	/^handle_info({rotate, File}, #state{name=File,count=Count,date=Date} = State) ->$/;"	f	module:lager_file_backend
handle_info	src/lager/lager_handler_watcher.erl	/^handle_info(_Info, State) ->$/;"	f	module:lager_handler_watcher
handle_info	src/lager/lager_handler_watcher.erl	/^handle_info(reinstall_handler, #state{module=Module, config=Config, event=Event} = State) ->$/;"	f	module:lager_handler_watcher
handle_info	src/lager/lager_handler_watcher.erl	/^handle_info(stop, State) ->$/;"	f	module:lager_handler_watcher
handle_info	src/lager/lager_handler_watcher.erl	/^handle_info({gen_event_EXIT, Module, Reason}, #state{module=Module,$/;"	f	module:lager_handler_watcher
handle_info	src/lager/lager_handler_watcher.erl	/^handle_info({gen_event_EXIT, Module, normal}, #state{module=Module} = State) ->$/;"	f	module:lager_handler_watcher
handle_info	src/lager/lager_handler_watcher.erl	/^handle_info({gen_event_EXIT, Module, shutdown}, #state{module=Module} = State) ->$/;"	f	module:lager_handler_watcher
handle_info	src/logger/logger_h.erl	/^handle_info(_Info, State) ->$/;"	f	module:logger_h
handle_info	src/logger/logger_h.erl	/^handle_info(write_log,#state{fd = Fd} = State) ->$/;"	f	module:logger_h
handle_info	src/logger/logger_h.erl	/^handle_info({'EXIT', _Fd, _Reason}, _State) ->$/;"	f	module:logger_h
handle_info	src/logger/logger_h.erl	/^handle_info({emulator, GL, Chars}, State) ->$/;"	f	module:logger_h
handle_info	src/logger/logger_h.erl	/^handle_info({emulator, _GL, reopen}, State) ->$/;"	f	module:logger_h
handle_info	src/mod/gen_server2.erl	/^handle_info(Info, State) ->$/;"	f	module:gen_server2
handle_info	src/mysql/emysql/emysql_conn_mgr.erl	/^handle_info(_Info, State) ->$/;"	f	module:emysql_conn_mgr
handle_info	src/mysql/emysql/emysql_conn_mgr.erl	/^handle_info({'DOWN', MonitorRef, _, _, _}, State) ->$/;"	f	module:emysql_conn_mgr
handle_info	src/mysql/emysql/emysql_statements.erl	/^handle_info(_Info, State) ->$/;"	f	module:emysql_statements
handle_info	src/mysql/mysql.erl	/^handle_info({'DOWN', _MonitorRef, process, Pid, Info}, State) ->$/;"	f	module:mysql
handshake	src/mysql/emysql/emysql_auth.erl	/^handshake(Sock, User, Password) ->$/;"	f	module:emysql_auth
handshake	src/mysql/emysql/emysql_conn.erl	/^handshake(Sock, User, Password) ->$/;"	f	module:emysql_conn
has_line_numbers	deps/lager-master/test/lager_test_backend.erl	/^has_line_numbers() ->$/;"	f	module:lager_test_backend
has_pool	src/mysql/emysql/emysql_conn_mgr.erl	/^has_pool(Pool) ->$/;"	f	module:emysql_conn_mgr
hash	deps/mysql/mysql_auth.erl	/^hash(S) ->$/;"	f	module:mysql_auth
hash	deps/mysql/mysql_auth.erl	/^hash([C | S], N1, N2, Add) ->$/;"	f	module:mysql_auth
hash	deps/mysql/mysql_auth.erl	/^hash([], N1, N2, _Add) ->$/;"	f	module:mysql_auth
hash	src/mysql/emysql/emysql_auth.erl	/^hash(B) when is_binary(B) -> hash(binary_to_list(B));$/;"	f	module:emysql_auth
hash	src/mysql/emysql/emysql_auth.erl	/^hash(S) -> hash(S, 1345345333, 305419889, 7).$/;"	f	module:emysql_auth
hash	src/mysql/emysql/emysql_auth.erl	/^hash([C | S], N1, N2, Add) ->$/;"	f	module:emysql_auth
hash	src/mysql/emysql/emysql_auth.erl	/^hash([], N1, N2, _Add) ->$/;"	f	module:emysql_auth
hash	src/mysql/mysql_auth.erl	/^hash(S) ->$/;"	f	module:mysql_auth
hash	src/mysql/mysql_auth.erl	/^hash([C | S], N1, N2, Add) ->$/;"	f	module:mysql_auth
hash	src/mysql/mysql_auth.erl	/^hash([], N1, N2, _Add) ->$/;"	f	module:mysql_auth
high_watermark_test_	deps/lager-master/test/lager_test_backend.erl	/^high_watermark_test_() ->$/;"	f	module:lager_test_backend
hstate	src/mysql/emysql/emysql_conn.erl	/^hstate(State) ->$/;"	f	module:emysql_conn
i	src/mod/gen_server2.erl	/^i(Pid) ->$/;"	f	module:gen_server2
i2l	deps/lager-master/src/lager_util.erl	/^i2l(I)              -> integer_to_list(I).$/;"	f	module:lager_util
i2l	deps/lager-master/src/lager_util.erl	/^i2l(I) when I < 10  -> [$0, $0+I];$/;"	f	module:lager_util
i2l	src/lager/lager_util.erl	/^i2l(I)              -> integer_to_list(I).$/;"	f	module:lager_util
i2l	src/lager/lager_util.erl	/^i2l(I) when I < 10  -> [$0, $0+I];$/;"	f	module:lager_util
i3l	deps/lager-master/src/lager_util.erl	/^i3l(I)              -> integer_to_list(I).$/;"	f	module:lager_util
i3l	deps/lager-master/src/lager_util.erl	/^i3l(I) when I < 100 -> [$0 | i2l(I)];$/;"	f	module:lager_util
i3l	src/lager/lager_util.erl	/^i3l(I)              -> integer_to_list(I).$/;"	f	module:lager_util
i3l	src/lager/lager_util.erl	/^i3l(I) when I < 100 -> [$0 | i2l(I)];$/;"	f	module:lager_util
identity	src/mysql/emysql/emysql_tcp.erl	/^identity(Data) -> Data.$/;"	f	module:emysql_tcp
include_opt	myfile/mmake.erl	/^include_opt([]) ->$/;"	f	module:mmake
include_opt	myfile/mmake.erl	/^include_opt([_First|Rest]) ->$/;"	f	module:mmake
include_opt	myfile/mmake.erl	/^include_opt([{i,Path}|Rest]) ->$/;"	f	module:mmake
include_opt	src/misc/mmake.erl	/^include_opt([]) ->$/;"	f	module:mmake
include_opt	src/misc/mmake.erl	/^include_opt([_First|Rest]) ->$/;"	f	module:mmake
include_opt	src/misc/mmake.erl	/^include_opt([{i,Path}|Rest]) ->$/;"	f	module:mmake
increment_pool_size	src/mysql/emysql/emysql.erl	/^increment_pool_size(PoolId, Num) when is_integer(Num) ->$/;"	f	module:emysql
info_msg	deps/lager-master/test/sync_error_logger.erl	/^info_msg(Format) ->$/;"	f	module:sync_error_logger
info_msg	deps/lager-master/test/sync_error_logger.erl	/^info_msg(Format, Args) ->$/;"	f	module:sync_error_logger
info_report	deps/lager-master/test/sync_error_logger.erl	/^info_report(Report) ->$/;"	f	module:sync_error_logger
info_report	deps/lager-master/test/sync_error_logger.erl	/^info_report(Type, Report) ->$/;"	f	module:sync_error_logger
init	deps/lager-master/src/error_logger_lager_h.erl	/^init([HighWaterMark]) ->$/;"	f	module:error_logger_lager_h
init	deps/lager-master/src/lager_backend_throttle.erl	/^init([Hwm, Window]) ->$/;"	f	module:lager_backend_throttle
init	deps/lager-master/src/lager_common_test_backend.erl	/^init(Level) ->$/;"	f	module:lager_common_test_backend
init	deps/lager-master/src/lager_common_test_backend.erl	/^init([Level, true]) -> % for backwards compatibility$/;"	f	module:lager_common_test_backend
init	deps/lager-master/src/lager_common_test_backend.erl	/^init([Level,false]) -> % for backwards compatibility$/;"	f	module:lager_common_test_backend
init	deps/lager-master/src/lager_common_test_backend.erl	/^init([Level,{Formatter,FormatterConfig}]) when is_atom(Formatter) ->$/;"	f	module:lager_common_test_backend
init	deps/lager-master/src/lager_console_backend.erl	/^init(Level) ->$/;"	f	module:lager_console_backend
init	deps/lager-master/src/lager_console_backend.erl	/^init([Level, true]) -> % for backwards compatibility$/;"	f	module:lager_console_backend
init	deps/lager-master/src/lager_console_backend.erl	/^init([Level,false]) -> % for backwards compatibility$/;"	f	module:lager_console_backend
init	deps/lager-master/src/lager_console_backend.erl	/^init([Level,{Formatter,FormatterConfig}]) when is_atom(Formatter) ->$/;"	f	module:lager_console_backend
init	deps/lager-master/src/lager_crash_log.erl	/^init([RelFilename, MaxBytes, Size, Date, Count]) ->$/;"	f	module:lager_crash_log
init	deps/lager-master/src/lager_file_backend.erl	/^init(LogFileConfig) when is_list(LogFileConfig) ->$/;"	f	module:lager_file_backend
init	deps/lager-master/src/lager_file_backend.erl	/^init([LogFile,{Formatter}]) ->$/;"	f	module:lager_file_backend
init	deps/lager-master/src/lager_file_backend.erl	/^init([{FileName, LogLevel, Size, Date, Count}, {Formatter,FormatterConfig}]) when is_list(FileName), is_atom(LogLevel), is_atom(Formatter) ->$/;"	f	module:lager_file_backend
init	deps/lager-master/src/lager_file_backend.erl	/^init([{FileName, LogLevel}, {Formatter,FormatterConfig}]) when is_list(FileName), is_atom(LogLevel), is_atom(Formatter) ->$/;"	f	module:lager_file_backend
init	deps/lager-master/src/lager_file_backend.erl	/^init({FileName, LogLevel, Size, Date, Count}) when is_list(FileName), is_atom(LogLevel) ->$/;"	f	module:lager_file_backend
init	deps/lager-master/src/lager_file_backend.erl	/^init({FileName, LogLevel}) when is_list(FileName), is_atom(LogLevel) ->$/;"	f	module:lager_file_backend
init	deps/lager-master/src/lager_handler_watcher.erl	/^init([Event, Module, Config]) ->$/;"	f	module:lager_handler_watcher
init	deps/lager-master/src/lager_handler_watcher_sup.erl	/^init([]) ->$/;"	f	module:lager_handler_watcher_sup
init	deps/lager-master/src/lager_sup.erl	/^init([]) ->$/;"	f	module:lager_sup
init	deps/lager-master/test/crash.erl	/^init(_) ->$/;"	f	module:crash
init	deps/lager-master/test/lager_crash_backend.erl	/^init([CrashBefore, CrashAfter]) ->$/;"	f	module:lager_crash_backend
init	deps/lager-master/test/lager_test_backend.erl	/^init(Level) ->$/;"	f	module:lager_test_backend
init	deps/lager-master/test/special_process.erl	/^init(Parent) ->$/;"	f	module:special_process
init	deps/mysql/db.erl	/^init(SupPid) ->$/;"	f	module:db
init	deps/mysql/mysql.erl	/^init([PoolId, Host, Port, User, Password, Database, LogFun, Encoding]) ->$/;"	f	module:mysql
init	deps/mysql/mysql_conn.erl	/^init(Host, Port, User, Password, Database, LogFun, Encoding, PoolId, Parent) ->$/;"	f	module:mysql_conn
init	deps/mysql/mysql_recv.erl	/^init(Host, Port, LogFun, Parent) ->$/;"	f	module:mysql_recv
init	myfile/game_ctl.erl	/^init() ->$/;"	f	module:game_ctl
init	myfile/reloader.erl	/^init() ->$/;"	f	module:reloader
init	myfile/server_sup.erl	/^init([]) -> $/;"	f	module:server_sup
init	myfile/server_sup.erl	/^init(across_client) -> $/;"	f	module:server_sup
init	myfile/server_sup.erl	/^init(map) -> $/;"	f	module:server_sup
init	myfile/server_sup.erl	/^init(send) -> $/;"	f	module:server_sup
init	myfile/server_sup.erl	/^init(user) -> $/;"	f	module:server_sup
init	myfile/tcp_acceptor.erl	/^init(LSock) ->$/;"	f	module:tcp_acceptor
init	myfile/tcp_acceptor_sup.erl	/^init([]) ->$/;"	f	module:tcp_acceptor_sup
init	myfile/tcp_client_sup.erl	/^init([]) ->$/;"	f	module:tcp_client_sup
init	myfile/tcp_listener.erl	/^init({IPAddress, Port, SocketOpts}) ->$/;"	f	module:tcp_listener
init	myfile/tcp_listener_sup.erl	/^init({IPAddress, Port, SocketOpts}) ->$/;"	f	module:tcp_listener_sup
init	src/kernel/server_sup.erl	/^init([]) -> $/;"	f	module:server_sup
init	src/kernel/server_sup.erl	/^init(map) -> $/;"	f	module:server_sup
init	src/kernel/server_sup.erl	/^init(send) -> $/;"	f	module:server_sup
init	src/kernel/server_sup.erl	/^init(user) -> $/;"	f	module:server_sup
init	src/kernel/tcp_acceptor.erl	/^init(LSock) ->$/;"	f	module:tcp_acceptor
init	src/kernel/tcp_acceptor_sup.erl	/^init([]) ->$/;"	f	module:tcp_acceptor_sup
init	src/kernel/tcp_client_sup.erl	/^init([]) ->$/;"	f	module:tcp_client_sup
init	src/kernel/tcp_listener.erl	/^init({IPAddress, Port, SocketOpts}) ->$/;"	f	module:tcp_listener
init	src/kernel/tcp_listener_sup.erl	/^init({IP, Port, TcpOpt}) ->$/;"	f	module:tcp_listener_sup
init	src/lager/error_logger_lager_h.erl	/^init([HighWaterMark]) ->$/;"	f	module:error_logger_lager_h
init	src/lager/lager_backend_throttle.erl	/^init([Hwm, Window]) ->$/;"	f	module:lager_backend_throttle
init	src/lager/lager_common_test_backend.erl	/^init(Level) ->$/;"	f	module:lager_common_test_backend
init	src/lager/lager_common_test_backend.erl	/^init([Level, true]) -> % for backwards compatibility$/;"	f	module:lager_common_test_backend
init	src/lager/lager_common_test_backend.erl	/^init([Level,false]) -> % for backwards compatibility$/;"	f	module:lager_common_test_backend
init	src/lager/lager_common_test_backend.erl	/^init([Level,{Formatter,FormatterConfig}]) when is_atom(Formatter) ->$/;"	f	module:lager_common_test_backend
init	src/lager/lager_console_backend.erl	/^init(Level) ->$/;"	f	module:lager_console_backend
init	src/lager/lager_console_backend.erl	/^init([Level, true]) -> % for backwards compatibility$/;"	f	module:lager_console_backend
init	src/lager/lager_console_backend.erl	/^init([Level,false]) -> % for backwards compatibility$/;"	f	module:lager_console_backend
init	src/lager/lager_console_backend.erl	/^init([Level,{Formatter,FormatterConfig}]) when is_atom(Formatter) ->$/;"	f	module:lager_console_backend
init	src/lager/lager_crash_log.erl	/^init([RelFilename, MaxBytes, Size, Date, Count]) ->$/;"	f	module:lager_crash_log
init	src/lager/lager_file_backend.erl	/^init(LogFileConfig) when is_list(LogFileConfig) ->$/;"	f	module:lager_file_backend
init	src/lager/lager_file_backend.erl	/^init([LogFile,{Formatter}]) ->$/;"	f	module:lager_file_backend
init	src/lager/lager_file_backend.erl	/^init([{FileName, LogLevel, Size, Date, Count}, {Formatter,FormatterConfig}]) when is_list(FileName), is_atom(LogLevel), is_atom(Formatter) ->$/;"	f	module:lager_file_backend
init	src/lager/lager_file_backend.erl	/^init([{FileName, LogLevel}, {Formatter,FormatterConfig}]) when is_list(FileName), is_atom(LogLevel), is_atom(Formatter) ->$/;"	f	module:lager_file_backend
init	src/lager/lager_file_backend.erl	/^init({FileName, LogLevel, Size, Date, Count}) when is_list(FileName), is_atom(LogLevel) ->$/;"	f	module:lager_file_backend
init	src/lager/lager_file_backend.erl	/^init({FileName, LogLevel}) when is_list(FileName), is_atom(LogLevel) ->$/;"	f	module:lager_file_backend
init	src/lager/lager_handler_watcher.erl	/^init([Event, Module, Config]) ->$/;"	f	module:lager_handler_watcher
init	src/lager/lager_handler_watcher_sup.erl	/^init([]) ->$/;"	f	module:lager_handler_watcher_sup
init	src/lager/lager_sup.erl	/^init([]) ->$/;"	f	module:lager_sup
init	src/logger/logger_h.erl	/^init(_FileName) ->$/;"	f	module:logger_h
init	src/misc/game_config.erl	/^init() ->$/;"	f	module:game_config
init	src/misc/global_data_disk.erl	/^init() ->$/;"	f	module:global_data_disk
init	src/misc/global_data_ram.erl	/^init() ->$/;"	f	module:global_data_ram
init	src/mod/gen_server2.erl	/^init([Mod,Args]) ->$/;"	f	module:gen_server2
init	src/mysql/db.erl	/^init(SupPid) ->$/;"	f	module:db
init	src/mysql/emysql/edb.erl	/^init(SupPid) ->$/;"	f	module:db
init	src/mysql/emysql/emysql_conn_mgr.erl	/^init([]) ->$/;"	f	module:emysql_conn_mgr
init	src/mysql/emysql/emysql_statements.erl	/^init([]) ->$/;"	f	module:emysql_statements
init	src/mysql/emysql/emysql_sup.erl	/^init(_) ->$/;"	f	module:emysql_sup
init	src/mysql/mysql.erl	/^init([PoolId, Host, Port, User, Password, Database, LogFun, Encoding]) ->$/;"	f	module:mysql
init	src/mysql/mysql_conn.erl	/^init(Host, Port, User, Password, Database, LogFun, Encoding, PoolId, Parent) ->$/;"	f	module:mysql_conn
init	src/mysql/mysql_recv.erl	/^init(Host, Port, LogFun, Parent) ->$/;"	f	module:mysql_recv
init_prepares	src/mysql/emysql/emysql_worker.erl	/^init_prepares([], _) -> ok;$/;"	f	module:emysql_worker
init_prepares	src/mysql/emysql/emysql_worker.erl	/^init_prepares([{StmtName, Statement} | Prepares], Pool) ->$/;"	f	module:emysql_worker
initialize_pools	src/mysql/emysql/emysql_conn_mgr.erl	/^initialize_pools() ->$/;"	f	module:emysql_conn_mgr
insert	deps/mysql/db_util.erl	/^insert(Table,Fields) ->$/;"	f	module:db_util
insert	src/mysql/db_util.erl	/^insert(Table,Fields) ->$/;"	f	module:db_util
insert	src/mysql/emysql/edb_util.erl	/^insert(Table,Fields) ->$/;"	f	module:db_util
insert_id	src/mysql/emysql/emysql.erl	/^insert_id(#ok_packet{insert_id=ID}) ->$/;"	f	module:emysql
insert_id	src/mysql/emysql/emysql_util.erl	/^insert_id(P) -> emysql:insert_id(P).$/;"	f	module:emysql_util
insert_record_attribute	deps/lager-master/src/lager_transform.erl	/^insert_record_attribute(AST) ->$/;"	f	module:lager_transform
insert_record_attribute	src/lager/lager_transform.erl	/^insert_record_attribute(AST) ->$/;"	f	module:lager_transform
install_handler	deps/lager-master/src/lager_handler_watcher.erl	/^install_handler(Event, Module, Config) ->$/;"	f	module:lager_handler_watcher
install_handler	src/lager/lager_handler_watcher.erl	/^install_handler(Event, Module, Config) ->$/;"	f	module:lager_handler_watcher
iolist_printing_test	deps/lager-master/src/lager_trunc_io.erl	/^iolist_printing_test() ->$/;"	f	module:lager_trunc_io
iolist_printing_test	src/lager/lager_trunc_io.erl	/^iolist_printing_test() ->$/;"	f	module:lager_trunc_io
is_auto_reload	myfile/reloader.erl	/^is_auto_reload() ->$/;"	f	module:reloader
is_loggable	deps/lager-master/src/lager_util.erl	/^is_loggable(Msg ,SeverityThreshold,MyName) ->$/;"	f	module:lager_util
is_loggable	deps/lager-master/src/lager_util.erl	/^is_loggable(Msg, {mask, Mask}, MyName) ->$/;"	f	module:lager_util
is_loggable	src/lager/lager_util.erl	/^is_loggable(Msg ,SeverityThreshold,MyName) ->$/;"	f	module:lager_util
is_loggable	src/lager/lager_util.erl	/^is_loggable(Msg, {mask, Mask}, MyName) ->$/;"	f	module:lager_util
is_loggable_test_	deps/lager-master/src/lager_util.erl	/^is_loggable_test_() ->$/;"	f	module:lager_util
is_loggable_test_	src/lager/lager_util.erl	/^is_loggable_test_() ->$/;"	f	module:lager_util
is_my_error_report	deps/lager-master/src/lager_stdlib.erl	/^is_my_error_report(_)                   -> false.$/;"	f	module:lager_stdlib
is_my_error_report	deps/lager-master/src/lager_stdlib.erl	/^is_my_error_report(crash_report)        -> true;$/;"	f	module:lager_stdlib
is_my_error_report	deps/lager-master/src/lager_stdlib.erl	/^is_my_error_report(supervisor_report)   -> true;$/;"	f	module:lager_stdlib
is_my_error_report	src/lager/lager_stdlib.erl	/^is_my_error_report(_)                   -> false.$/;"	f	module:lager_stdlib
is_my_error_report	src/lager/lager_stdlib.erl	/^is_my_error_report(crash_report)        -> true;$/;"	f	module:lager_stdlib
is_my_error_report	src/lager/lager_stdlib.erl	/^is_my_error_report(supervisor_report)   -> true;$/;"	f	module:lager_stdlib
is_my_info_report	deps/lager-master/src/lager_stdlib.erl	/^is_my_info_report(_)         -> false.$/;"	f	module:lager_stdlib
is_my_info_report	deps/lager-master/src/lager_stdlib.erl	/^is_my_info_report(progress)  -> true;$/;"	f	module:lager_stdlib
is_my_info_report	src/lager/lager_stdlib.erl	/^is_my_info_report(_)         -> false.$/;"	f	module:lager_stdlib
is_my_info_report	src/lager/lager_stdlib.erl	/^is_my_info_report(progress)  -> true;$/;"	f	module:lager_stdlib
is_new_style_console_available	deps/lager-master/src/lager_console_backend.erl	/^is_new_style_console_available() ->$/;"	f	module:lager_console_backend
is_new_style_console_available	src/lager/lager_console_backend.erl	/^is_new_style_console_available() ->$/;"	f	module:lager_console_backend
is_only_comments	src/logger/dynamic_compile.erl	/^is_only_comments(Text) -> is_only_comments(Text, not_in_comment).$/;"	f	module:dynamic_compile
is_only_comments	src/logger/dynamic_compile.erl	/^is_only_comments([$   |T], not_in_comment) -> is_only_comments(T, not_in_comment); % skipping whitspace outside of comment$/;"	f	module:dynamic_compile
is_only_comments	src/logger/dynamic_compile.erl	/^is_only_comments([$%  |T], not_in_comment) -> is_only_comments(T, in_comment);     % found start of a comment$/;"	f	module:dynamic_compile
is_only_comments	src/logger/dynamic_compile.erl	/^is_only_comments([$\\n |T], in_comment)     -> is_only_comments(T, not_in_comment); % found end of a comment$/;"	f	module:dynamic_compile
is_only_comments	src/logger/dynamic_compile.erl	/^is_only_comments([$\\n |T], not_in_comment) -> is_only_comments(T, not_in_comment); % skipping whitspace outside of comment$/;"	f	module:dynamic_compile
is_only_comments	src/logger/dynamic_compile.erl	/^is_only_comments([$\\t |T], not_in_comment) -> is_only_comments(T, not_in_comment); % skipping whitspace outside of comment$/;"	f	module:dynamic_compile
is_only_comments	src/logger/dynamic_compile.erl	/^is_only_comments([],       _)              -> true;$/;"	f	module:dynamic_compile
is_only_comments	src/logger/dynamic_compile.erl	/^is_only_comments([_   |T], in_comment)     -> is_only_comments(T, in_comment).     % skipping over in-comment chars$/;"	f	module:dynamic_compile
is_only_comments	src/logger/dynamic_compile.erl	/^is_only_comments(_,        not_in_comment) -> false;$/;"	f	module:dynamic_compile
is_op	deps/lager-master/src/lager_stdlib.erl	/^is_op(ForMForFun, A) ->$/;"	f	module:lager_stdlib
is_op	src/lager/lager_stdlib.erl	/^is_op(ForMForFun, A) ->$/;"	f	module:lager_stdlib
is_record_known	deps/lager-master/src/lager.erl	/^is_record_known(Record, Module) -> $/;"	f	module:lager
is_record_known	src/lager/lager.erl	/^is_record_known(Record, Module) -> $/;"	f	module:lager
is_stacktrace	deps/lager-master/src/lager_stdlib.erl	/^is_stacktrace([]) ->$/;"	f	module:lager_stdlib
is_stacktrace	deps/lager-master/src/lager_stdlib.erl	/^is_stacktrace([{M,F,As}|Fs]) when is_atom(M), is_atom(F), length(As) >= 0 ->$/;"	f	module:lager_stdlib
is_stacktrace	deps/lager-master/src/lager_stdlib.erl	/^is_stacktrace([{M,F,A}|Fs]) when is_atom(M), is_atom(F), is_integer(A) ->$/;"	f	module:lager_stdlib
is_stacktrace	deps/lager-master/src/lager_stdlib.erl	/^is_stacktrace(_) ->$/;"	f	module:lager_stdlib
is_stacktrace	src/lager/lager_stdlib.erl	/^is_stacktrace([]) ->$/;"	f	module:lager_stdlib
is_stacktrace	src/lager/lager_stdlib.erl	/^is_stacktrace([{M,F,As}|Fs]) when is_atom(M), is_atom(F), length(As) >= 0 ->$/;"	f	module:lager_stdlib
is_stacktrace	src/lager/lager_stdlib.erl	/^is_stacktrace([{M,F,A}|Fs]) when is_atom(M), is_atom(F), is_integer(A) ->$/;"	f	module:lager_stdlib
is_stacktrace	src/lager/lager_stdlib.erl	/^is_stacktrace(_) ->$/;"	f	module:lager_stdlib
join	src/mysql/emysql/emysql_conn.erl	/^join(L, Sep) -> join(L, Sep, []).$/;"	f	module:emysql_conn
join	src/mysql/emysql/emysql_conn.erl	/^join([H], _Sep, Acc)  -> lists:reverse([H|Acc]);$/;"	f	module:emysql_conn
join	src/mysql/emysql/emysql_conn.erl	/^join([H|T], Sep, Acc) -> join(T, Sep, [Sep, H|Acc]).$/;"	f	module:emysql_conn
join	src/mysql/emysql/emysql_conn.erl	/^join([], _Sep) -> [];$/;"	f	module:emysql_conn
json_val	src/mysql/emysql/emysql_conv.erl	/^json_val(Value) ->$/;"	f	module:emysql_conv
json_val	src/mysql/emysql/emysql_conv.erl	/^json_val(undefined) ->$/;"	f	module:emysql_conv
json_val	src/mysql/emysql/emysql_conv.erl	/^json_val({date,{Year,Month,Day}}) ->$/;"	f	module:emysql_conv
json_val	src/mysql/emysql/emysql_conv.erl	/^json_val({datetime,{ {Year,Month,Day}, {Hour,Min,Sec} }}) ->$/;"	f	module:emysql_conv
lager	deps/lager-master/src/lager.erl	/^-module(lager).$/;"	m
lager	src/lager/lager.erl	/^-module(lager).$/;"	m
lager_app	deps/lager-master/src/lager_app.erl	/^-module(lager_app).$/;"	m
lager_app	src/lager/lager_app.erl	/^-module(lager_app).$/;"	m
lager_backend_throttle	deps/lager-master/src/lager_backend_throttle.erl	/^-module(lager_backend_throttle).$/;"	m
lager_backend_throttle	src/lager/lager_backend_throttle.erl	/^-module(lager_backend_throttle).$/;"	m
lager_common_test_backend	deps/lager-master/src/lager_common_test_backend.erl	/^-module(lager_common_test_backend).$/;"	m
lager_common_test_backend	src/lager/lager_common_test_backend.erl	/^-module(lager_common_test_backend).$/;"	m
lager_config	deps/lager-master/src/lager_config.erl	/^-module(lager_config).$/;"	m
lager_config	src/lager/lager_config.erl	/^-module(lager_config).$/;"	m
lager_console_backend	deps/lager-master/src/lager_console_backend.erl	/^-module(lager_console_backend).$/;"	m
lager_console_backend	src/lager/lager_console_backend.erl	/^-module(lager_console_backend).$/;"	m
lager_crash_backend	deps/lager-master/test/lager_crash_backend.erl	/^-module(lager_crash_backend).$/;"	m
lager_crash_log	deps/lager-master/src/lager_crash_log.erl	/^-module(lager_crash_log).$/;"	m
lager_crash_log	src/lager/lager_crash_log.erl	/^-module(lager_crash_log).$/;"	m
lager_default_formatter	deps/lager-master/src/lager_default_formatter.erl	/^-module(lager_default_formatter).$/;"	m
lager_default_formatter	src/lager/lager_default_formatter.erl	/^-module(lager_default_formatter).$/;"	m
lager_file_backend	deps/lager-master/src/lager_file_backend.erl	/^-module(lager_file_backend).$/;"	m
lager_file_backend	src/lager/lager_file_backend.erl	/^-module(lager_file_backend).$/;"	m
lager_format	deps/lager-master/src/lager_format.erl	/^-module(lager_format).$/;"	m
lager_format	src/lager/lager_format.erl	/^-module(lager_format).$/;"	m
lager_handler_watcher	deps/lager-master/src/lager_handler_watcher.erl	/^-module(lager_handler_watcher).$/;"	m
lager_handler_watcher	src/lager/lager_handler_watcher.erl	/^-module(lager_handler_watcher).$/;"	m
lager_handler_watcher_sup	deps/lager-master/src/lager_handler_watcher_sup.erl	/^-module(lager_handler_watcher_sup).$/;"	m
lager_handler_watcher_sup	src/lager/lager_handler_watcher_sup.erl	/^-module(lager_handler_watcher_sup).$/;"	m
lager_msg	deps/lager-master/src/lager_msg.erl	/^-module(lager_msg).$/;"	m
lager_msg	deps/lager-master/src/lager_msg.erl	/^-record(lager_msg,{$/;"	r
lager_msg	src/lager/lager_msg.erl	/^-module(lager_msg).$/;"	m
lager_msg	src/lager/lager_msg.erl	/^-record(lager_msg,{$/;"	r
lager_stdlib	deps/lager-master/src/lager_stdlib.erl	/^-module(lager_stdlib).$/;"	m
lager_stdlib	src/lager/lager_stdlib.erl	/^-module(lager_stdlib).$/;"	m
lager_sup	deps/lager-master/src/lager_sup.erl	/^-module(lager_sup).$/;"	m
lager_sup	src/lager/lager_sup.erl	/^-module(lager_sup).$/;"	m
lager_test_	deps/lager-master/test/lager_test_backend.erl	/^lager_test_() ->$/;"	f	module:lager_test_backend
lager_test_backend	deps/lager-master/test/lager_test_backend.erl	/^-module(lager_test_backend).$/;"	m
lager_transform	deps/lager-master/src/lager_transform.erl	/^-module(lager_transform).$/;"	m
lager_transform	src/lager/lager_transform.erl	/^-module(lager_transform).$/;"	m
lager_trunc_io	deps/lager-master/src/lager_trunc_io.erl	/^-module(lager_trunc_io).$/;"	m
lager_trunc_io	src/lager/lager_trunc_io.erl	/^-module(lager_trunc_io).$/;"	m
lager_util	deps/lager-master/src/lager_util.erl	/^-module(lager_util).$/;"	m
lager_util	src/lager/lager_util.erl	/^-module(lager_util).$/;"	m
lcb	src/mysql/emysql/emysql_tcp.erl	/^lcb(<< 252:8, Value:16\/little, Rest\/bits >>) -> {Value, Rest};$/;"	f	module:emysql_tcp
lcb	src/mysql/emysql/emysql_tcp.erl	/^lcb(<< 253:8, Value:24\/little, Rest\/bits >>) -> {Value, Rest};$/;"	f	module:emysql_tcp
lcb	src/mysql/emysql/emysql_tcp.erl	/^lcb(<< 254:8, Value:64\/little, Rest\/bits >>) -> {Value, Rest}.$/;"	f	module:emysql_tcp
lcb	src/mysql/emysql/emysql_tcp.erl	/^lcb(<< Value:8, Rest\/bits >>) when Value =< 250 -> {Value, Rest};$/;"	f	module:emysql_tcp
lcb	src/mysql/emysql/emysql_tcp.erl	/^lcb(<<>>) -> {<<>>, <<>>}; % This clause should be removed when we have control$/;"	f	module:emysql_tcp
lcs	src/mysql/emysql/emysql_tcp.erl	/^lcs(<< 251:8, Rest\/bits >>) -> {undefined, Rest};$/;"	f	module:emysql_tcp
lcs	src/mysql/emysql/emysql_tcp.erl	/^lcs(Bin) ->$/;"	f	module:emysql_tcp
level_to_atom	deps/lager-master/src/lager_util.erl	/^level_to_atom(String) ->$/;"	f	module:lager_util
level_to_atom	src/lager/lager_util.erl	/^level_to_atom(String) ->$/;"	f	module:lager_util
level_to_integer	src/logger/loglevel.erl	/^level_to_integer(Level) ->$/;"	f	module:loglevel
level_to_num	deps/lager-master/src/lager_util.erl	/^level_to_num(alert)     -> ?ALERT;$/;"	f	module:lager_util
level_to_num	deps/lager-master/src/lager_util.erl	/^level_to_num(critical)  -> ?CRITICAL;$/;"	f	module:lager_util
level_to_num	deps/lager-master/src/lager_util.erl	/^level_to_num(debug)     -> ?DEBUG;$/;"	f	module:lager_util
level_to_num	deps/lager-master/src/lager_util.erl	/^level_to_num(emergency) -> ?EMERGENCY;$/;"	f	module:lager_util
level_to_num	deps/lager-master/src/lager_util.erl	/^level_to_num(error)     -> ?ERROR;$/;"	f	module:lager_util
level_to_num	deps/lager-master/src/lager_util.erl	/^level_to_num(info)      -> ?INFO;$/;"	f	module:lager_util
level_to_num	deps/lager-master/src/lager_util.erl	/^level_to_num(none)      -> ?LOG_NONE.$/;"	f	module:lager_util
level_to_num	deps/lager-master/src/lager_util.erl	/^level_to_num(notice)    -> ?NOTICE;$/;"	f	module:lager_util
level_to_num	deps/lager-master/src/lager_util.erl	/^level_to_num(warning)   -> ?WARNING;$/;"	f	module:lager_util
level_to_num	src/lager/lager_util.erl	/^level_to_num(alert)     -> ?ALERT;$/;"	f	module:lager_util
level_to_num	src/lager/lager_util.erl	/^level_to_num(critical)  -> ?CRITICAL;$/;"	f	module:lager_util
level_to_num	src/lager/lager_util.erl	/^level_to_num(debug)     -> ?DEBUG;$/;"	f	module:lager_util
level_to_num	src/lager/lager_util.erl	/^level_to_num(emergency) -> ?EMERGENCY;$/;"	f	module:lager_util
level_to_num	src/lager/lager_util.erl	/^level_to_num(error)     -> ?ERROR;$/;"	f	module:lager_util
level_to_num	src/lager/lager_util.erl	/^level_to_num(info)      -> ?INFO;$/;"	f	module:lager_util
level_to_num	src/lager/lager_util.erl	/^level_to_num(none)      -> ?LOG_NONE.$/;"	f	module:lager_util
level_to_num	src/lager/lager_util.erl	/^level_to_num(notice)    -> ?NOTICE;$/;"	f	module:lager_util
level_to_num	src/lager/lager_util.erl	/^level_to_num(warning)   -> ?WARNING;$/;"	f	module:lager_util
levels	deps/lager-master/src/lager_util.erl	/^levels() ->$/;"	f	module:lager_util
levels	src/lager/lager_util.erl	/^levels() ->$/;"	f	module:lager_util
lib_format_exception	deps/lager-master/src/lager_stdlib.erl	/^lib_format_exception(I, Class, Reason, StackTrace, StackFun, FormatFun) $/;"	f	module:lager_stdlib
lib_format_exception	src/lager/lager_stdlib.erl	/^lib_format_exception(I, Class, Reason, StackTrace, StackFun, FormatFun) $/;"	f	module:lager_stdlib
limited_fmt	deps/lager-master/src/lager_crash_log.erl	/^limited_fmt(Fmt, Args, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
limited_fmt	src/lager/lager_crash_log.erl	/^limited_fmt(Fmt, Args, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
limited_str	deps/lager-master/src/lager_crash_log.erl	/^limited_str(Term, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
limited_str	src/lager/lager_crash_log.erl	/^limited_str(Term, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
list	src/misc/global_data_disk.erl	/^list() ->$/;"	f	module:global_data_disk
list	src/misc/global_data_ram.erl	/^list() ->$/;"	f	module:global_data_ram
list	src/misc/wg_dynamic_config.erl	/^list(Mod) ->$/;"	f	module:wg_dynamic_config
list_body	deps/lager-master/src/lager_trunc_io.erl	/^list_body(X, Max, Options, _Tuple) ->  %% improper list$/;"	f	module:lager_trunc_io
list_body	deps/lager-master/src/lager_trunc_io.erl	/^list_body([H], Max, Options=#print_options{depth=1}, _Tuple) ->$/;"	f	module:lager_trunc_io
list_body	deps/lager-master/src/lager_trunc_io.erl	/^list_body([H|T], Max, Options, Tuple) -> $/;"	f	module:lager_trunc_io
list_body	deps/lager-master/src/lager_trunc_io.erl	/^list_body([H|_], Max, Options=#print_options{depth=1}, Tuple) ->$/;"	f	module:lager_trunc_io
list_body	deps/lager-master/src/lager_trunc_io.erl	/^list_body([], _Max, _Options, _Tuple) -> {[], 0};$/;"	f	module:lager_trunc_io
list_body	deps/lager-master/src/lager_trunc_io.erl	/^list_body(_, Max, _Options, _Tuple) when Max < 4 -> {"...", 3};$/;"	f	module:lager_trunc_io
list_body	deps/lager-master/src/lager_trunc_io.erl	/^list_body(_, _Max, #print_options{depth=0}, _Tuple) -> {"...", 3};$/;"	f	module:lager_trunc_io
list_body	src/lager/lager_trunc_io.erl	/^list_body(X, Max, Options, _Tuple) ->  %% improper list$/;"	f	module:lager_trunc_io
list_body	src/lager/lager_trunc_io.erl	/^list_body([H], Max, Options=#print_options{depth=1}, _Tuple) ->$/;"	f	module:lager_trunc_io
list_body	src/lager/lager_trunc_io.erl	/^list_body([H|T], Max, Options, Tuple) -> $/;"	f	module:lager_trunc_io
list_body	src/lager/lager_trunc_io.erl	/^list_body([H|_], Max, Options=#print_options{depth=1}, Tuple) ->$/;"	f	module:lager_trunc_io
list_body	src/lager/lager_trunc_io.erl	/^list_body([], _Max, _Options, _Tuple) -> {[], 0};$/;"	f	module:lager_trunc_io
list_body	src/lager/lager_trunc_io.erl	/^list_body(_, Max, _Options, _Tuple) when Max < 4 -> {"...", 3};$/;"	f	module:lager_trunc_io
list_body	src/lager/lager_trunc_io.erl	/^list_body(_, _Max, #print_options{depth=0}, _Tuple) -> {"...", 3};$/;"	f	module:lager_trunc_io
list_bodyc	deps/lager-master/src/lager_trunc_io.erl	/^list_bodyc(X, Max, Options, _Tuple) ->  %% improper list$/;"	f	module:lager_trunc_io
list_bodyc	deps/lager-master/src/lager_trunc_io.erl	/^list_bodyc([H|T], Max, #print_options{depth=Depth} = Options, Tuple) -> $/;"	f	module:lager_trunc_io
list_bodyc	deps/lager-master/src/lager_trunc_io.erl	/^list_bodyc([], _Max, _Options, _Tuple) -> {[], 0};$/;"	f	module:lager_trunc_io
list_bodyc	deps/lager-master/src/lager_trunc_io.erl	/^list_bodyc(_, Max, _Options, _Tuple) when Max < 5 -> {",...", 4};$/;"	f	module:lager_trunc_io
list_bodyc	deps/lager-master/src/lager_trunc_io.erl	/^list_bodyc(_, _Max, #print_options{depth=1}, false) -> {"|...", 4};$/;"	f	module:lager_trunc_io
list_bodyc	deps/lager-master/src/lager_trunc_io.erl	/^list_bodyc(_, _Max, #print_options{depth=1}, true) -> {",...", 4};$/;"	f	module:lager_trunc_io
list_bodyc	src/lager/lager_trunc_io.erl	/^list_bodyc(X, Max, Options, _Tuple) ->  %% improper list$/;"	f	module:lager_trunc_io
list_bodyc	src/lager/lager_trunc_io.erl	/^list_bodyc([H|T], Max, #print_options{depth=Depth} = Options, Tuple) -> $/;"	f	module:lager_trunc_io
list_bodyc	src/lager/lager_trunc_io.erl	/^list_bodyc([], _Max, _Options, _Tuple) -> {[], 0};$/;"	f	module:lager_trunc_io
list_bodyc	src/lager/lager_trunc_io.erl	/^list_bodyc(_, Max, _Options, _Tuple) when Max < 5 -> {",...", 4};$/;"	f	module:lager_trunc_io
list_bodyc	src/lager/lager_trunc_io.erl	/^list_bodyc(_, _Max, #print_options{depth=1}, false) -> {"|...", 4};$/;"	f	module:lager_trunc_io
list_bodyc	src/lager/lager_trunc_io.erl	/^list_bodyc(_, _Max, #print_options{depth=1}, true) -> {",...", 4};$/;"	f	module:lager_trunc_io
list_config	src/misc/game_config.erl	/^list_config() ->$/;"	f	module:game_config
list_printing_test	deps/lager-master/src/lager_trunc_io.erl	/^list_printing_test() ->$/;"	f	module:lager_trunc_io
list_printing_test	src/lager/lager_trunc_io.erl	/^list_printing_test() ->$/;"	f	module:lager_trunc_io
load_game_config	src/misc/game_config.erl	/^load_game_config() ->$/;"	f	module:game_config
load_opt	myfile/mmake.erl	/^load_opt(Opts) ->$/;"	f	module:mmake
load_opt	src/misc/mmake.erl	/^load_opt(Opts) ->$/;"	f	module:mmake
localtime_ms	deps/lager-master/src/lager_util.erl	/^localtime_ms() ->$/;"	f	module:lager_util
localtime_ms	deps/lager-master/src/lager_util.erl	/^localtime_ms(Now) ->$/;"	f	module:lager_util
localtime_ms	src/lager/lager_util.erl	/^localtime_ms() ->$/;"	f	module:lager_util
localtime_ms	src/lager/lager_util.erl	/^localtime_ms(Now) ->$/;"	f	module:lager_util
lock_connection	src/mysql/emysql/emysql_conn_mgr.erl	/^lock_connection(PoolId)->$/;"	f	module:emysql_conn_mgr
lock_next_connection	src/mysql/emysql/emysql_conn_mgr.erl	/^lock_next_connection(Available ,Locked, Who) ->$/;"	f	module:emysql_conn_mgr
lock_next_connection	src/mysql/emysql/emysql_conn_mgr.erl	/^lock_next_connection(Pool, Who) ->$/;"	f	module:emysql_conn_mgr
lock_timeout	src/mysql/emysql/emysql_app.erl	/^lock_timeout() ->$/;"	f	module:emysql_app
lock_timeout	src/mysql/emysql/emysql_conn_mgr.erl	/^lock_timeout() ->$/;"	f	module:emysql_conn_mgr
log	deps/lager-master/src/lager.erl	/^log(Level, Metadata, Format, Args) when is_list(Metadata) ->$/;"	f	module:lager
log	deps/lager-master/src/lager.erl	/^log(Level, Metadata, Message) when is_list(Metadata) ->$/;"	f	module:lager
log	deps/lager-master/src/lager.erl	/^log(Level, Pid, Format, Args) when is_pid(Pid); is_atom(Pid) ->$/;"	f	module:lager
log	deps/lager-master/src/lager.erl	/^log(Level, Pid, Message) when is_pid(Pid); is_atom(Pid) ->$/;"	f	module:lager
log	deps/mysql/mysql.erl	/^log(Module, Line, _Level, FormatFun) ->$/;"	f	module:mysql
log	src/lager/lager.erl	/^log(Level, Metadata, Format, Args) when is_list(Metadata) ->$/;"	f	module:lager
log	src/lager/lager.erl	/^log(Level, Metadata, Message) when is_list(Metadata) ->$/;"	f	module:lager
log	src/lager/lager.erl	/^log(Level, Pid, Format, Args) when is_pid(Pid); is_atom(Pid) ->$/;"	f	module:lager
log	src/lager/lager.erl	/^log(Level, Pid, Message) when is_pid(Pid); is_atom(Pid) ->$/;"	f	module:lager
log	src/mysql/mysql.erl	/^log(Module, Line, _Level, FormatFun) ->$/;"	f	module:mysql
log_event	deps/lager-master/src/error_logger_lager_h.erl	/^log_event(Event, State) ->$/;"	f	module:error_logger_lager_h
log_event	src/lager/error_logger_lager_h.erl	/^log_event(Event, State) ->$/;"	f	module:error_logger_lager_h
log_filename	src/misc/util.erl	/^log_filename(BaseDir) ->$/;"	f	module:util
log_filename	src/misc/util.erl	/^log_filename(FilePrefix, FileSuffix) ->$/;"	f	module:util
log_warnings	src/mysql/emysql/emysql_conn.erl	/^log_warnings(Socket, #ok_packet{warning_count = WarningCount}) when WarningCount > 0 ->$/;"	f	module:emysql_conn
log_warnings	src/mysql/emysql/emysql_conn.erl	/^log_warnings(_Sock, _OtherPacket) ->$/;"	f	module:emysql_conn
logger_h	src/logger/logger_h.erl	/^-module(logger_h).$/;"	m
logger_src	src/logger/loglevel.erl	/^logger_src(Loglevel) ->$/;"	f	module:loglevel
loglevel	src/logger/loglevel.erl	/^-module(loglevel).$/;"	m
lookup	src/mysql/emysql/emysql_statements.erl	/^lookup(Key, Tree) ->$/;"	f	module:emysql_statements
loop	deps/lager-master/test/special_process.erl	/^loop() ->$/;"	f	module:special_process
loop	deps/mysql/mysql_conn.erl	/^loop(State) ->$/;"	f	module:mysql_conn
loop	deps/mysql/mysql_recv.erl	/^loop(State) ->$/;"	f	module:mysql_recv
loop	src/mysql/mysql_conn.erl	/^loop(State) ->$/;"	f	module:mysql_conn
loop	src/mysql/mysql_recv.erl	/^loop(State) ->$/;"	f	module:mysql_recv
lowercase	deps/lager-master/src/lager_format.erl	/^lowercase([H|T]) ->$/;"	f	module:lager_format
lowercase	deps/lager-master/src/lager_format.erl	/^lowercase([H|T]) when is_integer(H), H >= $A, H =< $Z ->$/;"	f	module:lager_format
lowercase	deps/lager-master/src/lager_format.erl	/^lowercase([]) ->$/;"	f	module:lager_format
lowercase	src/lager/lager_format.erl	/^lowercase([H|T]) ->$/;"	f	module:lager_format
lowercase	src/lager/lager_format.erl	/^lowercase([H|T]) when is_integer(H), H >= $A, H =< $Z ->$/;"	f	module:lager_format
lowercase	src/lager/lager_format.erl	/^lowercase([]) ->$/;"	f	module:lager_format
macro_body_def	src/logger/dynamic_compile.erl	/^macro_body_def([Tok|Toks], RevMacroBodyToks) ->$/;"	f	module:dynamic_compile
macro_body_def	src/logger/dynamic_compile.erl	/^macro_body_def([{')',_}, {dot,_}], RevMacroBodyToks) ->$/;"	f	module:dynamic_compile
macro_params_body_def	src/logger/dynamic_compile.erl	/^macro_params_body_def([{')',_},{',',_} | Toks], RevParams) ->$/;"	f	module:dynamic_compile
macro_params_body_def	src/logger/dynamic_compile.erl	/^macro_params_body_def([{',',_}, {var,_,Param} | Toks], RevParams) ->$/;"	f	module:dynamic_compile
macro_params_body_def	src/logger/dynamic_compile.erl	/^macro_params_body_def([{var,_,Param} | Toks], RevParams) ->$/;"	f	module:dynamic_compile
main	src/kernel/main.erl	/^-module(main).$/;"	m
make_auth	deps/mysql/mysql_auth.erl	/^make_auth(User, Password) ->$/;"	f	module:mysql_auth
make_auth	src/mysql/mysql_auth.erl	/^make_auth(User, Password) ->$/;"	f	module:mysql_auth
make_fields_sql	deps/mysql/db_util.erl	/^make_fields_sql(Fields) ->$/;"	f	module:db_util
make_fields_sql	deps/mysql/db_util.erl	/^make_fields_sql([H | T],Join,FieldsSql)->$/;"	f	module:db_util
make_fields_sql	deps/mysql/db_util.erl	/^make_fields_sql([],_Jion,FieldsSql) ->$/;"	f	module:db_util
make_fields_sql	src/mysql/db_util.erl	/^make_fields_sql(Fields) ->$/;"	f	module:db_util
make_fields_sql	src/mysql/db_util.erl	/^make_fields_sql([H | T],Join,FieldsSql)->$/;"	f	module:db_util
make_fields_sql	src/mysql/db_util.erl	/^make_fields_sql([],_Jion,FieldsSql) ->$/;"	f	module:db_util
make_fields_sql	src/mysql/emysql/edb_util.erl	/^make_fields_sql(Fields) ->$/;"	f	module:db_util
make_fields_sql	src/mysql/emysql/edb_util.erl	/^make_fields_sql([H | T],Join,FieldsSql)->$/;"	f	module:db_util
make_fields_sql	src/mysql/emysql/edb_util.erl	/^make_fields_sql([],_Jion,FieldsSql) ->$/;"	f	module:db_util
make_limit_sql	deps/mysql/db_util.erl	/^make_limit_sql(Num) when erlang:is_integer(Num) ->$/;"	f	module:db_util
make_limit_sql	deps/mysql/db_util.erl	/^make_limit_sql([Start,Num])->$/;"	f	module:db_util
make_limit_sql	deps/mysql/db_util.erl	/^make_limit_sql([])->$/;"	f	module:db_util
make_limit_sql	src/mysql/db_util.erl	/^make_limit_sql(Num) when erlang:is_integer(Num) ->$/;"	f	module:db_util
make_limit_sql	src/mysql/db_util.erl	/^make_limit_sql([Start,Num])->$/;"	f	module:db_util
make_limit_sql	src/mysql/db_util.erl	/^make_limit_sql([])->$/;"	f	module:db_util
make_limit_sql	src/mysql/emysql/edb_util.erl	/^make_limit_sql(Num) when erlang:is_integer(Num) ->$/;"	f	module:db_util
make_limit_sql	src/mysql/emysql/edb_util.erl	/^make_limit_sql([Start,Num])->$/;"	f	module:db_util
make_limit_sql	src/mysql/emysql/edb_util.erl	/^make_limit_sql([])->$/;"	f	module:db_util
make_new_auth	deps/mysql/mysql_auth.erl	/^make_new_auth(User, Password, Database) ->$/;"	f	module:mysql_auth
make_new_auth	src/mysql/mysql_auth.erl	/^make_new_auth(User, Password, Database) ->$/;"	f	module:mysql_auth
make_options	deps/lager-master/src/lager_format.erl	/^make_options([], Options) ->$/;"	f	module:lager_format
make_options	deps/lager-master/src/lager_format.erl	/^make_options([{chomp, Bool}|T], Options) when is_boolean(Bool) ->$/;"	f	module:lager_format
make_options	src/lager/lager_format.erl	/^make_options([], Options) ->$/;"	f	module:lager_format
make_options	src/lager/lager_format.erl	/^make_options([{chomp, Bool}|T], Options) when is_boolean(Bool) ->$/;"	f	module:lager_format
make_order_sql	deps/mysql/db_util.erl	/^make_order_sql(Fields)->$/;"	f	module:db_util
make_order_sql	deps/mysql/db_util.erl	/^make_order_sql([H | T],Join,OrderSql)->$/;"	f	module:db_util
make_order_sql	deps/mysql/db_util.erl	/^make_order_sql([],_Join,OrderSql)->$/;"	f	module:db_util
make_order_sql	src/mysql/db_util.erl	/^make_order_sql(Fields)->$/;"	f	module:db_util
make_order_sql	src/mysql/db_util.erl	/^make_order_sql([H | T],Join,OrderSql)->$/;"	f	module:db_util
make_order_sql	src/mysql/db_util.erl	/^make_order_sql([],_Join,OrderSql)->$/;"	f	module:db_util
make_order_sql	src/mysql/emysql/edb_util.erl	/^make_order_sql(Fields)->$/;"	f	module:db_util
make_order_sql	src/mysql/emysql/edb_util.erl	/^make_order_sql([H | T],Join,OrderSql)->$/;"	f	module:db_util
make_order_sql	src/mysql/emysql/edb_util.erl	/^make_order_sql([],_Join,OrderSql)->$/;"	f	module:db_util
make_printable	deps/lager-master/src/lager_default_formatter.erl	/^make_printable(A) when is_atom(A) -> atom_to_list(A);$/;"	f	module:lager_default_formatter
make_printable	deps/lager-master/src/lager_default_formatter.erl	/^make_printable(L) when is_list(L) orelse is_binary(L) -> L; $/;"	f	module:lager_default_formatter
make_printable	deps/lager-master/src/lager_default_formatter.erl	/^make_printable(Other) -> io_lib:format("~p",[Other]).$/;"	f	module:lager_default_formatter
make_printable	deps/lager-master/src/lager_default_formatter.erl	/^make_printable(P) when is_pid(P) -> pid_to_list(P);$/;"	f	module:lager_default_formatter
make_printable	src/lager/lager_default_formatter.erl	/^make_printable(A) when is_atom(A) -> atom_to_list(A);$/;"	f	module:lager_default_formatter
make_printable	src/lager/lager_default_formatter.erl	/^make_printable(L) when is_list(L) orelse is_binary(L) -> L; $/;"	f	module:lager_default_formatter
make_printable	src/lager/lager_default_formatter.erl	/^make_printable(Other) -> io_lib:format("~p",[Other]).$/;"	f	module:lager_default_formatter
make_printable	src/lager/lager_default_formatter.erl	/^make_printable(P) when is_pid(P) -> pid_to_list(P);$/;"	f	module:lager_default_formatter
make_query_sql	deps/mysql/db_util.erl	/^make_query_sql(Table,Fields,WhereFields)->$/;"	f	module:db_util
make_query_sql	deps/mysql/db_util.erl	/^make_query_sql(Table,Fields,WhereFields,OrderFields,Limit)->$/;"	f	module:db_util
make_query_sql	src/mysql/db_util.erl	/^make_query_sql(Table,Fields,WhereFields)->$/;"	f	module:db_util
make_query_sql	src/mysql/db_util.erl	/^make_query_sql(Table,Fields,WhereFields,OrderFields,Limit)->$/;"	f	module:db_util
make_query_sql	src/mysql/emysql/edb_util.erl	/^make_query_sql(Table,Fields,WhereFields)->$/;"	f	module:db_util
make_query_sql	src/mysql/emysql/edb_util.erl	/^make_query_sql(Table,Fields,WhereFields,OrderFields,Limit)->$/;"	f	module:db_util
make_statements_for_execute	deps/mysql/mysql_conn.erl	/^make_statements_for_execute(Name, Params) ->$/;"	f	module:mysql_conn
make_statements_for_execute	deps/mysql/mysql_conn.erl	/^make_statements_for_execute(Name, []) ->$/;"	f	module:mysql_conn
make_statements_for_execute	src/mysql/mysql_conn.erl	/^make_statements_for_execute(Name, Params) ->$/;"	f	module:mysql_conn
make_statements_for_execute	src/mysql/mysql_conn.erl	/^make_statements_for_execute(Name, []) ->$/;"	f	module:mysql_conn
make_update_sql	deps/mysql/db_util.erl	/^make_update_sql(Fields) ->$/;"	f	module:db_util
make_update_sql	deps/mysql/db_util.erl	/^make_update_sql([],_Join,UpdateSql)->$/;"	f	module:db_util
make_update_sql	deps/mysql/db_util.erl	/^make_update_sql([{Field,Val} | T],Join,UpdateSql) ->$/;"	f	module:db_util
make_update_sql	src/mysql/db_util.erl	/^make_update_sql(Fields) ->$/;"	f	module:db_util
make_update_sql	src/mysql/db_util.erl	/^make_update_sql([],_Join,UpdateSql)->$/;"	f	module:db_util
make_update_sql	src/mysql/db_util.erl	/^make_update_sql([{Field,Val} | T],Join,UpdateSql) ->$/;"	f	module:db_util
make_update_sql	src/mysql/emysql/edb_util.erl	/^make_update_sql(Fields) ->$/;"	f	module:db_util
make_update_sql	src/mysql/emysql/edb_util.erl	/^make_update_sql([],_Join,UpdateSql)->$/;"	f	module:db_util
make_update_sql	src/mysql/emysql/edb_util.erl	/^make_update_sql([{Field,Val} | T],Join,UpdateSql) ->$/;"	f	module:db_util
make_value_sql	deps/mysql/db_util.erl	/^make_value_sql(Value) ->$/;"	f	module:db_util
make_value_sql	deps/mysql/db_util.erl	/^make_value_sql([H | T], ValueSql) ->$/;"	f	module:db_util
make_value_sql	deps/mysql/db_util.erl	/^make_value_sql([], ValueSql) ->$/;"	f	module:db_util
make_value_sql	src/mysql/db_util.erl	/^make_value_sql(Value) ->$/;"	f	module:db_util
make_value_sql	src/mysql/db_util.erl	/^make_value_sql([H | T], ValueSql) ->$/;"	f	module:db_util
make_value_sql	src/mysql/db_util.erl	/^make_value_sql([], ValueSql) ->$/;"	f	module:db_util
make_value_sql	src/mysql/emysql/edb_util.erl	/^make_value_sql(Value) ->$/;"	f	module:db_util
make_value_sql	src/mysql/emysql/edb_util.erl	/^make_value_sql([H | T], ValueSql) ->$/;"	f	module:db_util
make_value_sql	src/mysql/emysql/edb_util.erl	/^make_value_sql([], ValueSql) ->$/;"	f	module:db_util
make_varname	deps/lager-master/src/lager_transform.erl	/^make_varname(Prefix, Line) ->$/;"	f	module:lager_transform
make_varname	src/lager/lager_transform.erl	/^make_varname(Prefix, Line) ->$/;"	f	module:lager_transform
make_where_sql	deps/mysql/db_util.erl	/^make_where_sql(Fields) ->$/;"	f	module:db_util
make_where_sql	deps/mysql/db_util.erl	/^make_where_sql([H | T],Join,WhereSql) ->$/;"	f	module:db_util
make_where_sql	deps/mysql/db_util.erl	/^make_where_sql([],_Join,WhereSql) ->$/;"	f	module:db_util
make_where_sql	src/mysql/db_util.erl	/^make_where_sql(Fields) ->$/;"	f	module:db_util
make_where_sql	src/mysql/db_util.erl	/^make_where_sql([H | T],Join,WhereSql) ->$/;"	f	module:db_util
make_where_sql	src/mysql/db_util.erl	/^make_where_sql([],_Join,WhereSql) ->$/;"	f	module:db_util
make_where_sql	src/mysql/emysql/edb_util.erl	/^make_where_sql(Fields) ->$/;"	f	module:db_util
make_where_sql	src/mysql/emysql/edb_util.erl	/^make_where_sql([H | T],Join,WhereSql) ->$/;"	f	module:db_util
make_where_sql	src/mysql/emysql/edb_util.erl	/^make_where_sql([],_Join,WhereSql) ->$/;"	f	module:db_util
manage_applications	src/kernel/main.erl	/^manage_applications(Iterate, Do, UnDo, SkipError, ErrorTag, Apps) ->$/;"	f	module:main
map_body	deps/lager-master/src/lager_trunc_io.erl	/^map_body(Map, Max, #print_options{depth=Depth}) when Max < 4; Depth =:= 0 ->$/;"	f	module:lager_trunc_io
map_body	deps/lager-master/src/lager_trunc_io.erl	/^map_body(Map, Max, Options) ->$/;"	f	module:lager_trunc_io
map_body	src/lager/lager_trunc_io.erl	/^map_body(Map, Max, #print_options{depth=Depth}) when Max < 4; Depth =:= 0 ->$/;"	f	module:lager_trunc_io
map_body	src/lager/lager_trunc_io.erl	/^map_body(Map, Max, Options) ->$/;"	f	module:lager_trunc_io
map_bodyc	deps/lager-master/src/lager_trunc_io.erl	/^map_bodyc([], _Max, _Options) ->$/;"	f	module:lager_trunc_io
map_bodyc	deps/lager-master/src/lager_trunc_io.erl	/^map_bodyc([{Key, Value} | Rest], Max, Options) ->$/;"	f	module:lager_trunc_io
map_bodyc	deps/lager-master/src/lager_trunc_io.erl	/^map_bodyc(_Rest, Max,#print_options{depth=Depth}) when Max < 5; Depth =:= 0 ->$/;"	f	module:lager_trunc_io
map_bodyc	src/lager/lager_trunc_io.erl	/^map_bodyc([], _Max, _Options) ->$/;"	f	module:lager_trunc_io
map_bodyc	src/lager/lager_trunc_io.erl	/^map_bodyc([{Key, Value} | Rest], Max, Options) ->$/;"	f	module:lager_trunc_io
map_bodyc	src/lager/lager_trunc_io.erl	/^map_bodyc(_Rest, Max,#print_options{depth=Depth}) when Max < 5; Depth =:= 0 ->$/;"	f	module:lager_trunc_io
map_printing_test	deps/lager-master/src/lager_trunc_io.erl	/^map_printing_test() ->$/;"	f	module:lager_trunc_io
map_printing_test	src/lager/lager_trunc_io.erl	/^map_printing_test() ->$/;"	f	module:lager_trunc_io
mask_to_levels	deps/lager-master/src/lager_util.erl	/^mask_to_levels(Mask) ->$/;"	f	module:lager_util
mask_to_levels	deps/lager-master/src/lager_util.erl	/^mask_to_levels(Mask, [Level|Levels], Acc) ->$/;"	f	module:lager_util
mask_to_levels	deps/lager-master/src/lager_util.erl	/^mask_to_levels(_Mask, [], Acc) ->$/;"	f	module:lager_util
mask_to_levels	src/lager/lager_util.erl	/^mask_to_levels(Mask) ->$/;"	f	module:lager_util
mask_to_levels	src/lager/lager_util.erl	/^mask_to_levels(Mask, [Level|Levels], Acc) ->$/;"	f	module:lager_util
mask_to_levels	src/lager/lager_util.erl	/^mask_to_levels(_Mask, [], Acc) ->$/;"	f	module:lager_util
mask_to_levels_test	deps/lager-master/src/lager_util.erl	/^mask_to_levels_test() ->$/;"	f	module:lager_util
mask_to_levels_test	src/lager/lager_util.erl	/^mask_to_levels_test() ->$/;"	f	module:lager_util
maybe_flatten	deps/lager-master/src/lager_format.erl	/^maybe_flatten(X) ->$/;"	f	module:lager_format
maybe_flatten	deps/lager-master/src/lager_format.erl	/^maybe_flatten(X) when is_list(X) ->$/;"	f	module:lager_format
maybe_flatten	src/lager/lager_format.erl	/^maybe_flatten(X) ->$/;"	f	module:lager_format
maybe_flatten	src/lager/lager_format.erl	/^maybe_flatten(X) when is_list(X) ->$/;"	f	module:lager_format
maybe_make_handler_id	deps/lager-master/src/lager_app.erl	/^maybe_make_handler_id(Mod, Config) ->$/;"	f	module:lager_app
maybe_make_handler_id	src/lager/lager_app.erl	/^maybe_make_handler_id(Mod, Config) ->$/;"	f	module:lager_app
maybe_utc	deps/lager-master/src/lager_stdlib.erl	/^maybe_utc(Time) ->$/;"	f	module:lager_stdlib
maybe_utc	deps/lager-master/src/lager_util.erl	/^maybe_utc({Date, {H, M, S, Ms}}) ->$/;"	f	module:lager_util
maybe_utc	src/lager/lager_stdlib.erl	/^maybe_utc(Time) ->$/;"	f	module:lager_stdlib
maybe_utc	src/lager/lager_util.erl	/^maybe_utc({Date, {H, M, S, Ms}}) ->$/;"	f	module:lager_util
md	deps/lager-master/src/lager.erl	/^md() ->$/;"	f	module:lager
md	deps/lager-master/src/lager.erl	/^md(NewMD) when is_list(NewMD) ->$/;"	f	module:lager
md	deps/lager-master/src/lager.erl	/^md(_) ->$/;"	f	module:lager
md	src/lager/lager.erl	/^md() ->$/;"	f	module:lager
md	src/lager/lager.erl	/^md(NewMD) when is_list(NewMD) ->$/;"	f	module:lager
md	src/lager/lager.erl	/^md(_) ->$/;"	f	module:lager
members	myfile/mmake.erl	/^members([H|T],MakefileMods,I,Rest) ->$/;"	f	module:mmake
members	myfile/mmake.erl	/^members([],_MakefileMods,I,Rest) ->$/;"	f	module:mmake
members	src/misc/mmake.erl	/^members([H|T],MakefileMods,I,Rest) ->$/;"	f	module:mmake
members	src/misc/mmake.erl	/^members([],_MakefileMods,I,Rest) ->$/;"	f	module:mmake
message	deps/lager-master/src/lager_msg.erl	/^message(Msg) ->$/;"	f	module:lager_msg
message	src/lager/lager_msg.erl	/^message(Msg) ->$/;"	f	module:lager_msg
metadata	deps/lager-master/src/lager_msg.erl	/^metadata(Msg) ->$/;"	f	module:lager_msg
metadata	src/lager/lager_msg.erl	/^metadata(Msg) ->$/;"	f	module:lager_msg
mf_to_string	deps/lager-master/src/lager_stdlib.erl	/^mf_to_string(F, _A) ->$/;"	f	module:lager_stdlib
mf_to_string	deps/lager-master/src/lager_stdlib.erl	/^mf_to_string(Fun, _A) when is_function(Fun) ->$/;"	f	module:lager_stdlib
mf_to_string	deps/lager-master/src/lager_stdlib.erl	/^mf_to_string({M, F}, A) ->$/;"	f	module:lager_stdlib
mf_to_string	src/lager/lager_stdlib.erl	/^mf_to_string(F, _A) ->$/;"	f	module:lager_stdlib
mf_to_string	src/lager/lager_stdlib.erl	/^mf_to_string(Fun, _A) when is_function(Fun) ->$/;"	f	module:lager_stdlib
mf_to_string	src/lager/lager_stdlib.erl	/^mf_to_string({M, F}, A) ->$/;"	f	module:lager_stdlib
mfa_apply	src/mod/gen_server2.erl	/^mfa_apply(Pid,Mod,Fun,Args) ->$/;"	f	module:gen_server2
mfa_status	src/mod/gen_server2.erl	/^mfa_status(Pid,Mod,Fun,Args) ->$/;"	f	module:gen_server2
mfa_to_string	deps/lager-master/src/lager_stdlib.erl	/^mfa_to_string(M, F, A) ->$/;"	f	module:lager_stdlib
mfa_to_string	src/lager/lager_stdlib.erl	/^mfa_to_string(M, F, A) ->$/;"	f	module:lager_stdlib
minimum_loglevel	deps/lager-master/src/lager.erl	/^minimum_loglevel(Levels) ->$/;"	f	module:lager
minimum_loglevel	src/lager/lager.erl	/^minimum_loglevel(Levels) ->$/;"	f	module:lager
mmake	myfile/mmake.erl	/^-module(mmake).$/;"	m
mmake	src/misc/mmake.erl	/^-module(mmake).$/;"	m
mod_reader	src/mod/mod_reader.erl	/^-module(mod_reader).$/;"	m
monitor_work	src/mysql/emysql/emysql.erl	/^monitor_work(Connection0, Timeout, Args) when is_record(Connection0, emysql_connection) ->$/;"	f	module:emysql
month	deps/lager-master/src/lager_stdlib.erl	/^month(1) -> "Jan";$/;"	f	module:lager_stdlib
month	deps/lager-master/src/lager_stdlib.erl	/^month(10) -> "Oct";$/;"	f	module:lager_stdlib
month	deps/lager-master/src/lager_stdlib.erl	/^month(11) -> "Nov";$/;"	f	module:lager_stdlib
month	deps/lager-master/src/lager_stdlib.erl	/^month(12) -> "Dec".$/;"	f	module:lager_stdlib
month	deps/lager-master/src/lager_stdlib.erl	/^month(2) -> "Feb";$/;"	f	module:lager_stdlib
month	deps/lager-master/src/lager_stdlib.erl	/^month(3) -> "Mar";$/;"	f	module:lager_stdlib
month	deps/lager-master/src/lager_stdlib.erl	/^month(4) -> "Apr";$/;"	f	module:lager_stdlib
month	deps/lager-master/src/lager_stdlib.erl	/^month(5) -> "May";$/;"	f	module:lager_stdlib
month	deps/lager-master/src/lager_stdlib.erl	/^month(6) -> "Jun";$/;"	f	module:lager_stdlib
month	deps/lager-master/src/lager_stdlib.erl	/^month(7) -> "Jul";$/;"	f	module:lager_stdlib
month	deps/lager-master/src/lager_stdlib.erl	/^month(8) -> "Aug";$/;"	f	module:lager_stdlib
month	deps/lager-master/src/lager_stdlib.erl	/^month(9) -> "Sep";$/;"	f	module:lager_stdlib
month	src/lager/lager_stdlib.erl	/^month(1) -> "Jan";$/;"	f	module:lager_stdlib
month	src/lager/lager_stdlib.erl	/^month(10) -> "Oct";$/;"	f	module:lager_stdlib
month	src/lager/lager_stdlib.erl	/^month(11) -> "Nov";$/;"	f	module:lager_stdlib
month	src/lager/lager_stdlib.erl	/^month(12) -> "Dec".$/;"	f	module:lager_stdlib
month	src/lager/lager_stdlib.erl	/^month(2) -> "Feb";$/;"	f	module:lager_stdlib
month	src/lager/lager_stdlib.erl	/^month(3) -> "Mar";$/;"	f	module:lager_stdlib
month	src/lager/lager_stdlib.erl	/^month(4) -> "Apr";$/;"	f	module:lager_stdlib
month	src/lager/lager_stdlib.erl	/^month(5) -> "May";$/;"	f	module:lager_stdlib
month	src/lager/lager_stdlib.erl	/^month(6) -> "Jun";$/;"	f	module:lager_stdlib
month	src/lager/lager_stdlib.erl	/^month(7) -> "Jul";$/;"	f	module:lager_stdlib
month	src/lager/lager_stdlib.erl	/^month(8) -> "Aug";$/;"	f	module:lager_stdlib
month	src/lager/lager_stdlib.erl	/^month(9) -> "Sep";$/;"	f	module:lager_stdlib
mysql	deps/mysql/mysql.erl	/^-module(mysql).$/;"	m
mysql	src/mysql/mysql.erl	/^-module(mysql).$/;"	m
mysql_auth	deps/mysql/mysql_auth.erl	/^-module(mysql_auth).$/;"	m
mysql_auth	src/mysql/mysql_auth.erl	/^-module(mysql_auth).$/;"	m
mysql_conn	deps/mysql/mysql_conn.erl	/^-module(mysql_conn).$/;"	m
mysql_conn	src/mysql/mysql_conn.erl	/^-module(mysql_conn).$/;"	m
mysql_init	deps/mysql/mysql_conn.erl	/^mysql_init(Sock, RecvPid, User, Password, LogFun) ->$/;"	f	module:mysql_conn
mysql_init	src/mysql/mysql_conn.erl	/^mysql_init(Sock, RecvPid, User, Password, LogFun) ->$/;"	f	module:mysql_conn
mysql_recv	deps/mysql/mysql_recv.erl	/^-module(mysql_recv).$/;"	m
mysql_recv	src/mysql/mysql_recv.erl	/^-module(mysql_recv).$/;"	m
mysql_result	include/mysql.hrl	/^-record(mysql_result, {fieldinfo=[],$/;"	r
mysql_service	src/kernel/server_app.erl	/^mysql_service(Sup) ->$/;"	f	module:server_app
n_args	deps/lager-master/src/lager_stdlib.erl	/^n_args(A) when is_integer(A) ->$/;"	f	module:lager_stdlib
n_args	deps/lager-master/src/lager_stdlib.erl	/^n_args(As) when is_list(As) ->$/;"	f	module:lager_stdlib
n_args	src/lager/lager_stdlib.erl	/^n_args(A) when is_integer(A) ->$/;"	f	module:lager_stdlib
n_args	src/lager/lager_stdlib.erl	/^n_args(As) when is_list(As) ->$/;"	f	module:lager_stdlib
n_spaces	deps/lager-master/src/lager_stdlib.erl	/^n_spaces(N) ->$/;"	f	module:lager_stdlib
n_spaces	src/lager/lager_stdlib.erl	/^n_spaces(N) ->$/;"	f	module:lager_stdlib
need_test_connection	src/mysql/emysql/emysql_conn.erl	/^need_test_connection(Conn) ->$/;"	f	module:emysql_conn
nested_record_test	deps/lager-master/test/pr_nested_record_test.erl	/^nested_record_test() ->$/;"	f	module:pr_nested_record_test
net_service	src/kernel/server_app.erl	/^net_service(Sup) ->$/;"	f	module:server_app
new	deps/lager-master/src/lager_config.erl	/^new() ->$/;"	f	module:lager_config
new	deps/lager-master/src/lager_msg.erl	/^new(Msg, Severity, Metadata, Destinations) ->$/;"	f	module:lager_msg
new	deps/lager-master/src/lager_msg.erl	/^new(Msg, Timestamp, Severity, Metadata, Destinations) ->$/;"	f	module:lager_msg
new	src/lager/lager_config.erl	/^new() ->$/;"	f	module:lager_config
new	src/lager/lager_msg.erl	/^new(Msg, Severity, Metadata, Destinations) ->$/;"	f	module:lager_msg
new	src/lager/lager_msg.erl	/^new(Msg, Timestamp, Severity, Metadata, Destinations) ->$/;"	f	module:lager_msg
new_conn	deps/mysql/mysql.erl	/^new_conn(PoolId, ConnPid, Reconnect, Host, Port, User, Password, Database,$/;"	f	module:mysql
new_conn	src/mysql/mysql.erl	/^new_conn(PoolId, ConnPid, Reconnect, Host, Port, User, Password, Database,$/;"	f	module:mysql
newline	deps/lager-master/src/lager_format.erl	/^newline(F, right, _P, _Pad) -> chars($\\n, F).$/;"	f	module:lager_format
newline	deps/lager-master/src/lager_format.erl	/^newline(none, _Adj, _P, _Pad) -> "\\n";$/;"	f	module:lager_format
newline	src/lager/lager_format.erl	/^newline(F, right, _P, _Pad) -> chars($\\n, F).$/;"	f	module:lager_format
newline	src/lager/lager_format.erl	/^newline(none, _Adj, _P, _Pad) -> "\\n";$/;"	f	module:lager_format
normalize_version	deps/mysql/mysql_conn.erl	/^normalize_version([$4,$.,$0|_T], LogFun) ->$/;"	f	module:mysql_conn
normalize_version	deps/mysql/mysql_conn.erl	/^normalize_version([$4,$.,$1|_T], _LogFun) ->$/;"	f	module:mysql_conn
normalize_version	deps/mysql/mysql_conn.erl	/^normalize_version([$5|_T], _LogFun) ->$/;"	f	module:mysql_conn
normalize_version	deps/mysql/mysql_conn.erl	/^normalize_version(_Other, LogFun) ->$/;"	f	module:mysql_conn
normalize_version	src/mysql/mysql_conn.erl	/^normalize_version([$4,$.,$0|_T], LogFun) ->$/;"	f	module:mysql_conn
normalize_version	src/mysql/mysql_conn.erl	/^normalize_version([$4,$.,$1|_T], _LogFun) ->$/;"	f	module:mysql_conn
normalize_version	src/mysql/mysql_conn.erl	/^normalize_version([$5|_T], _LogFun) ->$/;"	f	module:mysql_conn
normalize_version	src/mysql/mysql_conn.erl	/^normalize_version(_Other, LogFun) ->$/;"	f	module:mysql_conn
not_running_test	deps/lager-master/test/lager_test_backend.erl	/^not_running_test() ->$/;"	f	module:lager_test_backend
now_seconds	src/mysql/emysql/emysql_conn.erl	/^now_seconds() ->$/;"	f	module:emysql_conn
num_to_level	deps/lager-master/src/lager_util.erl	/^num_to_level(?ALERT) -> alert;$/;"	f	module:lager_util
num_to_level	deps/lager-master/src/lager_util.erl	/^num_to_level(?CRITICAL) -> critical;$/;"	f	module:lager_util
num_to_level	deps/lager-master/src/lager_util.erl	/^num_to_level(?DEBUG) -> debug;$/;"	f	module:lager_util
num_to_level	deps/lager-master/src/lager_util.erl	/^num_to_level(?EMERGENCY) -> emergency;$/;"	f	module:lager_util
num_to_level	deps/lager-master/src/lager_util.erl	/^num_to_level(?ERROR) -> error;$/;"	f	module:lager_util
num_to_level	deps/lager-master/src/lager_util.erl	/^num_to_level(?INFO) -> info;$/;"	f	module:lager_util
num_to_level	deps/lager-master/src/lager_util.erl	/^num_to_level(?LOG_NONE) -> none.$/;"	f	module:lager_util
num_to_level	deps/lager-master/src/lager_util.erl	/^num_to_level(?NOTICE) -> notice;$/;"	f	module:lager_util
num_to_level	deps/lager-master/src/lager_util.erl	/^num_to_level(?WARNING) -> warning;$/;"	f	module:lager_util
num_to_level	src/lager/lager_util.erl	/^num_to_level(?ALERT) -> alert;$/;"	f	module:lager_util
num_to_level	src/lager/lager_util.erl	/^num_to_level(?CRITICAL) -> critical;$/;"	f	module:lager_util
num_to_level	src/lager/lager_util.erl	/^num_to_level(?DEBUG) -> debug;$/;"	f	module:lager_util
num_to_level	src/lager/lager_util.erl	/^num_to_level(?EMERGENCY) -> emergency;$/;"	f	module:lager_util
num_to_level	src/lager/lager_util.erl	/^num_to_level(?ERROR) -> error;$/;"	f	module:lager_util
num_to_level	src/lager/lager_util.erl	/^num_to_level(?INFO) -> info;$/;"	f	module:lager_util
num_to_level	src/lager/lager_util.erl	/^num_to_level(?LOG_NONE) -> none.$/;"	f	module:lager_util
num_to_level	src/lager/lager_util.erl	/^num_to_level(?NOTICE) -> notice;$/;"	f	module:lager_util
num_to_level	src/lager/lager_util.erl	/^num_to_level(?WARNING) -> warning;$/;"	f	module:lager_util
ok_packet	include/emysql.hrl	/^-record(ok_packet, {seq_num :: number(), $/;"	r
one_to_two	src/misc/util.erl	/^one_to_two(One) ->$/;"	f	module:util
open_connection	src/mysql/emysql/emysql_conn.erl	/^open_connection(#pool{pool_id=PoolId, host=Host, port=Port, user=User,$/;"	f	module:emysql_conn
open_connections	src/mysql/emysql/emysql_conn.erl	/^open_connections(Pool) ->$/;"	f	module:emysql_conn
open_logfile	deps/lager-master/src/lager_util.erl	/^open_logfile(Name, Buffer) ->$/;"	f	module:lager_util
open_logfile	src/lager/lager_util.erl	/^open_logfile(Name, Buffer) ->$/;"	f	module:lager_util
open_n_connections	src/mysql/emysql/emysql_conn.erl	/^open_n_connections(PoolId, N) ->$/;"	f	module:emysql_conn
options	deps/lager-master/src/lager_format.erl	/^-record(options, {$/;"	r
options	src/lager/lager_format.erl	/^-record(options, {$/;"	r
origin	deps/lager-master/src/lager_stdlib.erl	/^origin(1, M, F, A) ->$/;"	f	module:lager_stdlib
origin	deps/lager-master/src/lager_stdlib.erl	/^origin(_N, _M, _F, _A) ->$/;"	f	module:lager_stdlib
origin	src/lager/lager_stdlib.erl	/^origin(1, M, F, A) ->$/;"	f	module:lager_stdlib
origin	src/lager/lager_stdlib.erl	/^origin(_N, _M, _F, _A) ->$/;"	f	module:lager_stdlib
other_node_suffix	deps/lager-master/src/lager_crash_log.erl	/^other_node_suffix(Pid) when node(Pid) =\/= node() ->$/;"	f	module:lager_crash_log
other_node_suffix	deps/lager-master/src/lager_crash_log.erl	/^other_node_suffix(_) ->$/;"	f	module:lager_crash_log
other_node_suffix	src/lager/lager_crash_log.erl	/^other_node_suffix(Pid) when node(Pid) =\/= node() ->$/;"	f	module:lager_crash_log
other_node_suffix	src/lager/lager_crash_log.erl	/^other_node_suffix(_) ->$/;"	f	module:lager_crash_log
output	deps/lager-master/src/lager_default_formatter.erl	/^output(Other,_) -> make_printable(Other).$/;"	f	module:lager_default_formatter
output	deps/lager-master/src/lager_default_formatter.erl	/^output(Prop,Msg) when is_atom(Prop) ->$/;"	f	module:lager_default_formatter
output	deps/lager-master/src/lager_default_formatter.erl	/^output(date,Msg) ->$/;"	f	module:lager_default_formatter
output	deps/lager-master/src/lager_default_formatter.erl	/^output(message,Msg) -> lager_msg:message(Msg);$/;"	f	module:lager_default_formatter
output	deps/lager-master/src/lager_default_formatter.erl	/^output(severity,Msg) ->$/;"	f	module:lager_default_formatter
output	deps/lager-master/src/lager_default_formatter.erl	/^output(time,Msg) ->$/;"	f	module:lager_default_formatter
output	deps/lager-master/src/lager_default_formatter.erl	/^output({Prop, Present, Absent}, Msg) when is_atom(Prop) ->$/;"	f	module:lager_default_formatter
output	deps/lager-master/src/lager_default_formatter.erl	/^output({Prop,Default},Msg) when is_atom(Prop) ->$/;"	f	module:lager_default_formatter
output	src/lager/lager_default_formatter.erl	/^output(Other,_) -> make_printable(Other).$/;"	f	module:lager_default_formatter
output	src/lager/lager_default_formatter.erl	/^output(Prop,Msg) when is_atom(Prop) ->$/;"	f	module:lager_default_formatter
output	src/lager/lager_default_formatter.erl	/^output(date,Msg) ->$/;"	f	module:lager_default_formatter
output	src/lager/lager_default_formatter.erl	/^output(message,Msg) -> lager_msg:message(Msg);$/;"	f	module:lager_default_formatter
output	src/lager/lager_default_formatter.erl	/^output(severity,Msg) ->$/;"	f	module:lager_default_formatter
output	src/lager/lager_default_formatter.erl	/^output(time,Msg) ->$/;"	f	module:lager_default_formatter
output	src/lager/lager_default_formatter.erl	/^output({Prop, Present, Absent}, Msg) when is_atom(Prop) ->$/;"	f	module:lager_default_formatter
output	src/lager/lager_default_formatter.erl	/^output({Prop,Default},Msg) when is_atom(Prop) ->$/;"	f	module:lager_default_formatter
output_color	deps/lager-master/src/lager_default_formatter.erl	/^output_color(Msg,Colors) ->$/;"	f	module:lager_default_formatter
output_color	deps/lager-master/src/lager_default_formatter.erl	/^output_color(_Msg,[]) -> [];$/;"	f	module:lager_default_formatter
output_color	src/lager/lager_default_formatter.erl	/^output_color(Msg,Colors) ->$/;"	f	module:lager_default_formatter
output_color	src/lager/lager_default_formatter.erl	/^output_color(_Msg,[]) -> [];$/;"	f	module:lager_default_formatter
p	src/mod/gen_server2.erl	/^p(Pid) ->$/;"	f	module:gen_server2
packet	include/emysql.hrl	/^-record(packet, {size :: number(), $/;"	r
pad_char	deps/lager-master/src/lager_format.erl	/^pad_char(Fmt, Args) -> {$\\s,Fmt,Args}.$/;"	f	module:lager_format
pad_char	deps/lager-master/src/lager_format.erl	/^pad_char([$.,$*|Fmt], [Pad|Args]) -> {Pad,Fmt,Args};$/;"	f	module:lager_format
pad_char	deps/lager-master/src/lager_format.erl	/^pad_char([$.,Pad|Fmt], Args) -> {Pad,Fmt,Args};$/;"	f	module:lager_format
pad_char	src/lager/lager_format.erl	/^pad_char(Fmt, Args) -> {$\\s,Fmt,Args}.$/;"	f	module:lager_format
pad_char	src/lager/lager_format.erl	/^pad_char([$.,$*|Fmt], [Pad|Args]) -> {Pad,Fmt,Args};$/;"	f	module:lager_format
pad_char	src/lager/lager_format.erl	/^pad_char([$.,Pad|Fmt], Args) -> {Pad,Fmt,Args};$/;"	f	module:lager_format
parse_buffer	src/mysql/emysql/emysql_tcp.erl	/^parse_buffer(FieldList,<<PacketLength:24\/little-integer, SeqNum:8\/integer, PacketData:PacketLength\/binary, Rest\/binary>>, Acc) ->$/;"	f	module:emysql_tcp
parse_buffer	src/mysql/emysql/emysql_tcp.erl	/^parse_buffer(_FieldList, Buff = <<PacketLength:24\/little-integer, _SeqNum:8\/integer, PacketData\/binary>>, Acc) ->$/;"	f	module:emysql_tcp
parse_buffer	src/mysql/emysql/emysql_tcp.erl	/^parse_buffer(_FieldList,Buff, Acc) ->$/;"	f	module:emysql_tcp
parse_fail_test	deps/lager-master/src/lager_util.erl	/^parse_fail_test() ->$/;"	f	module:lager_util
parse_fail_test	src/lager/lager_util.erl	/^parse_fail_test() ->$/;"	f	module:lager_util
parse_greeting	src/mysql/emysql/emysql_auth.erl	/^parse_greeting(#packet { data = <<?RESP_ERROR, _\/binary>> }) ->$/;"	f	module:emysql_auth
parse_greeting	src/mysql/emysql/emysql_auth.erl	/^parse_greeting(#packet { data = <<ProtocolVersion:8\/integer, Rest1\/binary>>, seq_num = SeqNo }) ->$/;"	f	module:emysql_auth
parse_greeting	src/mysql/emysql/emysql_auth.erl	/^parse_greeting(#packet { data = What }) ->$/;"	f	module:emysql_auth
parse_response	src/mysql/emysql/emysql_tcp.erl	/^parse_response(Sock, DefaultTimeout, #packet{seq_num = SeqNum, data = Data}=_Packet, Buff) ->$/;"	f	module:emysql_tcp
parse_response	src/mysql/emysql/emysql_tcp.erl	/^parse_response(_Sock, _Timeout, #packet{seq_num = SeqNum, data = <<0:8, Rest\/binary>>}=_Packet, Buff) ->$/;"	f	module:emysql_tcp
parse_response	src/mysql/emysql/emysql_tcp.erl	/^parse_response(_Sock, _Timeout, #packet{seq_num = SeqNum, data = <<255:8, ErrNo:16\/little, "#", SQLState:5\/binary-unit:8, Msg\/binary>>}=_Packet, Buff) ->$/;"	f	module:emysql_tcp
parse_response	src/mysql/emysql/emysql_tcp.erl	/^parse_response(_Sock, _Timeout, #packet{seq_num = SeqNum, data = <<255:8, ErrNo:16\/little, Msg\/binary>>}=_Packet, Buff) ->$/;"	f	module:emysql_tcp
parse_response	src/mysql/emysql/emysql_tcp.erl	/^parse_response(_Sock, _Timeout, #packet{seq_num = SeqNum, data = <<?RESP_EOF:8, WarningCount:16\/little, ServerStatus:16\/little>>}=_Packet, Buff) ->$/;"	f	module:emysql_tcp
parse_response	src/mysql/emysql/emysql_tcp.erl	/^parse_response(_Sock, _Timeout, #packet{seq_num = SeqNum, data = <<?RESP_EOF:8>>}=_Packet, Buff) ->$/;"	f	module:emysql_tcp
parse_rotation_date_spec	deps/lager-master/src/lager_util.erl	/^parse_rotation_date_spec([$$, $M, L|T]) when L == $L; L == $l ->$/;"	f	module:lager_util
parse_rotation_date_spec	deps/lager-master/src/lager_util.erl	/^parse_rotation_date_spec([$$, $M, M1, M2]) ->$/;"	f	module:lager_util
parse_rotation_date_spec	deps/lager-master/src/lager_util.erl	/^parse_rotation_date_spec([$$, $M, M1, M2|[$D|_]=T]) ->$/;"	f	module:lager_util
parse_rotation_date_spec	deps/lager-master/src/lager_util.erl	/^parse_rotation_date_spec([$$, $M, M]) ->$/;"	f	module:lager_util
parse_rotation_date_spec	deps/lager-master/src/lager_util.erl	/^parse_rotation_date_spec([$$, $M, M|[$D|_]=T]) ->$/;"	f	module:lager_util
parse_rotation_date_spec	deps/lager-master/src/lager_util.erl	/^parse_rotation_date_spec([$$, $W, W|T]) when W >= $0, W =< $6 ->$/;"	f	module:lager_util
parse_rotation_date_spec	deps/lager-master/src/lager_util.erl	/^parse_rotation_date_spec([$$|X]) when X \/= [] ->$/;"	f	module:lager_util
parse_rotation_date_spec	deps/lager-master/src/lager_util.erl	/^parse_rotation_date_spec(_) ->$/;"	f	module:lager_util
parse_rotation_date_spec	src/lager/lager_util.erl	/^parse_rotation_date_spec([$$, $M, L|T]) when L == $L; L == $l ->$/;"	f	module:lager_util
parse_rotation_date_spec	src/lager/lager_util.erl	/^parse_rotation_date_spec([$$, $M, M1, M2]) ->$/;"	f	module:lager_util
parse_rotation_date_spec	src/lager/lager_util.erl	/^parse_rotation_date_spec([$$, $M, M1, M2|[$D|_]=T]) ->$/;"	f	module:lager_util
parse_rotation_date_spec	src/lager/lager_util.erl	/^parse_rotation_date_spec([$$, $M, M]) ->$/;"	f	module:lager_util
parse_rotation_date_spec	src/lager/lager_util.erl	/^parse_rotation_date_spec([$$, $M, M|[$D|_]=T]) ->$/;"	f	module:lager_util
parse_rotation_date_spec	src/lager/lager_util.erl	/^parse_rotation_date_spec([$$, $W, W|T]) when W >= $0, W =< $6 ->$/;"	f	module:lager_util
parse_rotation_date_spec	src/lager/lager_util.erl	/^parse_rotation_date_spec([$$|X]) when X \/= [] ->$/;"	f	module:lager_util
parse_rotation_date_spec	src/lager/lager_util.erl	/^parse_rotation_date_spec(_) ->$/;"	f	module:lager_util
parse_rotation_day_spec	deps/lager-master/src/lager_util.erl	/^parse_rotation_day_spec([$D, D1, D2], Res) ->$/;"	f	module:lager_util
parse_rotation_day_spec	deps/lager-master/src/lager_util.erl	/^parse_rotation_day_spec([$D, D], Res)  when D >= $0, D =< $9 ->$/;"	f	module:lager_util
parse_rotation_day_spec	deps/lager-master/src/lager_util.erl	/^parse_rotation_day_spec([], Res) ->$/;"	f	module:lager_util
parse_rotation_day_spec	deps/lager-master/src/lager_util.erl	/^parse_rotation_day_spec(_, _) ->$/;"	f	module:lager_util
parse_rotation_day_spec	src/lager/lager_util.erl	/^parse_rotation_day_spec([$D, D1, D2], Res) ->$/;"	f	module:lager_util
parse_rotation_day_spec	src/lager/lager_util.erl	/^parse_rotation_day_spec([$D, D], Res)  when D >= $0, D =< $9 ->$/;"	f	module:lager_util
parse_rotation_day_spec	src/lager/lager_util.erl	/^parse_rotation_day_spec([], Res) ->$/;"	f	module:lager_util
parse_rotation_day_spec	src/lager/lager_util.erl	/^parse_rotation_day_spec(_, _) ->$/;"	f	module:lager_util
parse_test	deps/lager-master/src/lager_util.erl	/^parse_test() ->$/;"	f	module:lager_util
parse_test	src/lager/lager_util.erl	/^parse_test() ->$/;"	f	module:lager_util
parse_transform	deps/lager-master/src/lager_transform.erl	/^parse_transform(AST, Options) ->$/;"	f	module:lager_transform
parse_transform	myfile/dynarec.erl	/^parse_transform(Forms, _Options) ->$/;"	f	module:dynarec
parse_transform	src/lager/lager_transform.erl	/^parse_transform(AST, Options) ->$/;"	f	module:lager_transform
pass_connection	src/mysql/emysql/emysql_conn_mgr.erl	/^pass_connection(Connection) ->$/;"	f	module:emysql_conn_mgr
password_new	deps/mysql/mysql_auth.erl	/^password_new(Password, Salt) ->$/;"	f	module:mysql_auth
password_new	deps/mysql/mysql_auth.erl	/^password_new([], _Salt) ->$/;"	f	module:mysql_auth
password_new	src/mysql/emysql/emysql_auth.erl	/^password_new(Password, Salt) ->$/;"	f	module:emysql_auth
password_new	src/mysql/emysql/emysql_auth.erl	/^password_new([], _Salt) -> <<>>;$/;"	f	module:emysql_auth
password_new	src/mysql/mysql_auth.erl	/^password_new(Password, Salt) ->$/;"	f	module:mysql_auth
password_new	src/mysql/mysql_auth.erl	/^password_new([], _Salt) ->$/;"	f	module:mysql_auth
password_old	deps/mysql/mysql_auth.erl	/^password_old(Password, Salt) ->$/;"	f	module:mysql_auth
password_old	src/mysql/emysql/emysql_auth.erl	/^password_old(Password, Salt) ->$/;"	f	module:emysql_auth
password_old	src/mysql/mysql_auth.erl	/^password_old(Password, Salt) ->$/;"	f	module:mysql_auth
password_type	src/mysql/emysql/emysql_auth.erl	/^password_type(Password, ?MYSQL_OLD_PASSWORD) when is_list(Password); is_binary(Password) -> old;$/;"	f	module:emysql_auth
password_type	src/mysql/emysql/emysql_auth.erl	/^password_type(Password, _) when is_list(Password); is_binary(Password) -> new;$/;"	f	module:emysql_auth
password_type	src/mysql/emysql/emysql_auth.erl	/^password_type(_, _) -> empty.$/;"	f	module:emysql_auth
perf	deps/lager-master/src/lager_trunc_io.erl	/^perf() ->$/;"	f	module:lager_trunc_io
perf	deps/lager-master/src/lager_trunc_io.erl	/^perf(M, F, Reps) when Reps > 0 ->$/;"	f	module:lager_trunc_io
perf	deps/lager-master/src/lager_trunc_io.erl	/^perf(_,_,_) ->$/;"	f	module:lager_trunc_io
perf	src/lager/lager_trunc_io.erl	/^perf() ->$/;"	f	module:lager_trunc_io
perf	src/lager/lager_trunc_io.erl	/^perf(M, F, Reps) when Reps > 0 ->$/;"	f	module:lager_trunc_io
perf	src/lager/lager_trunc_io.erl	/^perf(_,_,_) ->$/;"	f	module:lager_trunc_io
perf1	deps/lager-master/src/lager_trunc_io.erl	/^perf1() ->$/;"	f	module:lager_trunc_io
perf1	src/lager/lager_trunc_io.erl	/^perf1() ->$/;"	f	module:lager_trunc_io
perhaps_a_sasl_report	deps/lager-master/src/lager_crash_log.erl	/^perhaps_a_sasl_report(_, _, _) ->$/;"	f	module:lager_crash_log
perhaps_a_sasl_report	deps/lager-master/src/lager_crash_log.erl	/^perhaps_a_sasl_report(error_report, {Pid, Type, Report}, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
perhaps_a_sasl_report	src/lager/lager_crash_log.erl	/^perhaps_a_sasl_report(_, _, _) ->$/;"	f	module:lager_crash_log
perhaps_a_sasl_report	src/lager/lager_crash_log.erl	/^perhaps_a_sasl_report(error_report, {Pid, Type, Report}, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
pool	include/emysql.hrl	/^-record(pool, {pool_id :: atom(), $/;"	r
pools	src/mysql/emysql/emysql_app.erl	/^pools() ->$/;"	f	module:emysql_app
pools	src/mysql/emysql/emysql_conn_mgr.erl	/^pools() ->$/;"	f	module:emysql_conn_mgr
pop	deps/lager-master/test/lager_test_backend.erl	/^pop() ->$/;"	f	module:lager_test_backend
posix_error	deps/lager-master/src/lager.erl	/^posix_error(Error) ->$/;"	f	module:lager
posix_error	deps/lager-master/src/lager.erl	/^posix_error(Error) when is_atom(Error) ->$/;"	f	module:lager
posix_error	src/lager/lager.erl	/^posix_error(Error) ->$/;"	f	module:lager
posix_error	src/lager/lager.erl	/^posix_error(Error) when is_atom(Error) ->$/;"	f	module:lager
post_start	deps/mysql/mysql_conn.erl	/^post_start(Pid, LogFun) ->$/;"	f	module:mysql_conn
post_start	src/mysql/mysql_conn.erl	/^post_start(Pid, LogFun) ->$/;"	f	module:mysql_conn
pp_arguments	deps/lager-master/src/lager_stdlib.erl	/^pp_arguments(PF, As, I) ->$/;"	f	module:lager_stdlib
pp_arguments	src/lager/lager_stdlib.erl	/^pp_arguments(PF, As, I) ->$/;"	f	module:lager_stdlib
pp_fun	deps/lager-master/src/lager_stdlib.erl	/^pp_fun(FmtMaxBytes) ->$/;"	f	module:lager_stdlib
pp_fun	src/lager/lager_stdlib.erl	/^pp_fun(FmtMaxBytes) ->$/;"	f	module:lager_stdlib
pr	deps/lager-master/src/lager.erl	/^pr(Record, Module) when is_tuple(Record), is_atom(element(1, Record)) ->$/;"	f	module:lager
pr	deps/lager-master/src/lager.erl	/^pr(Record, _) ->$/;"	f	module:lager
pr	src/lager/lager.erl	/^pr(Record, Module) when is_tuple(Record), is_atom(element(1, Record)) ->$/;"	f	module:lager
pr	src/lager/lager.erl	/^pr(Record, _) ->$/;"	f	module:lager
pr_nested_record_test	deps/lager-master/test/pr_nested_record_test.erl	/^-module(pr_nested_record_test).$/;"	m
pre_load_beams	myfile/reloader.erl	/^pre_load_beams() ->$/;"	f	module:reloader
pre_proc	src/logger/dynamic_compile.erl	/^pre_proc(Toks,MacroDict) ->$/;"	f	module:dynamic_compile
pre_proc	src/logger/dynamic_compile.erl	/^pre_proc([{'-',_}, {atom,_,include}, {'(',_}, {string,_,Filename}, {')',_}, {dot,_}], _MacroDict) ->$/;"	f	module:dynamic_compile
pre_proc	src/logger/dynamic_compile.erl	/^pre_proc([{'-',_},{atom,_,define},{'(',_},{_,_,Name}|DefToks],MacroDict) ->$/;"	f	module:dynamic_compile
precision	deps/lager-master/src/lager_format.erl	/^precision(Fmt, Args) ->$/;"	f	module:lager_format
precision	deps/lager-master/src/lager_format.erl	/^precision([$.|Fmt], Args) ->$/;"	f	module:lager_format
precision	src/lager/lager_format.erl	/^precision(Fmt, Args) ->$/;"	f	module:lager_format
precision	src/lager/lager_format.erl	/^precision([$.|Fmt], Args) ->$/;"	f	module:lager_format
prefixed_integer	deps/lager-master/src/lager_format.erl	/^prefixed_integer(Int, F, Adj, Base, Pad, Prefix, Lowercase)$/;"	f	module:lager_format
prefixed_integer	src/lager/lager_format.erl	/^prefixed_integer(Int, F, Adj, Base, Pad, Prefix, Lowercase)$/;"	f	module:lager_format
prepare	deps/mysql/mysql.erl	/^prepare(Name, Query) ->$/;"	f	module:mysql
prepare	src/mysql/emysql/emysql.erl	/^prepare(StmtName, Statement) when is_atom(StmtName) andalso (is_list(Statement) orelse is_binary(Statement)) ->$/;"	f	module:emysql
prepare	src/mysql/emysql/emysql_conn.erl	/^prepare(Connection, Name, Statement) ->$/;"	f	module:emysql_conn
prepare	src/mysql/emysql/emysql_conn.erl	/^prepare(Connection, Name, Statement) when is_atom(Name) ->$/;"	f	module:emysql_conn
prepare	src/mysql/emysql/emysql_statements.erl	/^prepare(ConnId, StmtName, Version) ->$/;"	f	module:emysql_statements
prepare	src/mysql/mysql.erl	/^prepare(Name, Query) ->$/;"	f	module:mysql
prepare_and_exec	deps/mysql/mysql_conn.erl	/^prepare_and_exec(State, Name, Version, Stmt, Params) ->$/;"	f	module:mysql_conn
prepare_and_exec	src/mysql/mysql_conn.erl	/^prepare_and_exec(State, Name, Version, Stmt, Params) ->$/;"	f	module:mysql_conn
prepare_options	deps/lager-master/src/lager_trunc_io.erl	/^prepare_options([], Options) ->$/;"	f	module:lager_trunc_io
prepare_options	deps/lager-master/src/lager_trunc_io.erl	/^prepare_options([{depth, Depth}|T], Options) when is_integer(Depth) ->$/;"	f	module:lager_trunc_io
prepare_options	deps/lager-master/src/lager_trunc_io.erl	/^prepare_options([{force_strings, Bool}|T], Options) when is_boolean(Bool) ->$/;"	f	module:lager_trunc_io
prepare_options	deps/lager-master/src/lager_trunc_io.erl	/^prepare_options([{lists_as_strings, Bool}|T], Options) when is_boolean(Bool) ->$/;"	f	module:lager_trunc_io
prepare_options	src/lager/lager_trunc_io.erl	/^prepare_options([], Options) ->$/;"	f	module:lager_trunc_io
prepare_options	src/lager/lager_trunc_io.erl	/^prepare_options([{depth, Depth}|T], Options) when is_integer(Depth) ->$/;"	f	module:lager_trunc_io
prepare_options	src/lager/lager_trunc_io.erl	/^prepare_options([{force_strings, Bool}|T], Options) when is_boolean(Bool) ->$/;"	f	module:lager_trunc_io
prepare_options	src/lager/lager_trunc_io.erl	/^prepare_options([{lists_as_strings, Bool}|T], Options) when is_boolean(Bool) ->$/;"	f	module:lager_trunc_io
prepare_statement	src/mysql/emysql/emysql_conn.erl	/^prepare_statement(Connection, StmtName) ->$/;"	f	module:emysql_conn
print	deps/lager-master/src/lager_trunc_io.erl	/^print(<<>>, _Max, #print_options{depth=1}) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(<<>>, _Max, Options) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(Atom, _Max, #print_options{force_strings=NoQuote}) when is_atom(Atom) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(Bin, Max, _Options) when is_binary(Bin), Max < 2 ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(Bin, _Max, #print_options{depth=1}) when is_binary(Bin) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(Binary, 0, _Options) when is_bitstring(Binary) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(Binary, Max, Options) when is_binary(Binary) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(BitString, Max, Options) when is_bitstring(BitString) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(Float, _Max, _Options) when is_float(Float) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(Fun, Max, _Options) when is_function(Fun) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(Integer, _Max, _Options) when is_integer(Integer) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(List, Max, Options) when is_list(List) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(Map, Max, Options) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(Pid, _Max, _Options) when is_pid(Pid) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(Port, _Max, _Options) when is_port(Port) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(Ref, _Max, _Options) when is_reference(Ref) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(Term, Max) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(Term, Max, Options) when is_list(Options) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(Term, _Max, #print_options{force_strings=true}) when not is_list(Term), not is_binary(Term), not is_atom(Term) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(Tuple, Max, Options) when is_tuple(Tuple) -> $/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(_, Max, _Options) when Max < 0 -> {"...", 3};$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print(_, _, #print_options{depth=0}) -> {"...", 3};$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print({'$lager_record', Name, Fields}, Max, Options) ->$/;"	f	module:lager_trunc_io
print	deps/lager-master/src/lager_trunc_io.erl	/^print({inline_bitstring, B}, _Max, _Options) when is_bitstring(B) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(<<>>, _Max, #print_options{depth=1}) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(<<>>, _Max, Options) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(Atom, _Max, #print_options{force_strings=NoQuote}) when is_atom(Atom) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(Bin, Max, _Options) when is_binary(Bin), Max < 2 ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(Bin, _Max, #print_options{depth=1}) when is_binary(Bin) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(Binary, 0, _Options) when is_bitstring(Binary) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(Binary, Max, Options) when is_binary(Binary) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(BitString, Max, Options) when is_bitstring(BitString) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(Float, _Max, _Options) when is_float(Float) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(Fun, Max, _Options) when is_function(Fun) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(Integer, _Max, _Options) when is_integer(Integer) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(List, Max, Options) when is_list(List) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(Map, Max, Options) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(Pid, _Max, _Options) when is_pid(Pid) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(Port, _Max, _Options) when is_port(Port) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(Ref, _Max, _Options) when is_reference(Ref) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(Term, Max) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(Term, Max, Options) when is_list(Options) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(Term, _Max, #print_options{force_strings=true}) when not is_list(Term), not is_binary(Term), not is_atom(Term) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(Tuple, Max, Options) when is_tuple(Tuple) -> $/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(_, Max, _Options) when Max < 0 -> {"...", 3};$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print(_, _, #print_options{depth=0}) -> {"...", 3};$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print({'$lager_record', Name, Fields}, Max, Options) ->$/;"	f	module:lager_trunc_io
print	src/lager/lager_trunc_io.erl	/^print({inline_bitstring, B}, _Max, _Options) when is_bitstring(B) ->$/;"	f	module:lager_trunc_io
print_bad_state	deps/lager-master/test/lager_test_backend.erl	/^print_bad_state() ->$/;"	f	module:lager_test_backend
print_options	deps/lager-master/src/lager_trunc_io.erl	/^-record(print_options, {$/;"	r
print_options	src/lager/lager_trunc_io.erl	/^-record(print_options, {$/;"	r
print_silly_list	deps/lager-master/src/error_logger_lager_h.erl	/^print_silly_list(L) ->$/;"	f	module:error_logger_lager_h
print_silly_list	deps/lager-master/src/error_logger_lager_h.erl	/^print_silly_list(L) when is_list(L) ->$/;"	f	module:error_logger_lager_h
print_silly_list	deps/lager-master/src/error_logger_lager_h.erl	/^print_silly_list([H|T], Fmt, Acc) ->$/;"	f	module:error_logger_lager_h
print_silly_list	deps/lager-master/src/error_logger_lager_h.erl	/^print_silly_list([], Fmt, Acc) ->$/;"	f	module:error_logger_lager_h
print_silly_list	deps/lager-master/src/error_logger_lager_h.erl	/^print_silly_list([{K,V}|T], Fmt, Acc) ->$/;"	f	module:error_logger_lager_h
print_silly_list	src/lager/error_logger_lager_h.erl	/^print_silly_list(L) ->$/;"	f	module:error_logger_lager_h
print_silly_list	src/lager/error_logger_lager_h.erl	/^print_silly_list(L) when is_list(L) ->$/;"	f	module:error_logger_lager_h
print_silly_list	src/lager/error_logger_lager_h.erl	/^print_silly_list([H|T], Fmt, Acc) ->$/;"	f	module:error_logger_lager_h
print_silly_list	src/lager/error_logger_lager_h.erl	/^print_silly_list([], Fmt, Acc) ->$/;"	f	module:error_logger_lager_h
print_silly_list	src/lager/error_logger_lager_h.erl	/^print_silly_list([{K,V}|T], Fmt, Acc) ->$/;"	f	module:error_logger_lager_h
print_state	deps/lager-master/test/lager_test_backend.erl	/^print_state() ->$/;"	f	module:lager_test_backend
print_terms_without_format_string_test	deps/lager-master/src/lager_trunc_io.erl	/^print_terms_without_format_string_test() ->$/;"	f	module:lager_trunc_io
print_terms_without_format_string_test	src/lager/lager_trunc_io.erl	/^print_terms_without_format_string_test() ->$/;"	f	module:lager_trunc_io
print_val	deps/lager-master/src/error_logger_lager_h.erl	/^print_val(Val) ->$/;"	f	module:error_logger_lager_h
print_val	src/lager/error_logger_lager_h.erl	/^print_val(Val) ->$/;"	f	module:error_logger_lager_h
proc_lib_format	deps/lager-master/src/lager_stdlib.erl	/^proc_lib_format([OwnReport,LinkReport], FmtMaxBytes) ->$/;"	f	module:lager_stdlib
proc_lib_format	src/lager/lager_stdlib.erl	/^proc_lib_format([OwnReport,LinkReport], FmtMaxBytes) ->$/;"	f	module:lager_stdlib
process	myfile/game_ctl.erl	/^process(Args) ->$/;"	f	module:game_ctl
process	myfile/game_ctl.erl	/^process(["check_db"]) ->$/;"	f	module:game_ctl
process	myfile/game_ctl.erl	/^process(["count"]) ->$/;"	f	module:game_ctl
process	myfile/game_ctl.erl	/^process(["reload" | Mods]) ->$/;"	f	module:game_ctl
process	myfile/game_ctl.erl	/^process(["reload","config"]) ->$/;"	f	module:game_ctl
process	myfile/game_ctl.erl	/^process(["status"]) ->$/;"	f	module:game_ctl
process	myfile/game_ctl.erl	/^process(["stop",_Time]) ->$/;"	f	module:game_ctl
process	myfile/game_ctl.erl	/^process(["switch_db"]) ->$/;"	f	module:game_ctl
process	myfile/game_ctl.erl	/^process(["version"]) ->$/;"	f	module:game_ctl
process	myfile/mmake.erl	/^process([], _Worker, _NoExec, _Load) ->$/;"	f	module:mmake
process	myfile/mmake.erl	/^process([{L, Opts}|Rest], Worker, NoExec, Load) ->$/;"	f	module:mmake
process	myfile/mmake.erl	/^process([{[], _Opts}|Rest], Worker, NoExec, Load) ->$/;"	f	module:mmake
process	src/misc/mmake.erl	/^process([], _Worker, _NoExec, _Load) ->$/;"	f	module:mmake
process	src/misc/mmake.erl	/^process([{L, Opts}|Rest], Worker, NoExec, Load) ->$/;"	f	module:mmake
process	src/misc/mmake.erl	/^process([{[], _Opts}|Rest], Worker, NoExec, Load) ->$/;"	f	module:mmake
process_message	src/mysql/emysql/emysql_worker.erl	/^process_message(Module, Pool, {Key, Args}) ->$/;"	f	module:emysql_worker
process_message	src/mysql/emysql/emysql_worker.erl	/^process_message(Module, Pool, {Key}) ->$/;"	f	module:emysql_worker
produce_n_error_logger_msgs	deps/lager-master/test/lager_test_backend.erl	/^produce_n_error_logger_msgs(N) ->$/;"	f	module:lager_test_backend
prop_equivalence	deps/lager-master/test/trunc_io_eqc.erl	/^prop_equivalence() ->$/;"	f	module:trunc_io_eqc
prop_format	deps/lager-master/test/trunc_io_eqc.erl	/^prop_format() ->$/;"	f	module:trunc_io_eqc
quote	deps/mysql/mysql.erl	/^quote(Bin) when is_binary(Bin) ->$/;"	f	module:mysql
quote	deps/mysql/mysql.erl	/^quote(String) when is_list(String) ->$/;"	f	module:mysql
quote	deps/mysql/mysql.erl	/^quote([$\\\\ | Rest], Acc) ->$/;"	f	module:mysql
quote	deps/mysql/mysql.erl	/^quote([0 | Rest], Acc) ->$/;"	f	module:mysql
quote	deps/mysql/mysql.erl	/^quote([10 | Rest], Acc) ->$/;"	f	module:mysql
quote	deps/mysql/mysql.erl	/^quote([13 | Rest], Acc) ->$/;"	f	module:mysql
quote	deps/mysql/mysql.erl	/^quote([26 | Rest], Acc) ->$/;"	f	module:mysql
quote	deps/mysql/mysql.erl	/^quote([34 | Rest], Acc) ->		%% 34 is $"$/;"	f	module:mysql
quote	deps/mysql/mysql.erl	/^quote([39 | Rest], Acc) ->		%% 39 is $'$/;"	f	module:mysql
quote	deps/mysql/mysql.erl	/^quote([C | Rest], Acc) ->$/;"	f	module:mysql
quote	deps/mysql/mysql.erl	/^quote([], Acc) ->$/;"	f	module:mysql
quote	src/mysql/emysql/emysql_conn.erl	/^quote(String) when is_list(String) ->$/;"	f	module:emysql_conn
quote	src/mysql/mysql.erl	/^quote(Bin) when is_binary(Bin) ->$/;"	f	module:mysql
quote	src/mysql/mysql.erl	/^quote(String) when is_list(String) ->$/;"	f	module:mysql
quote	src/mysql/mysql.erl	/^quote([$\\\\ | Rest], Acc) ->$/;"	f	module:mysql
quote	src/mysql/mysql.erl	/^quote([0 | Rest], Acc) ->$/;"	f	module:mysql
quote	src/mysql/mysql.erl	/^quote([10 | Rest], Acc) ->$/;"	f	module:mysql
quote	src/mysql/mysql.erl	/^quote([13 | Rest], Acc) ->$/;"	f	module:mysql
quote	src/mysql/mysql.erl	/^quote([26 | Rest], Acc) ->$/;"	f	module:mysql
quote	src/mysql/mysql.erl	/^quote([34 | Rest], Acc) ->		%% 34 is $"$/;"	f	module:mysql
quote	src/mysql/mysql.erl	/^quote([39 | Rest], Acc) ->		%% 39 is $'$/;"	f	module:mysql
quote	src/mysql/mysql.erl	/^quote([C | Rest], Acc) ->$/;"	f	module:mysql
quote	src/mysql/mysql.erl	/^quote([], Acc) ->$/;"	f	module:mysql
quote_loop	src/mysql/emysql/emysql_conn.erl	/^quote_loop(List) ->$/;"	f	module:emysql_conn
quote_loop	src/mysql/emysql/emysql_conn.erl	/^quote_loop([$\\\\ | Rest], Acc) ->$/;"	f	module:emysql_conn
quote_loop	src/mysql/emysql/emysql_conn.erl	/^quote_loop([0 | Rest], Acc) ->$/;"	f	module:emysql_conn
quote_loop	src/mysql/emysql/emysql_conn.erl	/^quote_loop([10 | Rest], Acc) ->$/;"	f	module:emysql_conn
quote_loop	src/mysql/emysql/emysql_conn.erl	/^quote_loop([13 | Rest], Acc) ->$/;"	f	module:emysql_conn
quote_loop	src/mysql/emysql/emysql_conn.erl	/^quote_loop([26 | Rest], Acc) ->$/;"	f	module:emysql_conn
quote_loop	src/mysql/emysql/emysql_conn.erl	/^quote_loop([34 | Rest], Acc) -> %% 34 is $"$/;"	f	module:emysql_conn
quote_loop	src/mysql/emysql/emysql_conn.erl	/^quote_loop([39 | Rest], Acc) -> %% 39 is $'$/;"	f	module:emysql_conn
quote_loop	src/mysql/emysql/emysql_conn.erl	/^quote_loop([C | Rest], Acc) ->$/;"	f	module:emysql_conn
quote_loop	src/mysql/emysql/emysql_conn.erl	/^quote_loop([], Acc) ->$/;"	f	module:emysql_conn
quote_strip_test	deps/lager-master/src/lager_trunc_io.erl	/^quote_strip_test() ->$/;"	f	module:lager_trunc_io
quote_strip_test	src/lager/lager_trunc_io.erl	/^quote_strip_test() ->$/;"	f	module:lager_trunc_io
rand	src/test/smdl.erl	/^rand(Min, Max) ->$/;"	f	module:smdl
rand	src/test/smdl.erl	/^rand(Same, Same) -> Same;$/;"	f	module:smdl
read_emakefile	myfile/mmake.erl	/^read_emakefile(Emakefile,Opts) ->$/;"	f	module:mmake
read_emakefile	src/misc/mmake.erl	/^read_emakefile(Emakefile,Opts) ->$/;"	f	module:mmake
read_include_file	src/logger/dynamic_compile.erl	/^read_include_file(Filename, IncludeSearchPath) ->$/;"	f	module:dynamic_compile
recompile	myfile/mmake.erl	/^recompile(File, false, load, Opts) ->$/;"	f	module:mmake
recompile	myfile/mmake.erl	/^recompile(File, false, netload, Opts) ->$/;"	f	module:mmake
recompile	myfile/mmake.erl	/^recompile(File, false, noload, Opts) ->$/;"	f	module:mmake
recompile	myfile/mmake.erl	/^recompile(File, true, _Load, _Opts) ->$/;"	f	module:mmake
recompile	src/misc/mmake.erl	/^recompile(File, false, load, Opts) ->$/;"	f	module:mmake
recompile	src/misc/mmake.erl	/^recompile(File, false, netload, Opts) ->$/;"	f	module:mmake
recompile	src/misc/mmake.erl	/^recompile(File, false, noload, Opts) ->$/;"	f	module:mmake
recompile	src/misc/mmake.erl	/^recompile(File, true, _Load, _Opts) ->$/;"	f	module:mmake
recompile2	myfile/mmake.erl	/^recompile2(ObjMTime, File, NoExec, Load, Opts) ->$/;"	f	module:mmake
recompile2	src/misc/mmake.erl	/^recompile2(ObjMTime, File, NoExec, Load, Opts) ->$/;"	f	module:mmake
recompilep	myfile/mmake.erl	/^recompilep(File, NoExec, Load, Opts) ->$/;"	f	module:mmake
recompilep	src/misc/mmake.erl	/^recompilep(File, NoExec, Load, Opts) ->$/;"	f	module:mmake
recompilep1	myfile/mmake.erl	/^recompilep1(#file_info{mtime=Te},$/;"	f	module:mmake
recompilep1	myfile/mmake.erl	/^recompilep1(File, NoExec, Load, Opts, ObjFile) ->$/;"	f	module:mmake
recompilep1	myfile/mmake.erl	/^recompilep1(_Erl, #file_info{mtime=To}, File, NoExec, Load, Opts) ->$/;"	f	module:mmake
recompilep1	src/misc/mmake.erl	/^recompilep1(#file_info{mtime=Te},$/;"	f	module:mmake
recompilep1	src/misc/mmake.erl	/^recompilep1(File, NoExec, Load, Opts, ObjFile) ->$/;"	f	module:mmake
recompilep1	src/misc/mmake.erl	/^recompilep1(_Erl, #file_info{mtime=To}, File, NoExec, Load, Opts) ->$/;"	f	module:mmake
reconn_mysql	deps/mysql/db_util.erl	/^reconn_mysql()->$/;"	f	module:db_util
reconn_mysql	src/mysql/db_util.erl	/^reconn_mysql()->$/;"	f	module:db_util
reconnect	deps/mysql/db.erl	/^reconnect() ->$/;"	f	module:db
reconnect	src/mysql/db.erl	/^reconnect() ->$/;"	f	module:db
reconnect	src/mysql/emysql/edb.erl	/^reconnect() ->$/;"	f	module:db
reconnect_loop	deps/mysql/mysql.erl	/^reconnect_loop(Conn, LogFun, N) ->$/;"	f	module:mysql
reconnect_loop	src/mysql/mysql.erl	/^reconnect_loop(Conn, LogFun, N) ->$/;"	f	module:mysql
record_fields	deps/lager-master/src/lager_trunc_io.erl	/^record_fields([], _, _) ->$/;"	f	module:lager_trunc_io
record_fields	deps/lager-master/src/lager_trunc_io.erl	/^record_fields([{Field, Value}|T], Max, Options) ->$/;"	f	module:lager_trunc_io
record_fields	deps/lager-master/src/lager_trunc_io.erl	/^record_fields(_, Max, #print_options{depth=D}) when Max < 4; D == 0 ->$/;"	f	module:lager_trunc_io
record_fields	src/lager/lager_trunc_io.erl	/^record_fields([], _, _) ->$/;"	f	module:lager_trunc_io
record_fields	src/lager/lager_trunc_io.erl	/^record_fields([{Field, Value}|T], Max, Options) ->$/;"	f	module:lager_trunc_io
record_fields	src/lager/lager_trunc_io.erl	/^record_fields(_, Max, #print_options{depth=D}) when Max < 4; D == 0 ->$/;"	f	module:lager_trunc_io
recv_field_list	src/mysql/emysql/emysql_tcp.erl	/^recv_field_list(Sock, SeqNum, DefaultTimeout, Buff) ->$/;"	f	module:emysql_tcp
recv_field_list	src/mysql/emysql/emysql_tcp.erl	/^recv_field_list(Sock, _SeqNum, DefaultTimeout, Acc, Buff) ->$/;"	f	module:emysql_tcp
recv_packet	src/mysql/emysql/emysql_tcp.erl	/^recv_packet(Sock, DefaultTimeout, Buff) ->$/;"	f	module:emysql_tcp
recv_packet_body	src/mysql/emysql/emysql_tcp.erl	/^recv_packet_body(Sock, PacketLength, Timeout, Buff) ->$/;"	f	module:emysql_tcp
recv_packet_header	src/mysql/emysql/emysql_tcp.erl	/^recv_packet_header(Sock, Timeout, Buff) when erlang:byte_size(Buff) < 4 ->$/;"	f	module:emysql_tcp
recv_packet_header	src/mysql/emysql/emysql_tcp.erl	/^recv_packet_header(_Sock, _Timeout, <<PacketLength:24\/little-integer, SeqNum:8\/integer, Rest\/binary>>) ->$/;"	f	module:emysql_tcp
recv_packet_header	src/mysql/emysql/emysql_tcp.erl	/^recv_packet_header(_Sock, _Timeout, Buff) ->$/;"	f	module:emysql_tcp
recv_row_data	src/mysql/emysql/emysql_tcp.erl	/^recv_row_data(Socket, FieldList, DefaultTimeout, SeqNum, Buff) ->$/;"	f	module:emysql_tcp
recv_row_data	src/mysql/emysql/emysql_tcp.erl	/^recv_row_data(Socket, FieldList, Timeout, SeqNum, Buff, Acc) ->$/;"	f	module:emysql_tcp
reinstall_on_initial_failure_test_	deps/lager-master/src/lager_handler_watcher.erl	/^reinstall_on_initial_failure_test_() ->$/;"	f	module:lager_handler_watcher
reinstall_on_initial_failure_test_	src/lager/lager_handler_watcher.erl	/^reinstall_on_initial_failure_test_() ->$/;"	f	module:lager_handler_watcher
reinstall_on_runtime_failure_test_	deps/lager-master/src/lager_handler_watcher.erl	/^reinstall_on_runtime_failure_test_() ->$/;"	f	module:lager_handler_watcher
reinstall_on_runtime_failure_test_	src/lager/lager_handler_watcher.erl	/^reinstall_on_runtime_failure_test_() ->$/;"	f	module:lager_handler_watcher
reload_modules	myfile/reloader.erl	/^reload_modules(Modules) ->$/;"	f	module:reloader
reload_modules	myfile/reloader.erl	/^reload_modules(Modules,IsForce) ->$/;"	f	module:reloader
reloader	myfile/reloader.erl	/^-module(reloader).$/;"	m
remove	src/mysql/emysql/emysql_statements.erl	/^remove(ConnId) ->$/;"	f	module:emysql_statements
remove_conn	deps/mysql/mysql.erl	/^remove_conn(Pid, State) ->$/;"	f	module:mysql
remove_conn	src/mysql/mysql.erl	/^remove_conn(Pid, State) ->$/;"	f	module:mysql
remove_connections	src/mysql/emysql/emysql_conn_mgr.erl	/^remove_connections(PoolId, Num) when is_integer(Num) ->$/;"	f	module:emysql_conn_mgr
remove_pid_from_list	deps/mysql/mysql.erl	/^remove_pid_from_list(Pid, Conns) ->$/;"	f	module:mysql
remove_pid_from_list	src/mysql/mysql.erl	/^remove_pid_from_list(Pid, Conns) ->$/;"	f	module:mysql
remove_pid_from_lists	deps/mysql/mysql.erl	/^remove_pid_from_lists(Pid, Conns1, Conns2) ->$/;"	f	module:mysql
remove_pid_from_lists	src/mysql/mysql.erl	/^remove_pid_from_lists(Pid, Conns1, Conns2) ->$/;"	f	module:mysql
remove_pool	src/mysql/emysql/emysql.erl	/^remove_pool(PoolId) ->$/;"	f	module:emysql
remove_pool	src/mysql/emysql/emysql_conn_mgr.erl	/^remove_pool(PoolId) ->$/;"	f	module:emysql_conn_mgr
reopen_log	src/logger/logger_h.erl	/^reopen_log() ->$/;"	f	module:logger_h
replace	deps/mysql/db_util.erl	/^replace(Table,Fields) ->$/;"	f	module:db_util
replace	src/mysql/db_util.erl	/^replace(Table,Fields) ->$/;"	f	module:db_util
replace	src/mysql/emysql/edb_util.erl	/^replace(Table,Fields) ->$/;"	f	module:db_util
replace_connection_as_available	src/mysql/emysql/emysql_conn_mgr.erl	/^replace_connection_as_available(OldConn, NewConn) ->$/;"	f	module:emysql_conn_mgr
replace_connection_as_locked	src/mysql/emysql/emysql_conn_mgr.erl	/^replace_connection_as_locked(OldConn, NewConn) ->$/;"	f	module:emysql_conn_mgr
reset_connection	src/mysql/emysql/emysql_conn.erl	/^reset_connection(Pools, Conn, StayLocked) ->$/;"	f	module:emysql_conn
reset_list	src/misc/game_config.erl	/^reset_list(List) ->$/;"	f	module:game_config
reset_list	src/misc/game_config.erl	/^reset_list(Platform, ServerID, List) ->$/;"	f	module:game_config
reset_open_list	src/test/a_star.erl	/^reset_open_list() ->$/;"	f	module:a_star
response_list	src/mysql/emysql/emysql_tcp.erl	/^response_list(Sock, DefaultTimeout, ?SERVER_MORE_RESULTS_EXIST, Buff) ->$/;"	f	module:emysql_tcp
response_list	src/mysql/emysql/emysql_tcp.erl	/^response_list(Sock, DefaultTimeout, ServerStatus) -> $/;"	f	module:emysql_tcp
response_list	src/mysql/emysql/emysql_tcp.erl	/^response_list(_, _DefaultTimeout, 0, <<>>) -> [];  %%no further data received after last response.$/;"	f	module:emysql_tcp
result_packet	include/emysql.hrl	/^-record(result_packet, {seq_num :: number(), $/;"	r
result_type	src/mysql/emysql/emysql.erl	/^result_type(#eof_packet{})    -> eof.$/;"	f	module:emysql
result_type	src/mysql/emysql/emysql.erl	/^result_type(#error_packet{})  -> error;$/;"	f	module:emysql
result_type	src/mysql/emysql/emysql.erl	/^result_type(#ok_packet{})     -> ok;$/;"	f	module:emysql
result_type	src/mysql/emysql/emysql.erl	/^result_type(#result_packet{}) -> result;$/;"	f	module:emysql
result_type	src/mysql/emysql/emysql_util.erl	/^result_type(R) -> emysql:result_type(R).$/;"	f	module:emysql_util
rnd	deps/mysql/mysql_auth.erl	/^rnd(0, List, _, _) ->$/;"	f	module:mysql_auth
rnd	deps/mysql/mysql_auth.erl	/^rnd(N, List, Seed1, Seed2) ->$/;"	f	module:mysql_auth
rnd	deps/mysql/mysql_auth.erl	/^rnd(N, Seed1, Seed2) ->$/;"	f	module:mysql_auth
rnd	src/mysql/emysql/emysql_auth.erl	/^rnd(0, List, _, _) ->$/;"	f	module:emysql_auth
rnd	src/mysql/emysql/emysql_auth.erl	/^rnd(N, List, Seed1, Seed2) ->$/;"	f	module:emysql_auth
rnd	src/mysql/emysql/emysql_auth.erl	/^rnd(N, Seed1, Seed2) ->$/;"	f	module:emysql_auth
rnd	src/mysql/mysql_auth.erl	/^rnd(0, List, _, _) ->$/;"	f	module:mysql_auth
rnd	src/mysql/mysql_auth.erl	/^rnd(N, List, Seed1, Seed2) ->$/;"	f	module:mysql_auth
rnd	src/mysql/mysql_auth.erl	/^rnd(N, Seed1, Seed2) ->$/;"	f	module:mysql_auth
rollback	deps/mysql/mysql_conn.erl	/^rollback(State, Err) ->$/;"	f	module:mysql_conn
rollback	src/mysql/mysql_conn.erl	/^rollback(State, Err) ->$/;"	f	module:mysql_conn
rotate_file_fail_test	deps/lager-master/src/lager_util.erl	/^rotate_file_fail_test() ->$/;"	f	module:lager_util
rotate_file_fail_test	src/lager/lager_util.erl	/^rotate_file_fail_test() ->$/;"	f	module:lager_util
rotate_file_test	deps/lager-master/src/lager_util.erl	/^rotate_file_test() ->$/;"	f	module:lager_util
rotate_file_test	src/lager/lager_util.erl	/^rotate_file_test() ->$/;"	f	module:lager_util
rotate_log	src/logger/logger_h.erl	/^rotate_log(Filename) ->$/;"	f	module:logger_h
rotate_logfile	deps/lager-master/src/lager_util.erl	/^rotate_logfile(File, 0) ->$/;"	f	module:lager_util
rotate_logfile	deps/lager-master/src/lager_util.erl	/^rotate_logfile(File, 1) ->$/;"	f	module:lager_util
rotate_logfile	deps/lager-master/src/lager_util.erl	/^rotate_logfile(File, Count) ->$/;"	f	module:lager_util
rotate_logfile	src/lager/lager_util.erl	/^rotate_logfile(File, 0) ->$/;"	f	module:lager_util
rotate_logfile	src/lager/lager_util.erl	/^rotate_logfile(File, 1) ->$/;"	f	module:lager_util
rotate_logfile	src/lager/lager_util.erl	/^rotate_logfile(File, Count) ->$/;"	f	module:lager_util
rotation_calculation_test	deps/lager-master/src/lager_util.erl	/^rotation_calculation_test() ->$/;"	f	module:lager_util
rotation_calculation_test	src/lager/lager_util.erl	/^rotation_calculation_test() ->$/;"	f	module:lager_util
rotation_test_	deps/lager-master/src/lager_file_backend.erl	/^rotation_test_() ->$/;"	f	module:lager_file_backend
rotation_test_	src/lager/lager_file_backend.erl	/^rotation_test_() ->$/;"	f	module:lager_file_backend
routing	src/mod/mod_reader.erl	/^routing(Cmd,Bin,Socket) ->$/;"	f	module:mod_reader
run_startcmds_or_die	src/mysql/emysql/emysql_conn.erl	/^run_startcmds_or_die(#emysql_connection{socket=Socket}, StartCmds) ->$/;"	f	module:emysql_conn
safe	deps/lager-master/src/lager_trunc_io.erl	/^safe(What, Len) ->$/;"	f	module:lager_trunc_io
safe	src/lager/lager_trunc_io.erl	/^safe(What, Len) ->$/;"	f	module:lager_trunc_io
safe_format	deps/lager-master/src/lager.erl	/^safe_format(Fmt, Args, Limit) ->$/;"	f	module:lager
safe_format	deps/lager-master/src/lager.erl	/^safe_format(Fmt, Args, Limit, Options) ->$/;"	f	module:lager
safe_format	src/lager/lager.erl	/^safe_format(Fmt, Args, Limit) ->$/;"	f	module:lager
safe_format	src/lager/lager.erl	/^safe_format(Fmt, Args, Limit, Options) ->$/;"	f	module:lager
safe_format_chop	deps/lager-master/src/lager.erl	/^safe_format_chop(Fmt, Args, Limit) ->$/;"	f	module:lager
safe_format_chop	src/lager/lager.erl	/^safe_format_chop(Fmt, Args, Limit) ->$/;"	f	module:lager
safe_format_test	deps/lager-master/test/lager_test_backend.erl	/^safe_format_test() ->$/;"	f	module:lager_test_backend
sane_float_printing_test	deps/lager-master/src/lager_trunc_io.erl	/^sane_float_printing_test() ->$/;"	f	module:lager_trunc_io
sane_float_printing_test	src/lager/lager_trunc_io.erl	/^sane_float_printing_test() ->$/;"	f	module:lager_trunc_io
sasl_limited_str	deps/lager-master/src/lager_crash_log.erl	/^sasl_limited_str(crash_report, Report, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
sasl_limited_str	deps/lager-master/src/lager_crash_log.erl	/^sasl_limited_str(progress, Report, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
sasl_limited_str	deps/lager-master/src/lager_crash_log.erl	/^sasl_limited_str(supervisor_report, Report, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
sasl_limited_str	src/lager/lager_crash_log.erl	/^sasl_limited_str(crash_report, Report, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
sasl_limited_str	src/lager/lager_crash_log.erl	/^sasl_limited_str(progress, Report, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
sasl_limited_str	src/lager/lager_crash_log.erl	/^sasl_limited_str(supervisor_report, Report, FmtMaxBytes) ->$/;"	f	module:lager_crash_log
sasl_type_to_report_head	deps/lager-master/src/lager_crash_log.erl	/^sasl_type_to_report_head(crash_report) ->$/;"	f	module:lager_crash_log
sasl_type_to_report_head	deps/lager-master/src/lager_crash_log.erl	/^sasl_type_to_report_head(progress) ->$/;"	f	module:lager_crash_log
sasl_type_to_report_head	deps/lager-master/src/lager_crash_log.erl	/^sasl_type_to_report_head(supervisor_report) ->$/;"	f	module:lager_crash_log
sasl_type_to_report_head	src/lager/lager_crash_log.erl	/^sasl_type_to_report_head(crash_report) ->$/;"	f	module:lager_crash_log
sasl_type_to_report_head	src/lager/lager_crash_log.erl	/^sasl_type_to_report_head(progress) ->$/;"	f	module:lager_crash_log
sasl_type_to_report_head	src/lager/lager_crash_log.erl	/^sasl_type_to_report_head(supervisor_report) ->$/;"	f	module:lager_crash_log
scan_and_parse	src/logger/dynamic_compile.erl	/^scan_and_parse(RemainingText, CurrFilename, CurrLine, RevForms, MacroDict, IncludeSearchPath) ->$/;"	f	module:dynamic_compile
scan_and_parse	src/logger/dynamic_compile.erl	/^scan_and_parse([], _CurrFilename, _CurrLine, RevForms, MacroDict, _IncludeSearchPath) ->$/;"	f	module:dynamic_compile
scanner	src/logger/dynamic_compile.erl	/^scanner(Text, Line, MacroDict) ->$/;"	f	module:dynamic_compile
schedule_rotation	deps/lager-master/src/lager_crash_log.erl	/^schedule_rotation(Date) ->$/;"	f	module:lager_crash_log
schedule_rotation	deps/lager-master/src/lager_crash_log.erl	/^schedule_rotation(undefined) ->$/;"	f	module:lager_crash_log
schedule_rotation	deps/lager-master/src/lager_file_backend.erl	/^schedule_rotation(Name, Date) ->$/;"	f	module:lager_file_backend
schedule_rotation	deps/lager-master/src/lager_file_backend.erl	/^schedule_rotation(_, undefined) ->$/;"	f	module:lager_file_backend
schedule_rotation	src/lager/lager_crash_log.erl	/^schedule_rotation(Date) ->$/;"	f	module:lager_crash_log
schedule_rotation	src/lager/lager_crash_log.erl	/^schedule_rotation(undefined) ->$/;"	f	module:lager_crash_log
schedule_rotation	src/lager/lager_file_backend.erl	/^schedule_rotation(Name, Date) ->$/;"	f	module:lager_file_backend
schedule_rotation	src/lager/lager_file_backend.erl	/^schedule_rotation(_, undefined) ->$/;"	f	module:lager_file_backend
send_and_recv_packet	src/mysql/emysql/emysql_tcp.erl	/^send_and_recv_packet(Sock, Packet, SeqNum) ->$/;"	f	module:emysql_tcp
send_msg	deps/mysql/mysql_conn.erl	/^send_msg(Pid, Msg, From, Timeout) ->$/;"	f	module:mysql_conn
send_msg	src/mysql/mysql_conn.erl	/^send_msg(Pid, Msg, From, Timeout) ->$/;"	f	module:mysql_conn
send_recv	src/mysql/emysql/emysql_conn.erl	/^send_recv(#emysql_connection{socket = Socket, warnings = Warnings}, Packet) ->$/;"	f	module:emysql_conn
send_reply	deps/mysql/mysql_conn.erl	/^send_reply(GenSrvFrom, Res) ->$/;"	f	module:mysql_conn
send_reply	deps/mysql/mysql_conn.erl	/^send_reply(GenSrvFrom, Res) when is_pid(GenSrvFrom) ->$/;"	f	module:mysql_conn
send_reply	src/mysql/mysql_conn.erl	/^send_reply(GenSrvFrom, Res) ->$/;"	f	module:mysql_conn
send_reply	src/mysql/mysql_conn.erl	/^send_reply(GenSrvFrom, Res) when is_pid(GenSrvFrom) ->$/;"	f	module:mysql_conn
sendpacket	deps/mysql/mysql_recv.erl	/^sendpacket(Parent, Data) ->$/;"	f	module:mysql_recv
sendpacket	src/mysql/mysql_recv.erl	/^sendpacket(Parent, Data) ->$/;"	f	module:mysql_recv
sep	deps/lager-master/src/lager_stdlib.erl	/^sep(1, S) -> S;$/;"	f	module:lager_stdlib
sep	deps/lager-master/src/lager_stdlib.erl	/^sep(_, S) -> [$\\n | S].$/;"	f	module:lager_stdlib
sep	src/lager/lager_stdlib.erl	/^sep(1, S) -> S;$/;"	f	module:lager_stdlib
sep	src/lager/lager_stdlib.erl	/^sep(_, S) -> [$\\n | S].$/;"	f	module:lager_stdlib
serve_waiting_pids	src/mysql/emysql/emysql_conn_mgr.erl	/^serve_waiting_pids(Pool) ->$/;"	f	module:emysql_conn_mgr
serve_waiting_pids	src/mysql/emysql/emysql_conn_mgr.erl	/^serve_waiting_pids(Waiting, Available, Locked, MonitorRefs) ->$/;"	f	module:emysql_conn_mgr
server_app	src/kernel/server_app.erl	/^-module(server_app).$/;"	m
server_sup	myfile/server_sup.erl	/^-module(server_sup).$/;"	m
server_sup	src/kernel/server_sup.erl	/^-module(server_sup).$/;"	m
set	deps/lager-master/src/lager_config.erl	/^set(Key, Value) ->$/;"	f	module:lager_config
set	src/lager/lager_config.erl	/^set(Key, Value) ->$/;"	f	module:lager_config
set	src/logger/loglevel.erl	/^set(LogLevel) when is_atom(LogLevel) ->$/;"	f	module:loglevel
set	src/logger/loglevel.erl	/^set(Loglevel) when is_integer(Loglevel) ->$/;"	f	module:loglevel
set	src/logger/loglevel.erl	/^set(_) ->$/;"	f	module:loglevel
set	src/misc/global_data_disk.erl	/^set(K,V) ->$/;"	f	module:global_data_disk
set	src/misc/global_data_ram.erl	/^set(K,V) ->$/;"	f	module:global_data_ram
set_beam_time	myfile/reloader.erl	/^set_beam_time(Name,Time) ->$/;"	f	module:reloader
set_database	src/mysql/emysql/emysql_conn.erl	/^set_database(Connection, Database) ->$/;"	f	module:emysql_conn
set_database	src/mysql/emysql/emysql_conn.erl	/^set_database(_, Empty) when Empty == ""; Empty == <<>> -> ok;$/;"	f	module:emysql_conn
set_database	src/mysql/emysql/emysql_conn.erl	/^set_database(_, undefined) -> ok;$/;"	f	module:emysql_conn
set_database_or_die	src/mysql/emysql/emysql_conn.erl	/^set_database_or_die(#emysql_connection { socket = Socket } = Connection, Database) ->$/;"	f	module:emysql_conn
set_encoding	src/mysql/emysql/emysql_conn.erl	/^set_encoding(Connection, Encoding) ->$/;"	f	module:emysql_conn
set_encoding	src/mysql/emysql/emysql_conn.erl	/^set_encoding(Connection, {Encoding, Collation}) ->$/;"	f	module:emysql_conn
set_encoding	src/mysql/emysql/emysql_conn.erl	/^set_encoding(_, undefined) -> ok;$/;"	f	module:emysql_conn
set_encoding_or_die	src/mysql/emysql/emysql_conn.erl	/^set_encoding_or_die(#emysql_connection { socket = Socket } = Connection, Encoding) ->$/;"	f	module:emysql_conn
set_high_water	deps/lager-master/src/error_logger_lager_h.erl	/^set_high_water(N) ->$/;"	f	module:error_logger_lager_h
set_high_water	src/lager/error_logger_lager_h.erl	/^set_high_water(N) ->$/;"	f	module:error_logger_lager_h
set_log_cache	src/logger/logger_h.erl	/^set_log_cache(L) ->$/;"	f	module:logger_h
set_log_ref	src/logger/logger_h.erl	/^set_log_ref(Ref) ->$/;"	f	module:logger_h
set_loglevel	deps/lager-master/src/lager.erl	/^set_loglevel(Handler, Ident, Level) when is_atom(Level) ->$/;"	f	module:lager
set_loglevel	deps/lager-master/src/lager.erl	/^set_loglevel(Handler, Level) when is_atom(Level) ->$/;"	f	module:lager
set_loglevel	src/lager/lager.erl	/^set_loglevel(Handler, Ident, Level) when is_atom(Level) ->$/;"	f	module:lager
set_loglevel	src/lager/lager.erl	/^set_loglevel(Handler, Level) when is_atom(Level) ->$/;"	f	module:lager
set_loglevel_test_	deps/lager-master/src/lager_console_backend.erl	/^set_loglevel_test_() ->$/;"	f	module:lager_console_backend
set_loglevel_test_	src/lager/lager_console_backend.erl	/^set_loglevel_test_() ->$/;"	f	module:lager_console_backend
set_params	src/mysql/emysql/emysql_conn.erl	/^set_params(Connection, Num, Values, _) ->$/;"	f	module:emysql_conn
set_params	src/mysql/emysql/emysql_conn.erl	/^set_params(_, _, [], Result) -> Result;$/;"	f	module:emysql_conn
set_params_packet	src/mysql/emysql/emysql_conn.erl	/^set_params_packet(NumStart, Values) ->$/;"	f	module:emysql_conn
set_reload_time	myfile/reloader.erl	/^set_reload_time(T) ->$/;"	f	module:reloader
set_sockopt	myfile/tcp_acceptor.erl	/^set_sockopt(LSock, Sock) ->$/;"	f	module:tcp_acceptor
set_sockopt	src/kernel/tcp_acceptor.erl	/^set_sockopt(LSock, Sock) ->$/;"	f	module:tcp_acceptor
setup	deps/lager-master/test/lager_test_backend.erl	/^setup() ->$/;"	f	module:lager_test_backend
severity	deps/lager-master/src/lager_msg.erl	/^severity(Msg) ->$/;"	f	module:lager_msg
severity	src/lager/lager_msg.erl	/^severity(Msg) ->$/;"	f	module:lager_msg
severity_as_int	deps/lager-master/src/lager_msg.erl	/^severity_as_int(Msg) ->$/;"	f	module:lager_msg
severity_as_int	src/lager/lager_msg.erl	/^severity_as_int(Msg) ->$/;"	f	module:lager_msg
shuffle_list	src/test/smdl.erl	/^shuffle_list(L) ->$/;"	f	module:smdl
smdl	src/test/smdl.erl	/^-module(smdl).$/;"	m
sort_options	myfile/mmake.erl	/^sort_options([H|T],Make,Comp) ->$/;"	f	module:mmake
sort_options	myfile/mmake.erl	/^sort_options([],Make,Comp) ->$/;"	f	module:mmake
sort_options	src/misc/mmake.erl	/^sort_options([H|T],Make,Comp) ->$/;"	f	module:mmake
sort_options	src/misc/mmake.erl	/^sort_options([],Make,Comp) ->$/;"	f	module:mmake
special_process	deps/lager-master/test/special_process.erl	/^-module(special_process).$/;"	m
start	deps/lager-master/src/lager.erl	/^start() -> start(lager).$/;"	f	module:lager
start	deps/lager-master/src/lager.erl	/^start(App) ->$/;"	f	module:lager
start	deps/lager-master/src/lager_app.erl	/^start() ->$/;"	f	module:lager_app
start	deps/lager-master/src/lager_app.erl	/^start(_StartType, _StartArgs) ->$/;"	f	module:lager_app
start	deps/lager-master/src/lager_crash_log.erl	/^start(Filename, MaxBytes, Size, Date, Count) ->$/;"	f	module:lager_crash_log
start	deps/lager-master/src/lager_handler_watcher.erl	/^start(Event, Module, Config) ->$/;"	f	module:lager_handler_watcher
start	deps/lager-master/test/crash.erl	/^start() ->$/;"	f	module:crash
start	deps/lager-master/test/special_process.erl	/^start() ->$/;"	f	module:special_process
start	deps/mysql/mysql.erl	/^start(PoolId, Host, Port, User, Password, Database) ->$/;"	f	module:mysql
start	deps/mysql/mysql.erl	/^start(PoolId, Host, Port, User, Password, Database, LogFun) ->$/;"	f	module:mysql
start	deps/mysql/mysql.erl	/^start(PoolId, Host, Port, User, Password, Database, LogFun, Encoding) ->$/;"	f	module:mysql
start	deps/mysql/mysql.erl	/^start(PoolId, Host, User, Password, Database) ->$/;"	f	module:mysql
start	deps/mysql/mysql.erl	/^start(PoolId, Host, undefined, User, Password, Database, LogFun) ->$/;"	f	module:mysql
start	deps/mysql/mysql.erl	/^start(PoolId, Host, undefined, User, Password, Database, LogFun, Encoding) ->$/;"	f	module:mysql
start	deps/mysql/mysql_conn.erl	/^start(Host, Port, User, Password, Database, LogFun, Encoding, PoolId) ->$/;"	f	module:mysql_conn
start	myfile/game_ctl.erl	/^start() ->$/;"	f	module:game_ctl
start	src/kernel/main.erl	/^start() ->$/;"	f	module:main
start	src/kernel/server_app.erl	/^start(Sup) ->$/;"	f	module:server_app
start	src/kernel/server_app.erl	/^start(normal, []) ->$/;"	f	module:server_app
start	src/kernel/tcp_client_sup.erl	/^start(Sup) ->$/;"	f	module:tcp_client_sup
start	src/kernel/tcp_listener_sup.erl	/^start(Sup, IP, Port, TcpOpt) ->$/;"	f	module:tcp_listener_sup
start	src/lager/lager.erl	/^start() -> start(lager).$/;"	f	module:lager
start	src/lager/lager.erl	/^start(App) ->$/;"	f	module:lager
start	src/lager/lager_app.erl	/^start() ->$/;"	f	module:lager_app
start	src/lager/lager_app.erl	/^start(_StartType, _StartArgs) ->$/;"	f	module:lager_app
start	src/lager/lager_crash_log.erl	/^start(Filename, MaxBytes, Size, Date, Count) ->$/;"	f	module:lager_crash_log
start	src/lager/lager_handler_watcher.erl	/^start(Event, Module, Config) ->$/;"	f	module:lager_handler_watcher
start	src/mod/gen_server2.erl	/^start(Mod,Args,Otps) ->$/;"	f	module:gen_server2
start	src/mod/gen_server2.erl	/^start(Name,Mod,Args,Otps) ->$/;"	f	module:gen_server2
start	src/mysql/emysql/emysql.erl	/^start() ->$/;"	f	module:emysql
start	src/mysql/emysql/emysql_app.erl	/^start(_Type, _StartArgs) ->$/;"	f	module:emysql_app
start	src/mysql/emysql/emysql_sup.erl	/^start(Sup) ->$/;"	f	module:emysql_sup
start	src/mysql/emysql/emysql_worker.erl	/^start(Module) ->$/;"	f	module:emysql_worker
start	src/mysql/mysql.erl	/^start(PoolId, Host, Port, User, Password, Database) ->$/;"	f	module:mysql
start	src/mysql/mysql.erl	/^start(PoolId, Host, Port, User, Password, Database, LogFun) ->$/;"	f	module:mysql
start	src/mysql/mysql.erl	/^start(PoolId, Host, Port, User, Password, Database, LogFun, Encoding) ->$/;"	f	module:mysql
start	src/mysql/mysql.erl	/^start(PoolId, Host, User, Password, Database) ->$/;"	f	module:mysql
start	src/mysql/mysql.erl	/^start(PoolId, Host, undefined, User, Password, Database, LogFun) ->$/;"	f	module:mysql
start	src/mysql/mysql.erl	/^start(PoolId, Host, undefined, User, Password, Database, LogFun, Encoding) ->$/;"	f	module:mysql
start	src/mysql/mysql_conn.erl	/^start(Host, Port, User, Password, Database, LogFun, Encoding, PoolId) ->$/;"	f	module:mysql_conn
start1	deps/mysql/mysql.erl	/^start1(PoolId, Host, Port, User, Password, Database, LogFun, Encoding,$/;"	f	module:mysql
start1	src/mysql/mysql.erl	/^start1(PoolId, Host, Port, User, Password, Database, LogFun, Encoding,$/;"	f	module:mysql
start_across_client	myfile/server_sup.erl	/^start_across_client(Args) ->$/;"	f	module:server_sup
start_applications	src/kernel/main.erl	/^start_applications(Apps) ->$/;"	f	module:main
start_child	myfile/server_sup.erl	/^start_child(ID,Mod, Args) ->$/;"	f	module:server_sup
start_child	myfile/server_sup.erl	/^start_child(Mod) -> $/;"	f	module:server_sup
start_child	myfile/server_sup.erl	/^start_child(Mod, Args) ->$/;"	f	module:server_sup
start_child	src/kernel/server_sup.erl	/^start_child(ID,Mod, Args) ->$/;"	f	module:server_sup
start_child	src/kernel/server_sup.erl	/^start_child(Mod) -> $/;"	f	module:server_sup
start_child	src/kernel/server_sup.erl	/^start_child(Mod, Args) ->$/;"	f	module:server_sup
start_client	myfile/tcp_acceptor.erl	/^start_client(Sock) ->$/;"	f	module:tcp_acceptor
start_client	src/kernel/tcp_acceptor.erl	/^start_client(Sock) ->$/;"	f	module:tcp_acceptor
start_link	deps/lager-master/src/lager_crash_log.erl	/^start_link(Filename, MaxBytes, Size, Date, Count) ->$/;"	f	module:lager_crash_log
start_link	deps/lager-master/src/lager_handler_watcher.erl	/^start_link(Event, Module, Config) ->$/;"	f	module:lager_handler_watcher
start_link	deps/lager-master/src/lager_handler_watcher_sup.erl	/^start_link() ->$/;"	f	module:lager_handler_watcher_sup
start_link	deps/lager-master/src/lager_sup.erl	/^start_link() ->$/;"	f	module:lager_sup
start_link	deps/mysql/mysql.erl	/^start_link(PoolId, Host, Port, User, Password, Database) ->$/;"	f	module:mysql
start_link	deps/mysql/mysql.erl	/^start_link(PoolId, Host, Port, User, Password, Database, LogFun) ->$/;"	f	module:mysql
start_link	deps/mysql/mysql.erl	/^start_link(PoolId, Host, Port, User, Password, Database, LogFun, Encoding) ->$/;"	f	module:mysql
start_link	deps/mysql/mysql.erl	/^start_link(PoolId, Host, User, Password, Database) ->$/;"	f	module:mysql
start_link	deps/mysql/mysql.erl	/^start_link(PoolId, Host, undefined, User, Password, Database, LogFun) ->$/;"	f	module:mysql
start_link	deps/mysql/mysql.erl	/^start_link(PoolId, Host, undefined, User, Password, Database, LogFun,$/;"	f	module:mysql
start_link	deps/mysql/mysql_conn.erl	/^start_link(Host, Port, User, Password, Database, LogFun, Encoding, PoolId) ->$/;"	f	module:mysql_conn
start_link	deps/mysql/mysql_recv.erl	/^start_link(Host, Port, LogFun, Parent) when is_list(Host), is_integer(Port) ->$/;"	f	module:mysql_recv
start_link	myfile/server_sup.erl	/^start_link() ->$/;"	f	module:server_sup
start_link	myfile/tcp_acceptor.erl	/^start_link(LSock) ->$/;"	f	module:tcp_acceptor
start_link	myfile/tcp_acceptor_sup.erl	/^start_link() ->$/;"	f	module:tcp_acceptor_sup
start_link	myfile/tcp_client_sup.erl	/^start_link() ->$/;"	f	module:tcp_client_sup
start_link	myfile/tcp_listener.erl	/^start_link(IPAddress, Port, SocketOpts) ->$/;"	f	module:tcp_listener
start_link	myfile/tcp_listener_sup.erl	/^start_link(IPAddress, Port, SocketOpts) ->$/;"	f	module:tcp_listener_sup
start_link	src/kernel/server_sup.erl	/^start_link() ->$/;"	f	module:server_sup
start_link	src/kernel/tcp_acceptor.erl	/^start_link(LSock) ->$/;"	f	module:tcp_acceptor
start_link	src/kernel/tcp_acceptor_sup.erl	/^start_link() ->$/;"	f	module:tcp_acceptor_sup
start_link	src/kernel/tcp_client_sup.erl	/^start_link() ->$/;"	f	module:tcp_client_sup
start_link	src/kernel/tcp_listener.erl	/^start_link(IPAddress, Port, SocketOpts) ->$/;"	f	module:tcp_listener
start_link	src/kernel/tcp_listener_sup.erl	/^start_link(IP, Port, TcpOpt) ->$/;"	f	module:tcp_listener_sup
start_link	src/lager/lager_crash_log.erl	/^start_link(Filename, MaxBytes, Size, Date, Count) ->$/;"	f	module:lager_crash_log
start_link	src/lager/lager_handler_watcher.erl	/^start_link(Event, Module, Config) ->$/;"	f	module:lager_handler_watcher
start_link	src/lager/lager_handler_watcher_sup.erl	/^start_link() ->$/;"	f	module:lager_handler_watcher_sup
start_link	src/lager/lager_sup.erl	/^start_link() ->$/;"	f	module:lager_sup
start_link	src/mod/gen_server2.erl	/^start_link(Mod,Args,Otps) ->$/;"	f	module:gen_server2
start_link	src/mod/gen_server2.erl	/^start_link(Name,Mod,Args,Otps) ->$/;"	f	module:gen_server2
start_link	src/mod/mod_reader.erl	/^start_link() ->$/;"	f	module:mod_reader
start_link	src/mysql/emysql/emysql_conn_mgr.erl	/^start_link() ->$/;"	f	module:emysql_conn_mgr
start_link	src/mysql/emysql/emysql_statements.erl	/^start_link() ->$/;"	f	module:emysql_statements
start_link	src/mysql/emysql/emysql_sup.erl	/^start_link() ->$/;"	f	module:emysql_sup
start_link	src/mysql/mysql.erl	/^start_link(PoolId, Host, Port, User, Password, Database) ->$/;"	f	module:mysql
start_link	src/mysql/mysql.erl	/^start_link(PoolId, Host, Port, User, Password, Database, LogFun) ->$/;"	f	module:mysql
start_link	src/mysql/mysql.erl	/^start_link(PoolId, Host, Port, User, Password, Database, LogFun, Encoding) ->$/;"	f	module:mysql
start_link	src/mysql/mysql.erl	/^start_link(PoolId, Host, User, Password, Database) ->$/;"	f	module:mysql
start_link	src/mysql/mysql.erl	/^start_link(PoolId, Host, undefined, User, Password, Database, LogFun) ->$/;"	f	module:mysql
start_link	src/mysql/mysql.erl	/^start_link(PoolId, Host, undefined, User, Password, Database, LogFun,$/;"	f	module:mysql
start_link	src/mysql/mysql_conn.erl	/^start_link(Host, Port, User, Password, Database, LogFun, Encoding, PoolId) ->$/;"	f	module:mysql_conn
start_link	src/mysql/mysql_recv.erl	/^start_link(Host, Port, LogFun, Parent) when is_list(Host), is_integer(Port) ->$/;"	f	module:mysql_recv
start_map	myfile/server_sup.erl	/^start_map(Args) ->$/;"	f	module:server_sup
start_map	src/kernel/server_sup.erl	/^start_map(Args) ->$/;"	f	module:server_sup
start_mysql	deps/mysql/db.erl	/^start_mysql(SupPid)->$/;"	f	module:db
start_mysql	src/mysql/db.erl	/^start_mysql(SupPid)->$/;"	f	module:db
start_mysql	src/mysql/emysql/edb.erl	/^start_mysql(SupPid)->$/;"	f	module:db
start_mysql_pool	deps/mysql/db.erl	/^start_mysql_pool(SupPid,ConnectCount)->$/;"	f	module:db
start_mysql_pool	src/mysql/db.erl	/^start_mysql_pool(SupPid,ConnectCount)->$/;"	f	module:db
start_mysql_pool	src/mysql/emysql/edb.erl	/^start_mysql_pool(SupPid,ConnectCount)->$/;"	f	module:db
start_ok	deps/lager-master/src/lager.erl	/^start_ok(App, {error, Reason}) ->$/;"	f	module:lager
start_ok	deps/lager-master/src/lager.erl	/^start_ok(App, {error, {not_started, Dep}}) ->$/;"	f	module:lager
start_ok	deps/lager-master/src/lager.erl	/^start_ok(_App, ok) -> ok;$/;"	f	module:lager
start_ok	deps/lager-master/src/lager.erl	/^start_ok(_App, {error, {already_started, _App}}) -> ok;$/;"	f	module:lager
start_ok	src/lager/lager.erl	/^start_ok(App, {error, Reason}) ->$/;"	f	module:lager
start_ok	src/lager/lager.erl	/^start_ok(App, {error, {not_started, Dep}}) ->$/;"	f	module:lager
start_ok	src/lager/lager.erl	/^start_ok(_App, ok) -> ok;$/;"	f	module:lager
start_ok	src/lager/lager.erl	/^start_ok(_App, {error, {already_started, _App}}) -> ok;$/;"	f	module:lager
start_reconnect	deps/mysql/mysql.erl	/^start_reconnect(Conn, LogFun) ->$/;"	f	module:mysql
start_reconnect	src/mysql/mysql.erl	/^start_reconnect(Conn, LogFun) ->$/;"	f	module:mysql
start_send	myfile/server_sup.erl	/^start_send(Args) ->$/;"	f	module:server_sup
start_send	src/kernel/server_sup.erl	/^start_send(Args) ->$/;"	f	module:server_sup
start_user	myfile/server_sup.erl	/^start_user(Args) ->$/;"	f	module:server_sup
start_user	src/kernel/server_sup.erl	/^start_user(Args) ->$/;"	f	module:server_sup
start_worker	myfile/mmake.erl	/^start_worker(F, Opts, NoExec, Load, Parent, Ref) ->$/;"	f	module:mmake
start_worker	src/misc/mmake.erl	/^start_worker(F, Opts, NoExec, Load, Parent, Ref) ->$/;"	f	module:mmake
start_worker	src/mysql/emysql/emysql_worker.erl	/^start_worker(Parent, Module) ->$/;"	f	module:emysql_worker
stash_record	deps/lager-master/src/lager_transform.erl	/^stash_record(Record) ->$/;"	f	module:lager_transform
stash_record	src/lager/lager_transform.erl	/^stash_record(Record) ->$/;"	f	module:lager_transform
state	deps/lager-master/src/error_logger_lager_h.erl	/^-record(state, {$/;"	r
state	deps/lager-master/src/lager_backend_throttle.erl	/^-record(state, {$/;"	r
state	deps/lager-master/src/lager_common_test_backend.erl	/^-record(state, {level :: {mask, integer()},$/;"	r
state	deps/lager-master/src/lager_console_backend.erl	/^-record(state, {level :: {'mask', integer()},$/;"	r
state	deps/lager-master/src/lager_crash_log.erl	/^-record(state, {$/;"	r
state	deps/lager-master/src/lager_file_backend.erl	/^-record(state, {$/;"	r
state	deps/lager-master/src/lager_handler_watcher.erl	/^-record(state, {$/;"	r
state	deps/lager-master/test/crash.erl	/^-record(state, {$/;"	r
state	deps/lager-master/test/lager_test_backend.erl	/^-record(state, {level, buffer, ignored}).$/;"	r
state	deps/mysql/mysql.erl	/^-record(state, {$/;"	r
state	deps/mysql/mysql_conn.erl	/^-record(state, {$/;"	r
state	deps/mysql/mysql_recv.erl	/^-record(state, {$/;"	r
state	myfile/tcp_acceptor.erl	/^-record(state, {sock, ref}).$/;"	r
state	myfile/tcp_listener.erl	/^-record(state, {sock}).$/;"	r
state	src/kernel/tcp_acceptor.erl	/^-record(state, {sock, ref}).$/;"	r
state	src/kernel/tcp_listener.erl	/^-record(state, {sock}).$/;"	r
state	src/lager/error_logger_lager_h.erl	/^-record(state, {$/;"	r
state	src/lager/lager_backend_throttle.erl	/^-record(state, {$/;"	r
state	src/lager/lager_common_test_backend.erl	/^-record(state, {level :: {mask, integer()},$/;"	r
state	src/lager/lager_console_backend.erl	/^-record(state, {level :: {'mask', integer()},$/;"	r
state	src/lager/lager_crash_log.erl	/^-record(state, {$/;"	r
state	src/lager/lager_file_backend.erl	/^-record(state, {$/;"	r
state	src/lager/lager_handler_watcher.erl	/^-record(state, {$/;"	r
state	src/logger/logger_h.erl	/^-record(state, {fd, file}).$/;"	r
state	src/mod/mod_reader.erl	/^-record(state,{socket,	        %% 控制权转交后需测试socket为 undefined$/;"	r
state	src/mysql/emysql/emysql_conn_mgr.erl	/^-record(state, {pools, lockers = dict:new() :: dict()}).$/;"	r
state	src/mysql/emysql/emysql_statements.erl	/^-record(state, {statements=gb_trees:empty(), prepared=gb_trees:empty()}).$/;"	r
state	src/mysql/mysql.erl	/^-record(state, {$/;"	r
state	src/mysql/mysql_conn.erl	/^-record(state, {$/;"	r
state	src/mysql/mysql_recv.erl	/^-record(state, {$/;"	r
status	deps/lager-master/src/lager.erl	/^status() ->$/;"	f	module:lager
status	src/lager/lager.erl	/^status() ->$/;"	f	module:lager
status_apply	src/mod/gen_server2.erl	/^status_apply(Pid,Fun) ->$/;"	f	module:gen_server2
stop	deps/lager-master/src/lager_app.erl	/^stop(Handlers) ->$/;"	f	module:lager_app
stop	deps/mysql/db.erl	/^stop() ->$/;"	f	module:db
stop	deps/mysql/mysql.erl	/^stop() ->$/;"	f	module:mysql
stop	src/kernel/main.erl	/^stop() ->$/;"	f	module:main
stop	src/kernel/server_app.erl	/^stop(_) ->$/;"	f	module:server_app
stop	src/lager/lager_app.erl	/^stop(Handlers) ->$/;"	f	module:lager_app
stop	src/misc/global_data_disk.erl	/^stop() ->$/;"	f	module:global_data_disk
stop	src/mod/gen_server2.erl	/^stop(Pid) ->$/;"	f	module:gen_server2
stop	src/mod/mod_reader.erl	/^stop(Pid) ->$/;"	f	module:mod_reader
stop	src/mysql/db.erl	/^stop() ->$/;"	f	module:db
stop	src/mysql/emysql/edb.erl	/^stop() ->$/;"	f	module:db
stop	src/mysql/emysql/emysql.erl	/^stop() ->$/;"	f	module:emysql
stop	src/mysql/emysql/emysql_app.erl	/^stop(_State) ->$/;"	f	module:emysql_app
stop	src/mysql/mysql.erl	/^stop() ->$/;"	f	module:mysql
stop_applications	src/kernel/main.erl	/^stop_applications(Apps) ->$/;"	f	module:main
stop_trace	deps/lager-master/src/lager.erl	/^stop_trace(Backend, Filter, Level) ->$/;"	f	module:lager
stop_trace	deps/lager-master/src/lager.erl	/^stop_trace({Backend, Filter, Level}) ->$/;"	f	module:lager
stop_trace	src/lager/lager.erl	/^stop_trace(Backend, Filter, Level) ->$/;"	f	module:lager
stop_trace	src/lager/lager.erl	/^stop_trace({Backend, Filter, Level}) ->$/;"	f	module:lager
stop_trace_int	deps/lager-master/src/lager.erl	/^stop_trace_int({Backend, _Filter, _Level} = Trace) ->$/;"	f	module:lager
stop_trace_int	src/lager/lager.erl	/^stop_trace_int({Backend, _Filter, _Level} = Trace) ->$/;"	f	module:lager
string	deps/lager-master/src/lager_format.erl	/^string(S, F, Adj, P, Pad) when F >= P ->$/;"	f	module:lager_format
string	deps/lager-master/src/lager_format.erl	/^string(S, F, Adj, none, Pad) ->$/;"	f	module:lager_format
string	deps/lager-master/src/lager_format.erl	/^string(S, none, _Adj, P, Pad) ->$/;"	f	module:lager_format
string	deps/lager-master/src/lager_format.erl	/^string(S, none, _Adj, none, _Pad) -> S;$/;"	f	module:lager_format
string	src/lager/lager_format.erl	/^string(S, F, Adj, P, Pad) when F >= P ->$/;"	f	module:lager_format
string	src/lager/lager_format.erl	/^string(S, F, Adj, none, Pad) ->$/;"	f	module:lager_format
string	src/lager/lager_format.erl	/^string(S, none, _Adj, P, Pad) ->$/;"	f	module:lager_format
string	src/lager/lager_format.erl	/^string(S, none, _Adj, none, _Pad) -> S;$/;"	f	module:lager_format
string_field	deps/lager-master/src/lager_format.erl	/^string_field(S, F, Adj, N, Pad) when N < F ->$/;"	f	module:lager_format
string_field	deps/lager-master/src/lager_format.erl	/^string_field(S, F, _Adj, N, _Pad) when N > F ->$/;"	f	module:lager_format
string_field	deps/lager-master/src/lager_format.erl	/^string_field(S, _, _, _, _) -> % N == F$/;"	f	module:lager_format
string_field	src/lager/lager_format.erl	/^string_field(S, F, Adj, N, Pad) when N < F ->$/;"	f	module:lager_format
string_field	src/lager/lager_format.erl	/^string_field(S, F, _Adj, N, _Pad) when N > F ->$/;"	f	module:lager_format
string_field	src/lager/lager_format.erl	/^string_field(S, _, _, _, _) -> % N == F$/;"	f	module:lager_format
string_p	deps/lager-master/src/lager_stdlib.erl	/^string_p(Term) ->$/;"	f	module:lager_stdlib
string_p	deps/lager-master/src/lager_stdlib.erl	/^string_p([]) ->$/;"	f	module:lager_stdlib
string_p	src/lager/lager_stdlib.erl	/^string_p(Term) ->$/;"	f	module:lager_stdlib
string_p	src/lager/lager_stdlib.erl	/^string_p([]) ->$/;"	f	module:lager_stdlib
string_p	src/logger/logger_h.erl	/^string_p(Term) ->$/;"	f	module:logger_h
string_p	src/logger/logger_h.erl	/^string_p([]) ->$/;"	f	module:logger_h
string_p1	deps/lager-master/src/lager_stdlib.erl	/^string_p1([$\\b|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	deps/lager-master/src/lager_stdlib.erl	/^string_p1([$\\e|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	deps/lager-master/src/lager_stdlib.erl	/^string_p1([$\\f|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	deps/lager-master/src/lager_stdlib.erl	/^string_p1([$\\n|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	deps/lager-master/src/lager_stdlib.erl	/^string_p1([$\\r|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	deps/lager-master/src/lager_stdlib.erl	/^string_p1([$\\t|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	deps/lager-master/src/lager_stdlib.erl	/^string_p1([$\\v|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	deps/lager-master/src/lager_stdlib.erl	/^string_p1([H|T]) when is_integer(H), H >= $\\s, H < 255 ->$/;"	f	module:lager_stdlib
string_p1	deps/lager-master/src/lager_stdlib.erl	/^string_p1([H|T]) when is_list(H) ->$/;"	f	module:lager_stdlib
string_p1	deps/lager-master/src/lager_stdlib.erl	/^string_p1([]) -> true;$/;"	f	module:lager_stdlib
string_p1	deps/lager-master/src/lager_stdlib.erl	/^string_p1(_) ->  false.$/;"	f	module:lager_stdlib
string_p1	src/lager/lager_stdlib.erl	/^string_p1([$\\b|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	src/lager/lager_stdlib.erl	/^string_p1([$\\e|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	src/lager/lager_stdlib.erl	/^string_p1([$\\f|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	src/lager/lager_stdlib.erl	/^string_p1([$\\n|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	src/lager/lager_stdlib.erl	/^string_p1([$\\r|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	src/lager/lager_stdlib.erl	/^string_p1([$\\t|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	src/lager/lager_stdlib.erl	/^string_p1([$\\v|T]) -> string_p1(T);$/;"	f	module:lager_stdlib
string_p1	src/lager/lager_stdlib.erl	/^string_p1([H|T]) when is_integer(H), H >= $\\s, H < 255 ->$/;"	f	module:lager_stdlib
string_p1	src/lager/lager_stdlib.erl	/^string_p1([H|T]) when is_list(H) ->$/;"	f	module:lager_stdlib
string_p1	src/lager/lager_stdlib.erl	/^string_p1([]) -> true;$/;"	f	module:lager_stdlib
string_p1	src/lager/lager_stdlib.erl	/^string_p1(_) ->  false.$/;"	f	module:lager_stdlib
string_p1	src/logger/logger_h.erl	/^string_p1([$\\b|T]) -> string_p1(T);$/;"	f	module:logger_h
string_p1	src/logger/logger_h.erl	/^string_p1([$\\e|T]) -> string_p1(T);$/;"	f	module:logger_h
string_p1	src/logger/logger_h.erl	/^string_p1([$\\f|T]) -> string_p1(T);$/;"	f	module:logger_h
string_p1	src/logger/logger_h.erl	/^string_p1([$\\n|T]) -> string_p1(T);$/;"	f	module:logger_h
string_p1	src/logger/logger_h.erl	/^string_p1([$\\r|T]) -> string_p1(T);$/;"	f	module:logger_h
string_p1	src/logger/logger_h.erl	/^string_p1([$\\t|T]) -> string_p1(T);$/;"	f	module:logger_h
string_p1	src/logger/logger_h.erl	/^string_p1([$\\v|T]) -> string_p1(T);$/;"	f	module:logger_h
string_p1	src/logger/logger_h.erl	/^string_p1([H|T]) when is_integer(H), H >= $\\s, H < 255 ->$/;"	f	module:logger_h
string_p1	src/logger/logger_h.erl	/^string_p1([H|T]) when is_list(H) ->$/;"	f	module:logger_h
string_p1	src/logger/logger_h.erl	/^string_p1([]) -> true;$/;"	f	module:logger_h
string_p1	src/logger/logger_h.erl	/^string_p1(_) ->  false.$/;"	f	module:logger_h
subst_macros	src/logger/dynamic_compile.erl	/^subst_macros(Toks, MacroDict) ->$/;"	f	module:dynamic_compile
subst_macros_get_args	src/logger/dynamic_compile.erl	/^subst_macros_get_args([{')',_} | Toks], RevArgs) ->$/;"	f	module:dynamic_compile
subst_macros_get_args	src/logger/dynamic_compile.erl	/^subst_macros_get_args([{',',_}, {var,_,ArgName} | Toks], RevArgs) ->$/;"	f	module:dynamic_compile
subst_macros_get_args	src/logger/dynamic_compile.erl	/^subst_macros_get_args([{var,_,ArgName} | Toks], RevArgs) ->$/;"	f	module:dynamic_compile
subst_macros_rev	src/logger/dynamic_compile.erl	/^subst_macros_rev(Toks, MacroDict, [Tok|RevOutToks]);$/;"	f	module:dynamic_compile
subst_macros_rev	src/logger/dynamic_compile.erl	/^subst_macros_rev([Tok|Toks], MacroDict,  RevOutToks) ->$/;"	f	module:dynamic_compile
subst_macros_rev	src/logger/dynamic_compile.erl	/^subst_macros_rev([], _MacroDict, RevOutToks) -> RevOutToks.$/;"	f	module:dynamic_compile
subst_macros_rev	src/logger/dynamic_compile.erl	/^subst_macros_rev([{'?',_}, {_,LineNum,'LINE'} | Toks], MacroDict, RevOutToks) ->$/;"	f	module:dynamic_compile
subst_macros_rev	src/logger/dynamic_compile.erl	/^subst_macros_rev([{'?',_}, {_,_,Name} | Toks], MacroDict, RevOutToks) ->$/;"	f	module:dynamic_compile
subst_macros_rev	src/logger/dynamic_compile.erl	/^subst_macros_rev([{'?',_}, {_,_,Name}, {'(',_} = Paren | Toks], MacroDict, RevOutToks) ->$/;"	f	module:dynamic_compile
subst_macros_subst_args_for_vars	src/logger/dynamic_compile.erl	/^subst_macros_subst_args_for_vars({[Param | Params], BodyToks}, [Arg|Args]) ->$/;"	f	module:dynamic_compile
subst_macros_subst_args_for_vars	src/logger/dynamic_compile.erl	/^subst_macros_subst_args_for_vars({[], BodyToks}, []) ->$/;"	f	module:dynamic_compile
sup_get	deps/lager-master/src/lager_stdlib.erl	/^sup_get(Tag, Report) ->$/;"	f	module:lager_stdlib
sup_get	src/lager/lager_stdlib.erl	/^sup_get(Tag, Report) ->$/;"	f	module:lager_stdlib
supervisor_name	deps/lager-master/src/error_logger_lager_h.erl	/^supervisor_name(Name) -> Name.$/;"	f	module:error_logger_lager_h
supervisor_name	deps/lager-master/src/error_logger_lager_h.erl	/^supervisor_name({local, Name}) -> Name;$/;"	f	module:error_logger_lager_h
supervisor_name	src/lager/error_logger_lager_h.erl	/^supervisor_name(Name) -> Name.$/;"	f	module:error_logger_lager_h
supervisor_name	src/lager/error_logger_lager_h.erl	/^supervisor_name({local, Name}) -> Name;$/;"	f	module:error_logger_lager_h
switch_db	deps/mysql/db.erl	/^switch_db() ->$/;"	f	module:db
switch_db	src/mysql/db.erl	/^switch_db() ->$/;"	f	module:db
switch_db	src/mysql/emysql/edb.erl	/^switch_db() ->$/;"	f	module:db
sync	src/misc/global_data_disk.erl	/^sync() ->$/;"	f	module:global_data_disk
sync_apply	src/mod/gen_server2.erl	/^sync_apply(Pid,Fun) ->$/;"	f	module:gen_server2
sync_error_logger	deps/lager-master/test/sync_error_logger.erl	/^-module(sync_error_logger).$/;"	m
sync_mfa	src/mod/gen_server2.erl	/^sync_mfa(Pid,Mod,Fun,Args) ->$/;"	f	module:gen_server2
sync_status	src/mod/gen_server2.erl	/^sync_status(Pid,Mod,Fun,Args) ->$/;"	f	module:gen_server2
sync_stop	src/mod/gen_server2.erl	/^sync_stop(Pid) ->$/;"	f	module:gen_server2
t	deps/lager-master/src/lager_stdlib.erl	/^t(X) when is_integer(X) ->$/;"	f	module:lager_stdlib
t	deps/lager-master/src/lager_stdlib.erl	/^t(_) ->$/;"	f	module:lager_stdlib
t	src/lager/lager_stdlib.erl	/^t(X) when is_integer(X) ->$/;"	f	module:lager_stdlib
t	src/lager/lager_stdlib.erl	/^t(_) ->$/;"	f	module:lager_stdlib
t1	deps/lager-master/src/lager_stdlib.erl	/^t1(X)   -> X.$/;"	f	module:lager_stdlib
t1	deps/lager-master/src/lager_stdlib.erl	/^t1([X]) -> [$0,X];$/;"	f	module:lager_stdlib
t1	src/lager/lager_stdlib.erl	/^t1(X)   -> X.$/;"	f	module:lager_stdlib
t1	src/lager/lager_stdlib.erl	/^t1([X]) -> [$0,X];$/;"	f	module:lager_stdlib
tcp_acceptor	myfile/tcp_acceptor.erl	/^-module(tcp_acceptor).$/;"	m
tcp_acceptor	src/kernel/tcp_acceptor.erl	/^-module(tcp_acceptor).$/;"	m
tcp_acceptor_sup	myfile/tcp_acceptor_sup.erl	/^-module(tcp_acceptor_sup).$/;"	m
tcp_acceptor_sup	src/kernel/tcp_acceptor_sup.erl	/^-module(tcp_acceptor_sup).$/;"	m
tcp_client_sup	myfile/tcp_client_sup.erl	/^-module(tcp_client_sup).$/;"	m
tcp_client_sup	src/kernel/tcp_client_sup.erl	/^-module(tcp_client_sup).$/;"	m
tcp_listener	myfile/tcp_listener.erl	/^-module(tcp_listener).$/;"	m
tcp_listener	src/kernel/tcp_listener.erl	/^-module(tcp_listener).$/;"	m
tcp_listener_sup	myfile/tcp_listener_sup.erl	/^-module(tcp_listener_sup).$/;"	m
tcp_listener_sup	src/kernel/tcp_listener_sup.erl	/^-module(tcp_listener_sup).$/;"	m
term	deps/lager-master/src/lager_format.erl	/^term(T, F, Adj, P0, Pad) ->$/;"	f	module:lager_format
term	deps/lager-master/src/lager_format.erl	/^term(T, none, Adj, P, Pad) -> term(T, P, Adj, P, Pad);$/;"	f	module:lager_format
term	deps/lager-master/src/lager_format.erl	/^term(T, none, _Adj, none, _Pad) -> T;$/;"	f	module:lager_format
term	src/lager/lager_format.erl	/^term(T, F, Adj, P0, Pad) ->$/;"	f	module:lager_format
term	src/lager/lager_format.erl	/^term(T, none, Adj, P, Pad) -> term(T, P, Adj, P, Pad);$/;"	f	module:lager_format
term	src/lager/lager_format.erl	/^term(T, none, _Adj, none, _Pad) -> T;$/;"	f	module:lager_format
term_to_abstract	src/misc/wg_dynamic_config.erl	/^term_to_abstract(Module, _KeyPos,[]) ->$/;"	f	module:wg_dynamic_config
term_to_abstract	src/misc/wg_dynamic_config.erl	/^term_to_abstract(Module,KeyPos,L) ->$/;"	f	module:wg_dynamic_config
terminate	deps/lager-master/src/error_logger_lager_h.erl	/^terminate(_Reason, _State) ->$/;"	f	module:error_logger_lager_h
terminate	deps/lager-master/src/lager_backend_throttle.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_backend_throttle
terminate	deps/lager-master/src/lager_common_test_backend.erl	/^terminate(_Reason, #state{log=Logs}) ->$/;"	f	module:lager_common_test_backend
terminate	deps/lager-master/src/lager_console_backend.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_console_backend
terminate	deps/lager-master/src/lager_crash_log.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_crash_log
terminate	deps/lager-master/src/lager_file_backend.erl	/^terminate(_Reason, #state{fd=FD}) ->$/;"	f	module:lager_file_backend
terminate	deps/lager-master/src/lager_handler_watcher.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_handler_watcher
terminate	deps/lager-master/test/crash.erl	/^terminate(_, _) ->$/;"	f	module:crash
terminate	deps/lager-master/test/lager_crash_backend.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_crash_backend
terminate	deps/lager-master/test/lager_test_backend.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_test_backend
terminate	deps/mysql/mysql.erl	/^terminate(Reason, State) ->$/;"	f	module:mysql
terminate	myfile/tcp_acceptor.erl	/^terminate(_Reason, _State) ->$/;"	f	module:tcp_acceptor
terminate	myfile/tcp_listener.erl	/^terminate(Reason, #state{sock=LSock}) ->$/;"	f	module:tcp_listener
terminate	src/kernel/tcp_acceptor.erl	/^terminate(_Reason, _State) ->$/;"	f	module:tcp_acceptor
terminate	src/kernel/tcp_listener.erl	/^terminate(Reason, #state{sock=LSock}) ->$/;"	f	module:tcp_listener
terminate	src/lager/error_logger_lager_h.erl	/^terminate(_Reason, _State) ->$/;"	f	module:error_logger_lager_h
terminate	src/lager/lager_backend_throttle.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_backend_throttle
terminate	src/lager/lager_common_test_backend.erl	/^terminate(_Reason, #state{log=Logs}) ->$/;"	f	module:lager_common_test_backend
terminate	src/lager/lager_console_backend.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_console_backend
terminate	src/lager/lager_crash_log.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_crash_log
terminate	src/lager/lager_file_backend.erl	/^terminate(_Reason, #state{fd=FD}) ->$/;"	f	module:lager_file_backend
terminate	src/lager/lager_handler_watcher.erl	/^terminate(_Reason, _State) ->$/;"	f	module:lager_handler_watcher
terminate	src/logger/logger_h.erl	/^terminate(_Reason, #state{fd = Fd}) ->$/;"	f	module:logger_h
terminate	src/mod/gen_server2.erl	/^terminate(Reason, State) ->$/;"	f	module:gen_server2
terminate	src/mysql/emysql/emysql_conn_mgr.erl	/^terminate(_Reason, _State) ->$/;"	f	module:emysql_conn_mgr
terminate	src/mysql/emysql/emysql_statements.erl	/^terminate(_Reason, _State) ->$/;"	f	module:emysql_statements
terminate	src/mysql/mysql.erl	/^terminate(Reason, State) ->$/;"	f	module:mysql
test	deps/lager-master/src/lager_trunc_io.erl	/^test() ->$/;"	f	module:lager_trunc_io
test	deps/lager-master/src/lager_trunc_io.erl	/^test(Mod, Func) ->$/;"	f	module:lager_trunc_io
test	deps/lager-master/test/lager_test_backend.erl	/^-record(test, {attrs, format, args}).$/;"	r
test	deps/lager-master/test/trunc_io_eqc.erl	/^test() ->$/;"	f	module:trunc_io_eqc
test	deps/lager-master/test/trunc_io_eqc.erl	/^test(N) ->$/;"	f	module:trunc_io_eqc
test	deps/mysql/db.erl	/^test() ->$/;"	f	module:db
test	src/lager/lager_trunc_io.erl	/^test() ->$/;"	f	module:lager_trunc_io
test	src/lager/lager_trunc_io.erl	/^test(Mod, Func) ->$/;"	f	module:lager_trunc_io
test	src/mysql/db.erl	/^test() ->$/;"	f	module:db
test	src/mysql/emysql/edb.erl	/^test() ->$/;"	f	module:db
test	src/test/smdl.erl	/^test(N) ->$/;"	f	module:smdl
test1	src/test/smdl.erl	/^test1(N) when N > 0 ->$/;"	f	module:smdl
test1	src/test/smdl.erl	/^test1(_) -> $/;"	f	module:smdl
test_body	deps/lager-master/test/lager_test_backend.erl	/^test_body(Expected, Actual) ->$/;"	f	module:lager_test_backend
test_connection	src/mysql/emysql/emysql_conn.erl	/^test_connection(Conn, StayLocked) ->$/;"	f	module:emysql_conn
timestamp	deps/lager-master/src/lager_msg.erl	/^timestamp(Msg) ->$/;"	f	module:lager_msg
timestamp	src/lager/lager_msg.erl	/^timestamp(Msg) ->$/;"	f	module:lager_msg
to_bit	src/mysql/emysql/emysql_tcp.erl	/^to_bit(<<0>>) -> 0.$/;"	f	module:emysql_tcp
to_bit	src/mysql/emysql/emysql_tcp.erl	/^to_bit(<<1>>) -> 1;$/;"	f	module:emysql_tcp
to_date	src/mysql/emysql/emysql_tcp.erl	/^to_date(Data) ->$/;"	f	module:emysql_tcp
to_float	src/mysql/emysql/emysql_tcp.erl	/^to_float(Data) ->$/;"	f	module:emysql_tcp
to_integer	src/misc/util.erl	/^to_integer(Msg) when is_binary(Msg) ->$/;"	f	module:util
to_integer	src/misc/util.erl	/^to_integer(Msg) when is_float(Msg) -> round(Msg);$/;"	f	module:util
to_integer	src/misc/util.erl	/^to_integer(Msg) when is_integer(Msg) -> Msg;$/;"	f	module:util
to_integer	src/misc/util.erl	/^to_integer(Msg) when is_list(Msg) ->$/;"	f	module:util
to_integer	src/misc/util.erl	/^to_integer(_Msg) -> throw(other_value).$/;"	f	module:util
to_integer	src/mysql/emysql/emysql_tcp.erl	/^to_integer(Data) -> list_to_integer(binary_to_list(Data)).$/;"	f	module:emysql_tcp
to_list	src/misc/util.erl	/^to_list(Msg) when is_atom(Msg) -> atom_to_list(Msg);$/;"	f	module:util
to_list	src/misc/util.erl	/^to_list(Msg) when is_binary(Msg) -> binary_to_list(Msg);$/;"	f	module:util
to_list	src/misc/util.erl	/^to_list(Msg) when is_float(Msg) -> f2s(Msg);$/;"	f	module:util
to_list	src/misc/util.erl	/^to_list(Msg) when is_integer(Msg) -> integer_to_list(Msg);$/;"	f	module:util
to_list	src/misc/util.erl	/^to_list(Msg) when is_list(Msg) -> Msg;$/;"	f	module:util
to_list	src/misc/util.erl	/^to_list(Msg) when is_tuple(Msg) -> tuple_to_list(Msg);$/;"	f	module:util
to_list	src/misc/util.erl	/^to_list(_) -> throw(other_value).$/;"	f	module:util
to_time	src/mysql/emysql/emysql_tcp.erl	/^to_time(Data) ->$/;"	f	module:emysql_tcp
to_timestamp	src/mysql/emysql/emysql_tcp.erl	/^to_timestamp(Data) ->$/;"	f	module:emysql_tcp
trace	deps/lager-master/src/lager.erl	/^trace(Backend, Filter) ->$/;"	f	module:lager
trace	deps/lager-master/src/lager.erl	/^trace(Backend, Filter, Level) ->$/;"	f	module:lager
trace	deps/lager-master/src/lager.erl	/^trace({lager_file_backend, File}, Filter, Level) ->$/;"	f	module:lager
trace	src/lager/lager.erl	/^trace(Backend, Filter) ->$/;"	f	module:lager
trace	src/lager/lager.erl	/^trace(Backend, Filter, Level) ->$/;"	f	module:lager
trace	src/lager/lager.erl	/^trace({lager_file_backend, File}, Filter, Level) ->$/;"	f	module:lager
trace_acc	deps/lager-master/src/lager_util.erl	/^trace_acc(Query) ->$/;"	f	module:lager_util
trace_acc	deps/lager-master/src/lager_util.erl	/^trace_acc([], Acc) -> $/;"	f	module:lager_util
trace_acc	deps/lager-master/src/lager_util.erl	/^trace_acc([{Key, '!'}|T], Acc) ->$/;"	f	module:lager_util
trace_acc	deps/lager-master/src/lager_util.erl	/^trace_acc([{Key, '*'}|T], Acc) ->$/;"	f	module:lager_util
trace_acc	deps/lager-master/src/lager_util.erl	/^trace_acc([{Key, '<', Val}|T], Acc) ->$/;"	f	module:lager_util
trace_acc	deps/lager-master/src/lager_util.erl	/^trace_acc([{Key, '=', Val}|T], Acc) ->$/;"	f	module:lager_util
trace_acc	deps/lager-master/src/lager_util.erl	/^trace_acc([{Key, '>', Val}|T], Acc) ->$/;"	f	module:lager_util
trace_acc	deps/lager-master/src/lager_util.erl	/^trace_acc([{Key, Val}|T], Acc) ->$/;"	f	module:lager_util
trace_acc	src/lager/lager_util.erl	/^trace_acc(Query) ->$/;"	f	module:lager_util
trace_acc	src/lager/lager_util.erl	/^trace_acc([], Acc) -> $/;"	f	module:lager_util
trace_acc	src/lager/lager_util.erl	/^trace_acc([{Key, '!'}|T], Acc) ->$/;"	f	module:lager_util
trace_acc	src/lager/lager_util.erl	/^trace_acc([{Key, '*'}|T], Acc) ->$/;"	f	module:lager_util
trace_acc	src/lager/lager_util.erl	/^trace_acc([{Key, '<', Val}|T], Acc) ->$/;"	f	module:lager_util
trace_acc	src/lager/lager_util.erl	/^trace_acc([{Key, '=', Val}|T], Acc) ->$/;"	f	module:lager_util
trace_acc	src/lager/lager_util.erl	/^trace_acc([{Key, '>', Val}|T], Acc) ->$/;"	f	module:lager_util
trace_acc	src/lager/lager_util.erl	/^trace_acc([{Key, Val}|T], Acc) ->$/;"	f	module:lager_util
trace_all	deps/lager-master/src/lager_util.erl	/^trace_all(Query) -> $/;"	f	module:lager_util
trace_all	src/lager/lager_util.erl	/^trace_all(Query) -> $/;"	f	module:lager_util
trace_any	deps/lager-master/src/lager_util.erl	/^trace_any(Query) -> $/;"	f	module:lager_util
trace_any	src/lager/lager_util.erl	/^trace_any(Query) -> $/;"	f	module:lager_util
trace_console	deps/lager-master/src/lager.erl	/^trace_console(Filter) ->$/;"	f	module:lager
trace_console	deps/lager-master/src/lager.erl	/^trace_console(Filter, Level) ->$/;"	f	module:lager
trace_console	src/lager/lager.erl	/^trace_console(Filter) ->$/;"	f	module:lager
trace_console	src/lager/lager.erl	/^trace_console(Filter, Level) ->$/;"	f	module:lager
trace_file	deps/lager-master/src/lager.erl	/^trace_file(File, Filter) ->$/;"	f	module:lager
trace_file	deps/lager-master/src/lager.erl	/^trace_file(File, Filter, Level) when is_atom(Level) ->$/;"	f	module:lager
trace_file	deps/lager-master/src/lager.erl	/^trace_file(File, Filter, Level, Options) ->$/;"	f	module:lager
trace_file	deps/lager-master/src/lager.erl	/^trace_file(File, Filter, Options) when is_list(Options) ->$/;"	f	module:lager
trace_file	src/lager/lager.erl	/^trace_file(File, Filter) ->$/;"	f	module:lager
trace_file	src/lager/lager.erl	/^trace_file(File, Filter, Level) when is_atom(Level) ->$/;"	f	module:lager
trace_file	src/lager/lager.erl	/^trace_file(File, Filter, Level, Options) ->$/;"	f	module:lager
trace_file	src/lager/lager.erl	/^trace_file(File, Filter, Options) when is_list(Options) ->$/;"	f	module:lager
trace_filter	deps/lager-master/src/lager_util.erl	/^trace_filter(Module, Query) when Query == none; Query == [] ->$/;"	f	module:lager_util
trace_filter	deps/lager-master/src/lager_util.erl	/^trace_filter(Module, Query) when is_list(Query) ->$/;"	f	module:lager_util
trace_filter	deps/lager-master/src/lager_util.erl	/^trace_filter(Query) ->$/;"	f	module:lager_util
trace_filter	src/lager/lager_util.erl	/^trace_filter(Module, Query) when Query == none; Query == [] ->$/;"	f	module:lager_util
trace_filter	src/lager/lager_util.erl	/^trace_filter(Module, Query) when is_list(Query) ->$/;"	f	module:lager_util
trace_filter	src/lager/lager_util.erl	/^trace_filter(Query) ->$/;"	f	module:lager_util
transaction	deps/mysql/mysql.erl	/^transaction(PoolId, Fun) ->$/;"	f	module:mysql
transaction	deps/mysql/mysql.erl	/^transaction(PoolId, Fun, Timeout) ->$/;"	f	module:mysql
transaction	deps/mysql/mysql_conn.erl	/^transaction(Pid, Fun, From) ->$/;"	f	module:mysql_conn
transaction	deps/mysql/mysql_conn.erl	/^transaction(Pid, Fun, From, Timeout) ->$/;"	f	module:mysql_conn
transaction	src/mysql/mysql.erl	/^transaction(PoolId, Fun) ->$/;"	f	module:mysql
transaction	src/mysql/mysql.erl	/^transaction(PoolId, Fun, Timeout) ->$/;"	f	module:mysql
transaction	src/mysql/mysql_conn.erl	/^transaction(Pid, Fun, From) ->$/;"	f	module:mysql_conn
transaction	src/mysql/mysql_conn.erl	/^transaction(Pid, Fun, From, Timeout) ->$/;"	f	module:mysql_conn
transform	myfile/mmake.erl	/^transform([Mod|Emake],Opts,Files,Already) ->$/;"	f	module:mmake
transform	myfile/mmake.erl	/^transform([],_Opts,Files,_Already) ->$/;"	f	module:mmake
transform	myfile/mmake.erl	/^transform([{Mod,ModOpts}|Emake],Opts,Files,Already) ->$/;"	f	module:mmake
transform	src/misc/mmake.erl	/^transform([Mod|Emake],Opts,Files,Already) ->$/;"	f	module:mmake
transform	src/misc/mmake.erl	/^transform([],_Opts,Files,_Already) ->$/;"	f	module:mmake
transform	src/misc/mmake.erl	/^transform([{Mod,ModOpts}|Emake],Opts,Files,Already) ->$/;"	f	module:mmake
transform_statement	deps/lager-master/src/lager_transform.erl	/^transform_statement(Stmt) ->$/;"	f	module:lager_transform
transform_statement	deps/lager-master/src/lager_transform.erl	/^transform_statement(Stmt) when is_list(Stmt) ->$/;"	f	module:lager_transform
transform_statement	deps/lager-master/src/lager_transform.erl	/^transform_statement(Stmt) when is_tuple(Stmt) ->$/;"	f	module:lager_transform
transform_statement	deps/lager-master/src/lager_transform.erl	/^transform_statement({call, Line, {remote, Line1, {atom, Line2, boston_lager},$/;"	f	module:lager_transform
transform_statement	deps/lager-master/src/lager_transform.erl	/^transform_statement({call, Line, {remote, _Line1, {atom, _Line2, lager},$/;"	f	module:lager_transform
transform_statement	src/lager/lager_transform.erl	/^transform_statement(Stmt) ->$/;"	f	module:lager_transform
transform_statement	src/lager/lager_transform.erl	/^transform_statement(Stmt) when is_list(Stmt) ->$/;"	f	module:lager_transform
transform_statement	src/lager/lager_transform.erl	/^transform_statement(Stmt) when is_tuple(Stmt) ->$/;"	f	module:lager_transform
transform_statement	src/lager/lager_transform.erl	/^transform_statement({call, Line, {remote, Line1, {atom, Line2, boston_lager},$/;"	f	module:lager_transform
transform_statement	src/lager/lager_transform.erl	/^transform_statement({call, Line, {remote, _Line1, {atom, _Line2, lager},$/;"	f	module:lager_transform
trunc_io_eqc	deps/lager-master/test/trunc_io_eqc.erl	/^-module(trunc_io_eqc).$/;"	m
tuple_contents	deps/lager-master/src/lager_trunc_io.erl	/^tuple_contents(Tuple, Max, Options) ->$/;"	f	module:lager_trunc_io
tuple_contents	src/lager/lager_trunc_io.erl	/^tuple_contents(Tuple, Max, Options) ->$/;"	f	module:lager_trunc_io
tuple_printing_test	deps/lager-master/src/lager_trunc_io.erl	/^tuple_printing_test() ->$/;"	f	module:lager_trunc_io
tuple_printing_test	src/lager/lager_trunc_io.erl	/^tuple_printing_test() ->$/;"	f	module:lager_trunc_io
two_digits	deps/mysql/mysql.erl	/^two_digits(Num) ->$/;"	f	module:mysql
two_digits	deps/mysql/mysql.erl	/^two_digits(Nums) when is_list(Nums) ->$/;"	f	module:mysql
two_digits	src/mysql/emysql/emysql_conn.erl	/^two_digits(Num) ->$/;"	f	module:emysql_conn
two_digits	src/mysql/emysql/emysql_conn.erl	/^two_digits(Nums) when is_list(Nums) ->$/;"	f	module:emysql_conn
two_digits	src/mysql/mysql.erl	/^two_digits(Num) ->$/;"	f	module:mysql
two_digits	src/mysql/mysql.erl	/^two_digits(Nums) when is_list(Nums) ->$/;"	f	module:mysql
type_cast_row_data	src/mysql/emysql/emysql_tcp.erl	/^type_cast_row_data(Data, #field{decoder = F}) -> F(Data).$/;"	f	module:emysql_tcp
type_cast_row_data	src/mysql/emysql/emysql_tcp.erl	/^type_cast_row_data(undefined, _) -> undefined;$/;"	f	module:emysql_tcp
unicode_test	deps/lager-master/src/lager_trunc_io.erl	/^unicode_test() ->$/;"	f	module:lager_trunc_io
unicode_test	src/lager/lager_trunc_io.erl	/^unicode_test() ->$/;"	f	module:lager_trunc_io
uniconv	deps/lager-master/src/lager_format.erl	/^uniconv(C) ->$/;"	f	module:lager_format
uniconv	src/lager/lager_format.erl	/^uniconv(C) ->$/;"	f	module:lager_format
unprefixed_integer	deps/lager-master/src/lager_format.erl	/^unprefixed_integer(Int, F, Adj, Base, Pad, Lowercase)$/;"	f	module:lager_format
unprefixed_integer	src/lager/lager_format.erl	/^unprefixed_integer(Int, F, Adj, Base, Pad, Lowercase)$/;"	f	module:lager_format
unprepare	deps/mysql/mysql.erl	/^unprepare(Name) ->$/;"	f	module:mysql
unprepare	src/mysql/emysql/emysql_conn.erl	/^unprepare(Connection, Name) ->$/;"	f	module:emysql_conn
unprepare	src/mysql/emysql/emysql_conn.erl	/^unprepare(Connection, Name) when is_atom(Name)->$/;"	f	module:emysql_conn
unprepare	src/mysql/mysql.erl	/^unprepare(Name) ->$/;"	f	module:mysql
update	deps/mysql/db_util.erl	/^update(Table,Fields,WhereFields) ->$/;"	f	module:db_util
update	src/mysql/db_util.erl	/^update(Table,Fields,WhereFields) ->$/;"	f	module:db_util
update	src/mysql/emysql/edb_util.erl	/^update(Table,Fields,WhereFields) ->$/;"	f	module:db_util
update_loglevel_config	deps/lager-master/src/lager.erl	/^update_loglevel_config() ->$/;"	f	module:lager
update_loglevel_config	src/lager/lager.erl	/^update_loglevel_config() ->$/;"	f	module:lager
util	src/misc/util.erl	/^-module(util).$/;"	m
validate_logfile_proplist	deps/lager-master/src/lager_file_backend.erl	/^validate_logfile_proplist(List) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager-master/src/lager_file_backend.erl	/^validate_logfile_proplist([Other|_Tail], _Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager-master/src/lager_file_backend.erl	/^validate_logfile_proplist([], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager-master/src/lager_file_backend.erl	/^validate_logfile_proplist([{check_interval, CheckInt}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager-master/src/lager_file_backend.erl	/^validate_logfile_proplist([{count, Count}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager-master/src/lager_file_backend.erl	/^validate_logfile_proplist([{date, Date}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager-master/src/lager_file_backend.erl	/^validate_logfile_proplist([{file, File}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager-master/src/lager_file_backend.erl	/^validate_logfile_proplist([{formatter, Fmt}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager-master/src/lager_file_backend.erl	/^validate_logfile_proplist([{formatter_config, FmtCfg}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager-master/src/lager_file_backend.erl	/^validate_logfile_proplist([{level, Level}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager-master/src/lager_file_backend.erl	/^validate_logfile_proplist([{size, Size}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager-master/src/lager_file_backend.erl	/^validate_logfile_proplist([{sync_interval, SyncInt}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager-master/src/lager_file_backend.erl	/^validate_logfile_proplist([{sync_on, Level}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	deps/lager-master/src/lager_file_backend.erl	/^validate_logfile_proplist([{sync_size, SyncSize}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	src/lager/lager_file_backend.erl	/^validate_logfile_proplist(List) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	src/lager/lager_file_backend.erl	/^validate_logfile_proplist([Other|_Tail], _Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	src/lager/lager_file_backend.erl	/^validate_logfile_proplist([], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	src/lager/lager_file_backend.erl	/^validate_logfile_proplist([{check_interval, CheckInt}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	src/lager/lager_file_backend.erl	/^validate_logfile_proplist([{count, Count}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	src/lager/lager_file_backend.erl	/^validate_logfile_proplist([{date, Date}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	src/lager/lager_file_backend.erl	/^validate_logfile_proplist([{file, File}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	src/lager/lager_file_backend.erl	/^validate_logfile_proplist([{formatter, Fmt}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	src/lager/lager_file_backend.erl	/^validate_logfile_proplist([{formatter_config, FmtCfg}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	src/lager/lager_file_backend.erl	/^validate_logfile_proplist([{level, Level}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	src/lager/lager_file_backend.erl	/^validate_logfile_proplist([{size, Size}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	src/lager/lager_file_backend.erl	/^validate_logfile_proplist([{sync_interval, SyncInt}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	src/lager/lager_file_backend.erl	/^validate_logfile_proplist([{sync_on, Level}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_logfile_proplist	src/lager/lager_file_backend.erl	/^validate_logfile_proplist([{sync_size, SyncSize}|Tail], Acc) ->$/;"	f	module:lager_file_backend
validate_loglevel	deps/lager-master/src/lager_file_backend.erl	/^validate_loglevel(Level) ->$/;"	f	module:lager_file_backend
validate_loglevel	src/lager/lager_file_backend.erl	/^validate_loglevel(Level) ->$/;"	f	module:lager_file_backend
validate_trace	deps/lager-master/src/lager_util.erl	/^validate_trace(_) ->$/;"	f	module:lager_util
validate_trace	deps/lager-master/src/lager_util.erl	/^validate_trace({Filter, Level, Destination}) when is_tuple(Filter); is_list(Filter), is_atom(Level), is_atom(Destination) ->$/;"	f	module:lager_util
validate_trace	deps/lager-master/src/lager_util.erl	/^validate_trace({Filter, Level, {Destination, ID}}) when is_tuple(Filter); is_list(Filter), is_atom(Level), is_atom(Destination) ->$/;"	f	module:lager_util
validate_trace	src/lager/lager_util.erl	/^validate_trace(_) ->$/;"	f	module:lager_util
validate_trace	src/lager/lager_util.erl	/^validate_trace({Filter, Level, Destination}) when is_tuple(Filter); is_list(Filter), is_atom(Level), is_atom(Destination) ->$/;"	f	module:lager_util
validate_trace	src/lager/lager_util.erl	/^validate_trace({Filter, Level, {Destination, ID}}) when is_tuple(Filter); is_list(Filter), is_atom(Level), is_atom(Destination) ->$/;"	f	module:lager_util
validate_trace_filter	deps/lager-master/src/lager_util.erl	/^validate_trace_filter(Filter) ->$/;"	f	module:lager_util
validate_trace_filter	deps/lager-master/src/lager_util.erl	/^validate_trace_filter(Filter) when is_tuple(Filter), is_atom(element(1, Filter)) =:= false ->$/;"	f	module:lager_util
validate_trace_filter	src/lager/lager_util.erl	/^validate_trace_filter(Filter) ->$/;"	f	module:lager_util
validate_trace_filter	src/lager/lager_util.erl	/^validate_trace_filter(Filter) when is_tuple(Filter), is_atom(element(1, Filter)) =:= false ->$/;"	f	module:lager_util
version	deps/mysql/db_sql.erl	/^version() ->$/;"	f	module:db_sql
version	src/mysql/db_sql.erl	/^version() ->$/;"	f	module:db_sql
version	src/mysql/emysql/emysql_statements.erl	/^version(ConnId, StmtName) ->$/;"	f	module:emysql_statements
version_sql	deps/mysql/db_version.erl	/^version_sql(1) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(43) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(44) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(45) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(46) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(47) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(48) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(49) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(50) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(51) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(52) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(53) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(54) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(55) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(56) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(57) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(58) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(59) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(60) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(61) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(62) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(63) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(64) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(65) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(66) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(67) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(68) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(69) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(70) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(71) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(72) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(73) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(74) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(75) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(76) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(77) ->$/;"	f	module:db_version
version_sql	deps/mysql/db_version.erl	/^version_sql(N) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(1) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(43) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(44) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(45) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(46) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(47) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(48) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(49) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(50) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(51) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(52) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(53) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(54) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(55) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(56) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(57) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(58) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(59) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(60) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(61) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(62) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(63) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(64) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(65) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(66) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(67) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(68) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(69) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(70) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(71) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(72) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(73) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(74) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(75) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(76) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(77) ->$/;"	f	module:db_version
version_sql	src/mysql/db_version.erl	/^version_sql(N) ->$/;"	f	module:db_version
wait_for_connection	src/mysql/emysql/emysql_conn_mgr.erl	/^wait_for_connection(PoolId ,Timeout)->$/;"	f	module:emysql_conn_mgr
wait_for_connection	src/mysql/emysql/emysql_conn_mgr.erl	/^wait_for_connection(PoolId)->$/;"	f	module:emysql_conn_mgr
walk_ast	deps/lager-master/src/lager_transform.erl	/^walk_ast(Acc, [H|T]) ->$/;"	f	module:lager_transform
walk_ast	deps/lager-master/src/lager_transform.erl	/^walk_ast(Acc, []) ->$/;"	f	module:lager_transform
walk_ast	deps/lager-master/src/lager_transform.erl	/^walk_ast(Acc, [{attribute, _, module, Module}=H|T]) ->$/;"	f	module:lager_transform
walk_ast	deps/lager-master/src/lager_transform.erl	/^walk_ast(Acc, [{attribute, _, module, {Module, _PmodArgs}}=H|T]) ->$/;"	f	module:lager_transform
walk_ast	deps/lager-master/src/lager_transform.erl	/^walk_ast(Acc, [{attribute, _, record, {Name, Fields}}=H|T]) ->$/;"	f	module:lager_transform
walk_ast	deps/lager-master/src/lager_transform.erl	/^walk_ast(Acc, [{function, Line, Name, Arity, Clauses}|T]) ->$/;"	f	module:lager_transform
walk_ast	src/lager/lager_transform.erl	/^walk_ast(Acc, [H|T]) ->$/;"	f	module:lager_transform
walk_ast	src/lager/lager_transform.erl	/^walk_ast(Acc, []) ->$/;"	f	module:lager_transform
walk_ast	src/lager/lager_transform.erl	/^walk_ast(Acc, [{attribute, _, module, Module}=H|T]) ->$/;"	f	module:lager_transform
walk_ast	src/lager/lager_transform.erl	/^walk_ast(Acc, [{attribute, _, module, {Module, _PmodArgs}}=H|T]) ->$/;"	f	module:lager_transform
walk_ast	src/lager/lager_transform.erl	/^walk_ast(Acc, [{attribute, _, record, {Name, Fields}}=H|T]) ->$/;"	f	module:lager_transform
walk_ast	src/lager/lager_transform.erl	/^walk_ast(Acc, [{function, Line, Name, Arity, Clauses}|T]) ->$/;"	f	module:lager_transform
walk_body	deps/lager-master/src/lager_transform.erl	/^walk_body(Acc, [H|T]) ->$/;"	f	module:lager_transform
walk_body	deps/lager-master/src/lager_transform.erl	/^walk_body(Acc, []) ->$/;"	f	module:lager_transform
walk_body	src/lager/lager_transform.erl	/^walk_body(Acc, [H|T]) ->$/;"	f	module:lager_transform
walk_body	src/lager/lager_transform.erl	/^walk_body(Acc, []) ->$/;"	f	module:lager_transform
walk_clauses	deps/lager-master/src/lager_transform.erl	/^walk_clauses(Acc, []) ->$/;"	f	module:lager_transform
walk_clauses	deps/lager-master/src/lager_transform.erl	/^walk_clauses(Acc, [{clause, Line, Arguments, Guards, Body}|T]) ->$/;"	f	module:lager_transform
walk_clauses	src/lager/lager_transform.erl	/^walk_clauses(Acc, []) ->$/;"	f	module:lager_transform
walk_clauses	src/lager/lager_transform.erl	/^walk_clauses(Acc, [{clause, Line, Arguments, Guards, Body}|T]) ->$/;"	f	module:lager_transform
warning_msg	deps/lager-master/test/sync_error_logger.erl	/^warning_msg(Format) ->$/;"	f	module:sync_error_logger
warning_msg	deps/lager-master/test/sync_error_logger.erl	/^warning_msg(Format, Args) ->$/;"	f	module:sync_error_logger
warning_msg_tag	deps/lager-master/test/sync_error_logger.erl	/^warning_msg_tag() ->$/;"	f	module:sync_error_logger
warning_report	deps/lager-master/test/sync_error_logger.erl	/^warning_report(Report) ->$/;"	f	module:sync_error_logger
warning_report	deps/lager-master/test/sync_error_logger.erl	/^warning_report(Type, Report) ->$/;"	f	module:sync_error_logger
warning_report_tag	deps/lager-master/test/sync_error_logger.erl	/^warning_report_tag(Type) ->$/;"	f	module:sync_error_logger
wg_dynamic_config	src/misc/wg_dynamic_config.erl	/^-module(wg_dynamic_config).$/;"	m
with_next_conn	deps/mysql/mysql.erl	/^with_next_conn(PoolId, State, Fun) ->$/;"	f	module:mysql
with_next_conn	src/mysql/mysql.erl	/^with_next_conn(PoolId, State, Fun) ->$/;"	f	module:mysql
worker_loop	src/mysql/emysql/emysql_worker.erl	/^worker_loop(Module, Pool) ->$/;"	f	module:emysql_worker
write	deps/lager-master/src/lager_file_backend.erl	/^write(#state{name=Name, fd=FD, inode=Inode, flap=Flap, size=RotSize,$/;"	f	module:lager_file_backend
write	src/lager/lager_file_backend.erl	/^write(#state{name=Name, fd=FD, inode=Inode, flap=Flap, size=RotSize,$/;"	f	module:lager_file_backend
write_event	src/logger/logger_h.erl	/^write_event(Fd, {Time, {emulator, _GL, Chars}}) ->$/;"	f	module:logger_h
write_event	src/logger/logger_h.erl	/^write_event(Fd, {Time, {error, _GL, {Pid, Format, Args}}}) ->$/;"	f	module:logger_h
write_event	src/logger/logger_h.erl	/^write_event(Fd, {Time, {error_report, _GL, {Pid, std_error, Rep}}}) ->$/;"	f	module:logger_h
write_event	src/logger/logger_h.erl	/^write_event(Fd, {Time, {info, _GL, {Pid, Info, _}}}) ->$/;"	f	module:logger_h
write_event	src/logger/logger_h.erl	/^write_event(Fd, {Time, {info_msg, _GL, {Pid, Format, Args}}}) ->$/;"	f	module:logger_h
write_event	src/logger/logger_h.erl	/^write_event(Fd, {Time, {info_report, _GL, {Pid, std_info, Rep}}}) ->$/;"	f	module:logger_h
write_event	src/logger/logger_h.erl	/^write_event(_, _) ->$/;"	f	module:logger_h
write_log	src/logger/logger_h.erl	/^write_log(Fd,Msg) ->$/;"	f	module:logger_h
write_time	deps/lager-master/src/lager_stdlib.erl	/^write_time({utc,{{Y,Mo,D},{H,Mi,S}}},Type) ->$/;"	f	module:lager_stdlib
write_time	deps/lager-master/src/lager_stdlib.erl	/^write_time({{Y,Mo,D},{H,Mi,S}},Type) ->$/;"	f	module:lager_stdlib
write_time	src/lager/lager_stdlib.erl	/^write_time({utc,{{Y,Mo,D},{H,Mi,S}}},Type) ->$/;"	f	module:lager_stdlib
write_time	src/lager/lager_stdlib.erl	/^write_time({{Y,Mo,D},{H,Mi,S}},Type) ->$/;"	f	module:lager_stdlib
write_time	src/logger/logger_h.erl	/^write_time(Time) -> write_time(Time, "ERROR REPORT").$/;"	f	module:logger_h
write_time	src/logger/logger_h.erl	/^write_time({{Y,Mo,D},{H,Mi,S}}, Type) ->$/;"	f	module:logger_h
zip	deps/lager-master/src/lager.erl	/^zip([FieldName|RecordFields], [FieldValue|Record], Module, ToReturn) ->$/;"	f	module:lager
zip	deps/lager-master/src/lager.erl	/^zip([], [], _Module, ToReturn) ->$/;"	f	module:lager
zip	src/lager/lager.erl	/^zip([FieldName|RecordFields], [FieldValue|Record], Module, ToReturn) ->$/;"	f	module:lager
zip	src/lager/lager.erl	/^zip([], [], _Module, ToReturn) ->$/;"	f	module:lager
